function closePrototips() { $$('.prototip').each((t) => {t.hide()}) } function commentFormSubmitting(t) { t && ($j('#comment_form_error').hide(), $j('#errorExplanation').hide()), $j('#comment_form_saving').toggle(t), $j('#comment_form_saving2').toggle(t) } function commentFormSaveError(t) { var e = t.responseText ? t.responseText:''; commentFormSubmitting(!1), $j('#comment_form_error_detail').text(e), $j('#comment_form_error').show() } function shareOnTwitter(t) { Lightbox.showBoxByID('publishTwitterReview_'+t) } function submitShelfButton(t, e, i, o, n, s) { var a = new SubmitShelfButtonHandler(t, e, i, o, n, s); a.sendRequest() } function onVote(t, e) { document.getElementById('yes_link'+t).style.color = 1 == e ? "#d7d7d7":'#006699'} function checkAll(form, uncheck) { for (form = eval('document.'+form), i = 0; i < form.length; i++)'checkbox'==form[i].type && (form[i].checked = uncheck ? "":'checked') } function onInviteChooseSubmit(t) { var e = countChecked('scraperInvites', !0); var i = countChecked('scraperInvites', !1); if (e > t || 0 == i) { try { Element.show('inviteConfirm'), Element.update('inviteConfirmCount', e + " ") } catch (o) { return confirm('Are you sure you would like to invite all the checked contacts?') } return !1 } return !0 } function countChecked(form, countChecked) { null == countChecked && (countChecked = !0); var count = 0; for (form = eval('document.'+form), i = 0; i < form.length; i++)'checkbox'==form[i].type && (form[i].checked && countChecked || !form[i].checked && !countChecked) && count++; return count;} function countChars(t, e) { var i = Event.element(t); var o = parseInt(i.getAttribute('maxlength')) - i.value.length; e = e || "characterCount"; var n = e.match(/^[#\.]/) ? $$(e)[0]:$(e); n.innerHTML = o + " characters left" } function chopChars(t) { var e = Event.element(t); var i = parseInt(e.getAttribute('maxlength')); return i<=0?void alert('maxlength was not defined!'):(e.value = e.value.slice(0, i - 1), !0);} function onTableRowClick(checkbox_name, row_id) { element = eval(checkbox_name), element.checked = element.checked ? "":'checked', row = document.getElementById(row_id); for (let i = 0; i < row.cells.length; i++)row.cells[i].style.backgroundColor = element.checked ? "#EBE8D5":'white'} function onTableRowHover(checkbox_name, row_id, over) { if (element = eval(checkbox_name), !element.checked) { row = document.getElementById(row_id); for (let i = 0; i < row.cells.length; i++)row.cells[i].style.backgroundColor = over ? "#EBE8D5":'white'} } function setReadAt(t) { var t = t || {}; if (t.field_id_prefix = t.field_id_prefix || "review_read_at", !t.parent && t.link && (t.parent = $(t.link).up('.formField') || $(t.link).up('form')), t.parent) var e = $(t.parent).down('#'+t.field_id_prefix + "_1i"); var i=$(t.parent).down("#"+t.field_id_prefix+"_2i"); var o = $(t.parent).down('#'+t.field_id_prefix + "_3i"); else var e = $(`${t.field_id_prefix}_1i`); var i=$(t.field_id_prefix+"_2i"); var o = $(`${t.field_id_prefix}_3i`); if (t.clear)e.setValue(0), i.setValue(0), o.setValue(0); else { if (t.date && "string"===typeof t.date) { var n = t.date.match(/(\d+)-(\d+)-(\d+)/); if (n) { var s = parseInt(n[1]); var a=parseInt(n[2].replace(/^0+/,""))-1; var r = parseInt(n[3].replace(/^0+/, "")); t.date = new Date(s, a, r);} else t.date = new Date(t.date) } var l = t.date ? t.date:new Date(); e.setValue(l.getYear() + (l.getYear() < 1900 ? 1900:0)), i.setValue(l.getMonth() + 1), o.setValue(l.getDate()) }e.down(e.selectedIndex).setAttribute('selected', "selected"), i.down(i.selectedIndex).setAttribute('selected', "selected"), o.down(o.selectedIndex).setAttribute('selected', "selected") } function readingProgressChanged() { var t = document.user_status_form; var e = t.user_status_book_id; t.user_status_body.value = "", t.user_status_body.className = "", t.user_status_page.value = "", t.user_status_percent.value = "", e && "0" == e.value ? (Element.hide('user_status_page_container'), Element.hide('user_status_percent_container')):(Element.show('user_status_page_container'), Element.hide('user_status_percent_container'));} function keyPressWithoutSubmit(t, e, i) { var o; return window.event ? o = e.keyCode:e.which && (o = e.which), o == Event.KEY_RETURN ? ('function'==typeof i && i(t, e), !1):!0 } function addSortable(t, e) { Event.observe(window, "load", function () { Sortable.create(t, { onUpdate: function (i) { new Ajax.Request(e, { parameters: Sortable.serialize(t), onLoading: function () { $$('.sortable_controls input').invoke('hide'), $$('.sortable_controls .position_loading').invoke('show');}, onComplete: function () { $$('.sortable_controls input').invoke('show'), $$('.sortable_controls .position_loading').invoke('hide') } }) } }), window.originalSequence = Sortable.sequence(t) }) } function commaFormatted(t) { t = t.toString(); var e = ","; var i=t.split(".",2); var o=i[1]; var n = parseInt(i[0]); if (isNaN(n)) return ""; var s = ""; 0 > n && (s = "-"), n = Math.abs(n); for (var a = new String(n), i = []; a.length > 3;) { var r = a.substr(a.length - 3); i.unshift(r), a = a.substr(0, a.length - 3) } return a.length > 0 && i.unshift(a), a = i.join(e), t = !o || o.length < 1 ? a:`${a}.${o}`, t = s + t } function luhn_check(t) { var t = t.replace(/\D/g, ""); var e=t.length; var o=e%2; var n = 0; for (i = 0; i < e; i++) { var s = t.charAt(i); i % 2 == o && (s = 2 * s, s > 9 && (s -= 9)), n += parseInt(s);} return n % 10 == 0 ? !0:!1;} function toggleRadioExtras(t, e, i) { if ('undefined'==typeof e) var e = "radioExtra"; "undefined"===typeof i ? $$('.'+e).invoke('hide'):i.descendants().each((t) => {t.match("."+e)&&t.hide()}); var o = $(t).next('.'+e); "undefined"!==typeof o && o.show();} function toShelfName(t) { var e = t.toLowerCase().replace(/\W/g, "-"); return e = e.replace(/\-+$/, "").slice(0, 35);} function saveShelfPosition(t) { var e = $('positions_'+t).value; new Ajax.Request('/shelf/move_to_position/', {
parameters: { id: t, position: e }, onLoading: function () { $('position_loading_'+t).show(), $('positions_'+t).hide(), Tips.hideAll() }, onComplete: function (e) { $('moveToPosEdit'+t).hide(), Tips.hideAll() }, onFailure: function () { alert('Something went wrong re-ordering those shelves.') }
});} function renderRatingGraph(t, e) { if (Prototype.Browser.IE) return null; var i = 16; var o=15; var n=$A(t).max(); var s = (new pv.Panel()).width(i).height(o); return e && s.canvas(e), s.add(pv.Bar).data(t).top(function () { return 3 * this.index }).width((t) => {return i*t/n})
.height(2)
.left(0)
.fillStyle('#215625'), s.render(), s } function afterShelfSave(t, e, i, o) { document.getElementById(t); Element.update(e, o), Element.hide('add_button_'+i), Element.show('added_message_'+i), "function"===typeof afterShelfSaveCallback && afterShelfSaveCallback.apply(this, arguments) } function refreshGroupBoxComplete(t, e) { Element.update('addGroupBooks'+e, t.responseText);} function addShelfRequest(t, e) { var i = "/shelf/add_to_shelf/?book_id=" + e; return _shelfRequest(i, "name", e, t) } function newShelfRequest(t, e, i) { var o = "/user_shelf" + t; return _shelfRequest(o, "user_shelf[name]", e, i || t) } function _shelfRequest(t, e, i, o) { var n = $('addShelfAjaxForm'+i); return n || (n = $('addShelfForm'+o)), new Ajax.Request(t, { asynchronous: !0, evalScripts: !0, onComplete: function (t) { n && n.update('refreshing shelves...'), updateShelfSelect(o, i);}, onLoading: function (t) { n && n.update('saving...') }, parameters: e + "=" + $('newShelfField'+o).value
}), !1 } function isShowingBuyableFeatures() { return source = Cookies.get('source'), -1 == $j.inArray(source, sourcesToHideBuyFeatures) } function showBuyableFeatures() { isShowingBuyableFeatures() && $j('.buyableFeature').removeClass('buyableFeature');} function swapContent(t) { var e = $j(t).data('text-id'); var i=$j(t).siblings("#freeTextContainer"+e); var o = $j(t).siblings('#freeText'+e); "none" == i.css('display') ? swapElements(i, o, t):'none'==o.css('display') && swapElements(o, i, t) } function swapElements(t, e, i) { t.show(), e.hide(), "...more" == $j(i).text() ? $j(i).text('(less)'):$j(i).text('...more') } function select_all_suspicious_users() { alert('Careful. You are about to select every suspicious user on this page.'), $j('#usersCreatedRecently .userDeleteCheckbox.suspicious').each((t) => {t.writeAttribute("checked",!0),t.up("tr").highlight()}) } function deselect_all_users() { $j('#usersCreatedRecently .userDeleteCheckbox').each((t) => {t.writeAttribute("checked",!1),t.up("tr").highlight()}) } function updateSpamResultItemStyling() { $j('.spamResultItemCheckbox').each(function () { this.checked ? $j(this).closest('li').first().addClass('selectedItem'):$j(this).closest('li').first().removeClass('selectedItem') });} function enableAll(t) { $$(t).each((t) => {t.enableButtons()}) } function changeQuote() { var t = $j('#quotes'); if (t!=null) { var e = t.children(); null != e && (e.eq(selected_quote).fadeOut(), selected_quote = (selected_quote + 1) % e.size(), setTimeout(() => {e.eq(selected_quote).fadeIn()}, 900)) } } function submitMetadataAnswer(t, e) { link_text = $('submit_'+t).innerHTML, iVote = parseInt(link_text), new Ajax.Request(e, { parameters: { wm: t }, onSuccess: function (e) { acText = $('answer_counter_'+t).innerHTML, newText = (parseInt(acText) + iVote).toString(), $('answer_counter_'+t).innerHTML = newText, "0" == newText && $('answer_line_'+t).hide(), newLink = -1 == iVote ? "+1":'-1', $('submit_'+t).innerHTML = newLink, e.responseText.length > 0 && (old_id = parseInt(e.responseText), oldLink = -1 == iVote ? "-1":'+1', $('submit_'+old_id).innerHTML = oldLink, oldText = (parseInt($('answer_counter_'+old_id).innerHTML) + -1 * iVote).toString(), $('answer_counter_'+old_id).innerHTML = oldText, "0" == oldText && $('answer_line_'+old_id).hide()) } }) } function quizFriendInviteSuccess(t) { t.replaceWith('<span class=friendInviteSuccess>invite sent</span>') } function getGenre() { var t = location.hash.replace('#', ""); return "" == t ? null:t } function setGenre(t) { location.hash = t;} function activateRateBooksMoreGenreLnk() { var t = $('rateBooksMoreGenreLnk'); null != t && t.observe('click', function (e) { t.hide(), $('moreGenreLoading').show(), new Ajax.Request(t.href, { method: "GET" }), e.stop() }) } function rateBooksToGenre(t, e) { new Ajax.Request(e, { method: "GET", onLoading: function () { setGenre(t), window.scroll(0, 0), $('rateBooksList').update("<div class='loadingPageImage'></div>"), $$('.navRow a').each((t) => {t.removeClassName("selected")}), $('nav_to_'+t).addClassName('selected') }, onComplete: function () { activateRateBooksMoreGenreLnk(), "amazon_purchase_import" === t && updateAmazonPurchaseImportUI(), WantToRead.resetShelfMenuStored();} }) } function activateUndoNoRecsLink(t) { t.observe('click', function (e) { t.hide(), t.up('div').down('img.loading').show(), t.up('form').request(), e.stop();}) } function showRenameForm(t) { var e = t.closest('.displayShelfName'); var i=e.parent(); var o = i.find('.renameUserShelf'); e.hide(), o.show() } function hideRenameForm(t) { var e = t.closest('.renameUserShelf'); var i=e.parent(); var o = i.find('.displayShelfName'); e.hide(), o.show() } function submitRenameShelf(t) { var e = t.find('.renameUserShelfTxt'); var i = e.val(); null != i && "" != i && jQuery.post(t.attr('action'), t.serialize(), function () { hideRenameForm(t);});} function activateExpandDetailsLinks() { $$('.workEditions .detailsLink').each((t) => {t.observe("click",function(e){return editionDataElem=t.up(".editionData"),moreDetailsElem=editionDataElem.down(".moreDetails"),moreDetailsElem.hasClassName("hideDetails")?(moreDetailsElem.removeClassName("hideDetails"),t.update("less detail")):(moreDetailsElem.addClassName("hideDetails"),t.update("more detail")),e.stop(),!1})});} var kindleCloudReaderAutoResize = function () { var t = .9 * $j(window).width(); var e = .9 * $j(window).height(); Lightbox.setLightboxDimensions(t, e), $j('#box .kindleCloudReader iframe').css('height', e - 40 + "px"), Lightbox.center('box') }; var kindleCloudReaderOpen=function(t){t.preventDefault();var e=$j(this).data("book-id"),i="kindleCloudReaderBook"+e;Lightbox.showBoxByID(i,970,400,!0);var o=$j("#boxContents"),n=$j("#close"),s={padding:o.css("padding"),margin:o.css("margin")};o.css("padding","0px").css("margin","0px"),n.css("top","13px").css("right","15px");var a=$j("#box .kindleCloudReader iframe"),r=$j(this).attr("href");a.attr("src",r).css({width:"100%",border:"none"}).show(),$j(window).resize(_.debounce(kindleCloudReaderAutoResize,300)),$("box").observe("Lightbox:hideBox",function(){$j(window).off("resize"),setTimeout(function(){o.css(s),n.css("top","5px").css("right","5px")},1e3)});for(var l=location.pathname.split("/"),h="",c=0;c<l.length-1;c++)h+=l[c];$j.post("/track/track",{tid:"preview_button--"+h+"--click"}),kindleCloudReaderAutoResize()}; var showWrongBookKindlePreviewScreen=function(t){t.preventDefault();var e=$j(this).data("book-id");Lightbox.showBoxByID("wrongBookKindlePreviewScreenBook"+e,500,150,!0)}; var hideWrongBookKindlePreviewScreen=function(t){Lightbox.hideBox(),Lightbox.showBoxByID("js-wrongBookKindlePreviewScreenConfirmation")}; var hideWrongBookReportConfirmation = function () { Lightbox.hideBox() }; $j(document).on('click', "#js-kcrPreviewButton", kindleCloudReaderOpen).on('click', ".js-wrongBookKindlePreview", showWrongBookKindlePreviewScreen).on('click', "#js-wrongBookKindlePreviewScreenCancelLink", hideWrongBookReportConfirmation)
.on('click', "#js-wrongBookKindlePreviewScreenConfirmationDismiss", hideWrongBookReportConfirmation)
.on('submit', ".new_kindle_book_mapping_flag", hideWrongBookKindlePreviewScreen)
.on('click', ".syncPreviewButton", function () { $j.post('/track/track_click', { feature: "SyncPreviewButton" });})
.on('click', ".asyncPreviewButton", function () { $j.post('/track/track_click', { feature: "AsyncPreviewButton" });}); var InlineFlash = { _templateString: '<div id="header_#{message_type}_container"><div class="box noticeBox #{extra_classes}"><a href="#" onclick="$(this).up().up().hide()" class="right"><img src=\'/assets/layout/delete.png\' alt=\'Dismiss\' /></a>#{message}</div><br/></div>', showNotice: function (t) { this._showFlash({ message_type: "notice", message: t });}, showError: function (t) { this._showFlash({ message_type: "error", extra_classes: "errorBox", message: t }) }, hideFlash: function () { this.flashContainer || (this.flashContainer = $('flashContainer')), this.flashContainer || (this.flashContainer = $('flashMessageContainer')), this.flashContainer.update('');}, _showFlash: function (t) { this.flashContainer || (this.flashContainer = $('flashContainer')), this.flashContainer || (this.flashContainer = $('flashMessageContainer')), this._template || (this._template = new Template(this._templateString)), this.flashContainer.update(this._template.evaluate(t)) }
}; var SignedOutExperiment=function(t){var e,i=t,o=.04,n=[],s=!0,a=function(t){o=t},r=function(t,e){if(void 0===l(t)){var i={};i.name=t,i.callback=e,n.push(i)}},l=function(t){return $j.grep(n,function(e){return e.name===t})[0]},h=function(){var t=Math.floor(Math.random()*n.length);return n[t]},c=function(){Cookies.set(i+"Cell",e.name,o)},d=function(){if(e=l(Cookies.get(i+"Cell")),void 0!==e)c();else if(s)return e=h(),$j.post("/track/track",{tid:i+"_cell_"+e.name},null,"script").done(function(){c()});return jQuery.Deferred().resolve().promise()},u=function(){s=!1},f=function(){d().done(function(){void 0!==e&&e.callback()})},p=function(){return void 0!==e?e.name:void 0};return{setDurationDays:a,addCell:r,runExperiment:f,preventNewCookie:u,getAssignedCellName:p}}; var gr = {}; reverseMerge = function (t, e) { for (let i in e) void 0 == t[i] && (t[i] = e[i]) }, Element.parent = function (t) { return t.ancestors()[0] }, Element.addMethods({ parent: Element.parent }), $j(document).on('click', ".brown_comment .unblock", function (t) { var e = $j(this).parents('.xhr_blocked'); e.next('span').show(), e.hide(), t.preventDefault();}), $j(document).on('change', ".sharingToggle.twitter", function () { $j(this).toggleClass('checked', $j(this).children('input[type=checkbox]').is(':checked')) }), $j(document).on('click', ".acceptMessage", function (t) { $j('#comment_form').show(), $j('.author_warning_message').hide(), t.preventDefault() }), $j(document).on('click', ".jsShowSpoiler", function (t) { var e = $j(t.target); t.preventDefault(), e.next('.spoilerContainer').show(), e.siblings('.spoilerWarning').hide(), e.hide() }), $j(document).on('click', ".jsHideSpoiler", function (t) { var e = $j(t.target); t.preventDefault(), e.parent().prev('.jsShowSpoiler').show(), e.parent().siblings('.spoilerWarning').show(), e.parent('.spoilerContainer').hide() }); var SubmitShelfButtonHandler = Class.create(); SubmitShelfButtonHandler.prototype = { initialize: function (t, e, i, o, n, s) { this.book_id = t, this.unique_id = n ? n:t, this.url_params = s ? s:{}, this.signed_in = i, this.button = $('to_read_link_'+n), this.wtr_arrow = $('wtr_arrow_'+n), this.check_img_id = o, this.check_img = $(o), this.turn_off = "none" != this.check_img.style.display, this.shelf_name = e, this.button_text = null != this.button ? this.button.innerHTML:''}, sendRequest: function () { if (!this.button || !this.button.hasClassName('ignored')) { var t = "/shelf/add_to_shelf?no_content=true&"; this.turn_off && (t = "/shelf/remove_book?"), this.url_params.book_id = this.book_id, this.url_params.name = this.shelf_name, this.signed_in ? new Ajax.Request(t, { asynchronous: !0, evalScripts: !0, parameters: this.url_params, onComplete: function (t) { this.button && (this.button.update(this.button_text), check_img = $(this.check_img_id), this.turn_off ? (this.button.removeClassName('minor'), check_img.hide(), this.wtr_arrow && this.wtr_arrow.show(), this.button.title = "Add to your " + this.shelf_name + " shelf."):(this.button.addClassName('minor'), check_img.show(), this.button.title = "Remove from your " + this.shelf_name + " shelf.")) }.bind(this), onLoading: function (t) { this.button.update('saving...'), this.wtr_arrow && this.wtr_arrow.hide() }.bind(this)
}):document.location = t } } }; var Popover = Class.create({
initialize: function (t, e) { this.targetID = t, this.containerID = e, $(t).observe('click', this.togglePopover.bindAsEventListener(this)), Popover.popovers.push(this);}, openPopover: function () { return $(this.targetID).addClassName('active'), $(this.containerID).show(), Prototype.Browser.IE && $(this.targetID).up('form').descendants().each((t) => {t.match("select")&&t.hide()}), Event.observe(document, "click", Popover.handleOpenPopoverClicks), !1;}, closePopover: function () { return $(this.targetID).removeClassName('active'), $(this.containerID).hide(), Prototype.Browser.IE && $(this.targetID).up('form').descendants().each((t) => {t.match("select")&&t.show()}), Event.stopObserving(document, "click", Popover.handleOpenPopoverClicks), !1;}, togglePopover: function () { return $(this.targetID).hasClassName('active') ? this.closePopover():this.openPopover(), !1 } }); Popover.popovers = [], Popover.closePopovers = function () { for (let t = Popover.popovers.length - 1; t >= 0; t--)Popover.popovers[t].closePopover(); return !1 }, Popover.handleOpenPopoverClicks = function (t) { return t.target.hasClassName('popoverTarget') || t.target.hasClassName('popoverContainer') || null != t.target.up('.popoverTarget') || null != t.target.up('.popoverContainer') || Popover.closePopovers(), !1 }, function () { var t = { HTMLEvents: /^(?:load|unload|abort|error|select|change|submit|reset|focus|blur|resize|scroll)$/, MouseEvents: /^(?:click|mouse(?:down|up|over|move|out))$/ }; var e = {
pointerX: 0, pointerY: 0, button: 0, ctrlKey: !1, altKey: !1, shiftKey: !1, metaKey: !1, bubbles: !0, cancelable: !0
}; Event.simulate = function (i, o) { var n; var s=Object.extend(e,arguments[2]||{}); var a = null; i = $(i); for (let r in t) if (t[r].test(o)) { a = r; break } if (!a) throw new SyntaxError('Only HTMLEvents and MouseEvents interfaces are supported'); return document.createEvent ? (n = document.createEvent(a), "HTMLEvents" == a ? n.initEvent(o, s.bubbles, s.cancelable):n.initMouseEvent(o, s.bubbles, s.cancelable, document.defaultView, s.button, s.pointerX, s.pointerY, s.pointerX, s.pointerY, s.ctrlKey, s.altKey, s.shiftKey, s.metaKey, s.button, i), i.dispatchEvent(n)):(s.clientX = s.pointerX, s.clientY = s.pointerY, n = Object.extend(document.createEventObject(), s), i.fireEvent('on'+o, n)), i }, Element.addMethods({ simulate: Event.simulate }) }(), function () { Element.scaleToMaxWidth = function (t, e) { t = $(t); var i = t.width; var o = t.height; return t.width > e && (t.width = e, t.height = o / i * e), t;}, Element.scaleToMaxHeight = function (t, e) { t = $(t); var i = t.width; var o = t.height; return t.height > e && (t.height = e, t.width = i / o * e), t }, Element.addMethods({ scaleToMaxWidth: Element.scaleToMaxWidth }), Element.addMethods({ scaleToMaxHeight: Element.scaleToMaxHeight });}(), function () { Element.slideToggle = function (t, e) { return t.visible() ? t.slideUp(e):t.slideDown(e), t }, Element.addMethods({ slideToggle: Element.slideToggle });}(), function () { Element.showFloatingBox = function (t, e) { return t.visible() || ($$('.floatingBox').invoke('hideFloatingBox'), t.show()), document.observe('click', FloatingBox.handleFloatingBoxClicks), t }, Element.hideFloatingBox = function (t, e) { return $(t).visible() ? (t.hide(), document.stopObserving('click', FloatingBox.handleFloatingBoxClicks), t):void 0 }, Element.toggleFloatingBox = function (t, e) { return t.visible() ? t.hideFloatingBox():t.showFloatingBox(), t;}, Element.addMethods({ showFloatingBox: Element.showFloatingBox }), Element.addMethods({ hideFloatingBox: Element.hideFloatingBox }), Element.addMethods({ toggleFloatingBox: Element.toggleFloatingBox }) }(), function () { FloatingBox = {}, FloatingBox.handleFloatingBoxClicks = function (t) { var e = t.element(); e.hasClassName('floatingBox') || e.hasClassName('floatingBoxLink') || null != e.up('.floatingBox') || ($$('.floatingBox').invoke('hideFloatingBox'), document.stopObserving('click', ShelfChooser.handleShelfChooserClicks));} }(), function () { Element.toggleInnerHTML = function (t, e, i) { return t.innerHTML == e ? t.innerHTML = i:t.innerHTML = e, t }, Element.addMethods({ toggleInnerHTML: Element.toggleInnerHTML });}(); var ShelfChooser = Class.create({ initialize: function (t, e, i, o) { this.options = Object.extend(o || {}, this.defaultOptions), this.style = this.options.style || "standard", this.element = t, "string"===typeof this.element && (this.element = $(this.element)), this.shelfNames = i, this.entryCount = i.length, this.bookId = e, this.chosen = this.options.chosen || [], this.chosen.sort(), this.exclusive = this.options.exclusive || [], this.url = this.options.url, this.onEsc = this.options.onEsc, this.afterChoose = this.options.afterChoose, this.beforeSubmit = this.options.beforeSubmit, this.setupMarkup(); var n = "keydown"; (Prototype.Browser.Gecko || Prototype.Browser.Opera) && (n = "keypress"), Event.observe(this.element, n, this.onKeyPress.bindAsEventListener(this)), ShelfChooser.registry.push(this);}, setupMarkup: function () { this.element.addClassName('shelfChooserInput'), this.element.setAttribute('autocomplete', "off"), this.wrapper = this.element.wrap('div', { id: this.wrapperId(), "class": "shelfChooser uitext" }); var t = (this.wrapper, "choose shelves..."); var e="close"; var i = "right greyText"; "kcw2853" === this.style && (t = "Choose shelves...", e = "Close", i = "right"), this.chooseButton = new Element('a', { href: "#", "class": "actionLinkLite chooseShelvesLink" }).update(t), this.wrapper.insert({ top: this.chooseButton }), this.chooseButton.observe('click', this.toggle.bindAsEventListener(this)), this.chooserWrapper = this.element.wrap('div', { id: this.domId('chooser'), "class": "shelfChooserWrapper" }), this.chooserWrapper.hide(); var o = new Element('a', { href: "#", "class": "greyText" }).update(t); this.chooserWrapper.insert({ top: o }), o.observe('click', this.close.bindAsEventListener(this)), o = new Element('a', { href: "#", "class": i }).update(e), this.chooserWrapper.insert({ top: o }), o.observe('click', this.close.bindAsEventListener(this)), this.shelvesWrapper = new Element('ul', { "class": "shelves" }), this.chooserWrapper.insert(this.shelvesWrapper); for (let n = 0; n < this.shelfNames.length; n++) this.shelvesWrapper.insert(this.buildShelfLi(this.shelfNames[n])); this.selectChosen(), this.newShelfButton = new Element('a', { href: "#", "class": "actionLinkLite newShelfButton" }).update('Add <span>new</span> shelf'), this.newShelfButtonLi = new Element('li', { "class": "visible newShelfButtonLi", alt: "_NEWSHELFBUTTON" }), this.newShelfButtonLi.observe('click', this.addNewShelf.bindAsEventListener(this)), this.newShelfButtonLi.appendChild(this.newShelfButton), this.newShelfField = new Element('div'), this.newShelfFieldSubmit = new Element('a', { href: "#", "class": "gr-button gr-button--small" }).update('Add'), this.newShelfFieldSubmit.observe('click', function (t) { return this.addNewShelf(), t.stop(), !1;}.bindAsEventListener(this)), this.newShelfInput = new Element('input', { type: "text" }), this.newShelfInput.observe('keypress', function (t) { return t.keyCode == Event.KEY_RETURN ? (this.addNewShelf(t), t.stop(), !1):void 0 }.bindAsEventListener(this)), this.newShelfField.appendChild(this.newShelfInput), this.newShelfField.appendChild(this.newShelfFieldSubmit), this.newShelfButtonLi.appendChild(this.newShelfField), this.newShelfField.hide(), this.newShelfWrapper = new Element('ul'), this.newShelfWrapper.insert(this.newShelfButtonLi), this.chooserWrapper.insert(this.newShelfWrapper), $j(document).on('touchstart', ".shelfChooserWrapper > .shelves", function (t) { this.shelfMenuScrollStartPos = $j(this).scrollTop() + t.originalEvent.touches[0].pageY }), $j(document).on('touchmove', ".shelfChooserWrapper > .shelves", function (t) { this.scrollTop = this.shelfMenuScrollStartPos - t.originalEvent.touches[0].pageY, t.preventDefault();}), (EnvironmentDetection.android.isICS() || EnvironmentDetection.android.isHC()) && $j('.shelfChooserWrapper > .shelves').css('overflow-y', "hidden"), this.close() }, toggle: function (t) { return this.chooserWrapper.visible() ? this.close(t):this.open(t) }, open: function (t) { return this.chooseButton.hide(), $$('.floatingBox').invoke('hide'), this.chooserWrapper.show(), this.chooserWrapper.addClassName('open floatingBox'), this.element.focus(), document.observe('click', ShelfChooser.handleShelfChooserClicks), "undefined"!==typeof t && t.stop(), !1;}, close: function (t) { return this.chooseButton.show(), this.chooserWrapper.removeClassName('open floatingBox'), this.chooserWrapper.hide(), this.element.clear(), this.unChooseShelf(), this.onObserverEvent(), this.newShelfButton.show(), this.newShelfField.hide(), document.stopObserving('click', ShelfChooser.handleShelfChooserClicks), this.options.afterClose && this.options.afterClose(this), "undefined"!==typeof t && t.stop(), !1;}, addNewShelf: function (t) { var e = this.element.value || ""; if (this.newShelfField.visible() || 0 == e.strip().length || this.shelfNames.indexOf(e) >= 0) var e = this.newShelfField.down('input[type=text]').value || ""; if (e = toShelfName(e), this.newShelfField.visible() && this.shelfNames.indexOf(e) >= 0) return this.chooseShelf(e, { submit: !1 }), this.hideNewShelfForm(), !1; if (''==e.strip() || this.shelfNames.indexOf(e) >= 0) return this.showNewShelfForm(), "undefined" != typeof t && t.stop(), !1; this.hideNewShelfForm(), this.shelfNames.push(e), this.shelfNames.sort(); var i; var o=this.buildShelfLi(e); var n = this.shelfNames.indexOf(e) - 1; if (n<0)i = this.shelvesWrapper.select('li.exclusive').last(); else { do { var s = this.shelfNames[n]; var i = this.getShelfLi(s); n--;} while (i!=null&&i.hasClassName('exclusive'));i==null&&(i = this.shelvesWrapper.select('li.exclusive').last()) } return i.insert({ after: o }), this.chooseShelf(e), this.markCurrent(), this.element.focus(), this.element.clear(), "undefined"!==typeof t && t.stop(), !1;}, showNewShelfForm: function () { this.newShelfButton.hide(), this.newShelfField.show(), this.newShelfField.down('input[type=text]').focus();}, hideNewShelfForm: function () { this.newShelfButton.show(), this.newShelfField.hide(), this.newShelfField.down('input[type=text]').value = "" }, onKeyPress: function (t) { switch (t.keyCode) { case Event.KEY_TAB: case Event.KEY_RETURN: this.selectEntry(), Event.stop(t); break; case Event.KEY_ESC: return this.chooserWrapper.hasClassName('open') && this.close(), "function"===typeof this.onEsc && this.onEsc(), void Event.stop(t); case Event.KEY_LEFT: case Event.KEY_RIGHT: return; case Event.KEY_UP: return this.markPrevious(), this.render(), void Event.stop(t); case Event.KEY_DOWN: return this.markNext(), this.render(), void Event.stop(t); default: if (this.currentShelfName = null, t.keyCode == Event.KEY_TAB || t.keyCode == Event.KEY_RETURN || Prototype.Browser.WebKit > 0 && 0 == t.keyCode) return !1;} return this.observer && clearTimeout(this.observer), this.observer = setTimeout(this.onObserverEvent.bind(this), 1e3 * this.options.frequency), !1;}, markNext: function () { var t = this.getCurrentEntry().next('.visible'); if ('undefined'==typeof t && this.getCurrentEntry() !== this.newShelfButtonLi && (t = this.newShelfButtonLi), t) { var e = t.readAttribute('alt'); this.currentShelfName = e, t.addClassName('hover'), this.shelvesWrapper.scrollTop + this.shelvesWrapper.getHeight() < t.offsetTop && (this.shelvesWrapper.scrollTop += t.getHeight());} }, markPrevious: function () { var t = this.getCurrentEntry().previous('.visible'); "undefined"===typeof t && this.getCurrentEntry() === this.newShelfButtonLi && (t = this.shelvesWrapper.select('.visible').last()), t && (this.currentShelfName = t.readAttribute('alt'), t.addClassName('hover'), this.shelvesWrapper.scrollTop > t.offsetTop && (this.shelvesWrapper.scrollTop -= t.getHeight())) }, markCurrent: function () { var t = this.getCurrentEntry(); t && (this.render(), this.shelvesWrapper.scrollTop = t.offsetTop);}, getCurrentEntry: function () { if (this.currentShelfName) return this.getShelfLi(this.currentShelfName); var t = this.shelvesWrapper.down('li.visible'); return t ? this.currentShelfName = t.readAttribute('alt'):(this.currentShelfName = this.shelfNames[0], t = this.getShelfLi(this.currentShelfName)), t }, getShelfLi: function (t) { return "_NEWSHELFBUTTON" == t ? this.newShelfButton.up('li'):document.getElementById(this.domId('shelf_'+t));}, selectEntry: function () { switch (this.currentShelfName) { case "_NEWSHELFBUTTON": return this.addNewShelf(), !1; default: this.toggleShelf(this.getCurrentEntry().readAttribute('alt')), this.element.clear() } }, selectChosen: function () { if ('undefined'!=typeof this.chosen) { for (let t = 0; t < this.chosen.length; t++) this.chooseShelf(this.chosen[t], { submit: !1 }); this.currentShelfName = null } }, unChooseAll: function () { for (let t = 0; t < this.shelfNames.length; t++) this.unChooseShelf(this.shelfNames[t], { submit: !1, onlyUpdateUI: !0 }); this.currentShelfName = null }, render: function () { this.shelvesWrapper.select('li').invoke('removeClassName', "hover"), this.newShelfButtonLi.removeClassName('hover'); var t = this.getCurrentEntry(); t && t.addClassName('hover');}, onObserverEvent: function () { for (var t, e, i = toShelfName(this.element.value), o = this.shelfNames.length - 1; o >= 0; o--)t = this.shelfNames[o], e = this.getShelfLi(t), e.fastRemoveClassName('hover'), 0 == t.indexOf(i) ? (e.fastAddClassName('visible'), e.show()):(e.fastRemoveClassName('visible'), e.hide()); "" == i.strip() || this.shelfNames.indexOf(i) > -1 ? this.newShelfButton.down('span').update('new'):(this.newShelfField.hide(), this.newShelfButton.show(), this.newShelfButton.down('span').update(`<b>"${i}"</b>`)), this.markCurrent() }, wrapperId: function () { return "undefined" == typeof this.wrapper || this.wrapper.id.empty() ? "shelfChooser" + this.bookId:this.wrapper.id;}, domId: function (t) { return this.wrapperId() + (t || "");}, buildShelfLi: function (t, e) { var e = e || {}; var i=new Element("li",{id:this.domId("shelf_"+t),alt:t,"class":"visible"}); var o = new Element('span'); return o.update(t), i.observe('click', this.toggleShelf.bind(this, t, e)), this.exclusive.indexOf(t) > -1 && i.addClassName('exclusive'), i.insert(o), i }, chooseShelf: function (t, e) { if ('_NEWSHELFBUTTON'==t) return !1; var e = Object.extend({ submit: !0 }, e || {}); var i=this.shelvesWrapper.select(".exclusive_chosen")[0]; var o = this.getShelfLi(t); if (o && (o.hasClassName('exclusive') ? (this.shelvesWrapper.select('.exclusive').invoke('removeClassName', "exclusive_chosen"), o.addClassName('exclusive_chosen')):o.addClassName('chosen'), o.show()), this.currentShelfName = t, this.chooserWrapper.visible() && this.element.focus(), this.chosen.indexOf(t) < 0 && (this.chosen.push(t), this.chosen.sort()), this.exclusive.indexOf(t) > -1) for (let n = this.exclusive.length - 1; n >= 0; n--) { var s = this.exclusive[n]; if (s != t) { var a = this.chosen.indexOf(s); a > -1 && this.chosen.splice(a, 1);} } this.options.cacheChosen && this.cacheChosen(); var r = !0; return this.options.beforeSubmit && (r = this.options.beforeSubmit(this.exclusive.indexOf(t) > -1, this)), r ? (e.submit && this.submitShelf(t), this.options.afterChoose && this.options.afterChoose(t, this)):(this.shelvesWrapper.select('.exclusive').invoke('removeClassName', "exclusive_chosen"), i.addClassName('exclusive_chosen')), !1 }, unChooseShelf: function (t, e) { var e = Object.extend({ submit: !0 }, e || {}); var i = this.getShelfLi(t); if (i==null||i.hasClassName('exclusive_chosen')) return !1; if (i.removeClassName('chosen'), !e.onlyUpdateUI) { var o = this.chosen.indexOf(t); o > -1 && this.chosen.splice(o, 1) } return this.options.cacheChosen && !e.onlyUpdateUI && this.cacheChosen(), e.submit && this.submitShelf(t, { remove: !0 }), this.options.afterChoose && this.options.afterChoose(t, this), !1;}, toggleShelf: function (t, e) { var i = this.getShelfLi(t); return i.hasClassName('chosen') || i.hasClassName('exclusive_chosen') ? this.unChooseShelf(t, e):this.chooseShelf(t, e) }, submitShelf: function (t, e) { if ('_NEWSHELFBUTTON'==t) return !1; var e = Object.extend({ remove: !1 }, e || {}); var i = Object.extend(this.options.ajaxOptions || {}, { parameters: { book_id: this.bookId, name: t, a: e.remove ? "remove":''} }); new Ajax.Request(this.url, i);}, summon: function (t, e) { var i = Event.findElement(t); var e = e || {}; if (e.bookId && (this.bookId = e.bookId), e.chosen) this.unChooseAll(), this.chosenByBookId && this.chosenByBookId[this.bookId] ? this.chosen = this.chosenByBookId[this.bookId]:(this.chosen = e.chosen, this.options.cacheChosen && this.cacheChosen()), 0 == this.chosen.intersect(this.exclusive).length && (this.chosen.push('read'), this.chosen.sort()), this.selectChosen(); else { this.chosen = [], this.unChooseAll(); var o = this.wrapper.down('.exclusive_chosen'); o && o.removeClassName('exclusive_chosen') }i.summon(this.wrapper), this.open(t) }, cacheChosen: function () { return this.chosen.length==0?!1:('undefined'==typeof this.chosenByBookId && (this.chosenByBookId = {}), void (this.chosenByBookId[this.bookId] = this.chosen.clone()));}, defaultOptions: { url: "/shelf/add_to_shelf", frequency: .15 } }); !(function(){ShelfChooser.registry=[],ShelfChooser.handleShelfChooserClicks=function(t){t.element().hasClassName("shelfChooser")||t.element().hasClassName("shelfChooserLink")||null!=t.element().up(".shelfChooser")||ShelfChooser.registry.invoke("close")}}()), function () { Element.shelfChooser = function (t, e, i, o) {
  new ShelfChooser(t, e, i, o)
}, Element.addMethods({ shelfChooser: Element.shelfChooser }) }(), function () { Element.fastHasClassName = function (t, e) { return t.className == e ? !0:t.className.indexOf(e) >= 0;}, Element.fastAddClassName = function (t, e) { return t.fastHasClassName(e) ? t:(t.className += " " + e, t);}, Element.fastRemoveClassName = function (t, e) { return t.fastHasClassName(e) ? (t.className = t.className.replace(e, ""), t):t;}, Element.addMethods({ fastHasClassName: Element.fastHasClassName }), Element.addMethods({ fastAddClassName: Element.fastAddClassName }), Element.addMethods({ fastRemoveClassName: Element.fastRemoveClassName });}(); var Popup = Class.create({ initialize: function (t) { this.options = { url: "#", width: 300, height: 300 }, Object.extend(this.options, t || {}), window.open(this.options.url, "", "width=" + this.options.width + ",height=" + this.options.height) } }); var GR_Twitter={callback:null,askToConnect:function(t){var e="true";t&&(this.callback=t,e="callback"),new Popup({url:"/user/twitter_sign_in?popup="+e,width:775,height:550})},callback:function(t){t?this.callback&&this.callback():InlineFlash.showError("Twitter failed to respond. Please try again.")},publish:function(t,e,i){new Ajax.Request("/twitter_users/tweet",{method:"post",parameters:{authenticity_token:window._token,status:t,status_url:e},onSuccess:function(){i||InlineFlash.showNotice("Your status has been updated!")},onError:function(){i||InlineFlash.showError("We had a problem updating your status. Please try again.")}})}}; var GR_Amazon = { askToConnect: function (t) { new Popup({ url: t, width: 900, height: 540 });} }; !(function(){Element.summon=function(t,e,i){t=$(t),e=$(e),$(t).addClassName("floatingBoxLink");var i=i||{},o=$(e).offsetLeft,n=$(e).offsetTop,s=$(e).visible(),a=e.style.width+"",r=e.style.height+"",l=0;if($(t).viewportOffset()[0]+$(e).getWidth()>document.viewport.getWidth())var l=-1*$(e).getWidth()+$(t).getWidth();return"function"==typeof i.beforeSummon&&i.beforeSummon(t,e),$(e).absolutize(),$(e).clonePosition(t,{setWidth:i.setWidth,setHeight:i.setHeight,offsetTop:$(t).getHeight()+2,offsetLeft:l}),i.setWidth||e.setStyle({width:a}),i.setHeight||e.setStyle({height:r}),s&&(i.toggle||$(e).offsetLeft==o&&$(e).offsetTop==n)?($(e).hideFloatingBox(),!0):($(e).showFloatingBox(),void("function"==typeof i.afterSummon&&i.afterSummon(t,e)))},Element.addMethods({summon:Element.summon})}()); var Labelize = { handleClick: function (t, e, i) { if (window.justSorted) return window.justSorted = !1, t.stop(), !0; var i = i || {}; return "INPUT" == t.target.tagName && "checkbox" != t.target.type || "TEXTAREA" == t.target.tagName || "SELECT" == t.target.tagName || "A" == t.target.tagName ? !0:(t.target != e && (e.checked = !e.checked), e.checked ? i.selectedClass && this.fastAddClassName(i.selectedClass):i.selectedClass && this.fastRemoveClassName(i.selectedClass), void (t.target != e && t.stop())) } }; !(function(){Element.labelize=function(t,e){var i=t.down("input"),e=e||{},o=e.cursor||"pointer";t.labelized()&&1!=e.force||(t.setStyle({cursor:o}),Labelize["_"+t.id+"_click"]=Labelize.handleClick.bindAsEventListener(t,i,e),t.observe("click",Labelize["_"+t.id+"_click"]))},Element.delabelize=function(t,e){if(t.labelized()){t.down("input");t.setStyle({cursor:"auto"}),Labelize["_"+t.id+"_click"]&&(t.stopObserving("click",Labelize["_"+t.id+"_click"]),Labelize["_"+t.id+"_click"]=null),e.selectedClass&&t.fastRemoveClassName(e.selectedClass)}},Element.labelized=function(t){return null!=Labelize["_"+t.id+"_click"]},Element.addMethods({labelize:Element.labelize,delabelize:Element.delabelize,labelized:Element.labelized})}()), function () { Element.dim = function (t) { var e = $('dimElt'); if (e==null) { var e = new Element('div', { id: "dimElt" }); document.body.appendChild(e), e.setStyle({ position: "absolute", backgroundColor: "white", opacity: "0.5" }), e.hide() }e.clonePosition(t), e.appear();}, Element.undim = function (t) { $('dimElt').fade();}, Element.addMethods({ dim: Element.dim });}(), function () { Element.bookTip = function (t, e) { var i; var o; var e=e||{}; var n=e.bookid||t.getAttribute("rel"); var s=e.attach||"bottomRight"; var a=t.hasClassName("interactive"); var r = ""; switch (delete e.bookid, delete e.attach, t.hasAttribute('origin') && (r = t.getAttribute('origin')), s) { case "bottomRight": i = { target: "bottomRight", tip: "topLeft" }, o = "topLeft"; break; case "bottomLeft": i = { target: "bottomLeft", tip: "topRight" }, o = "topRight"; break; case "left": i = { target: "leftMiddle", tip: "rightMiddle" }, o = "rightMiddle"; break; default: i = { target: "bottomRight", tip: "topLeft" }, o = "topLeft" }a && reverseMerge(e, { hideOn: !1, hideAfter: 1 }); var l = "/book/tip/" + n + "?"; if (a && (l += "interactive=1&"), void 0 != r && r.length > 0 && (l += "origin=" + r), reverseMerge(e, {
delay: 1, style: "goodreads", ajax: { url: l, options: { method: "get" } }, width: 450, hook: i, stem: o }), !(parseInt(n) > 0)) throw "You must specify a book ID in JS or in the element."; new Tip(t, e) }, Element.addMethods({ bookTip: Element.bookTip });}(); var current_tabs = {}; var changeTab = function (t, e) { if (current_tab = current_tabs[t], $(`${current_tab}Link`) && $(`${e}Link`)) { var i = $(current_tab); i && i.hide(); var o = $(`${current_tab}Link`); o && (o.removeClassName('selectedTab'), o.addClassName('tab')); var n = $(e); n && n.show(); var s = $(`${e}Link`); s && (s.removeClassName('tab'), s.addClassName('selectedTab')), current_tab = current_tabs[t] = e } }; $j(() => {$j(document).on("click",".js-dhtmlTab",function(t){t.preventDefault();var e=$j(t.target);e.hasClass("selectedTab")||changeTab(e.data("tab-set"),e.data("tab-name"))})}), String.prototype.ordinalize = function () { return parseInt(this).ordinalize();}, Number.prototype.ordinalize = function () { for (var t = "th", e = this; e > 100;)e -= 100; if (e<10||e > 13) switch (e % 10) { case 1: t = "st"; break; case 2: t = "nd"; break; case 3: t = "rd" } return new String(this + t) }, $j(() => {$j("#emailForm input[autofocus]").focus()}); var InfiniteScroll = {
isLoading: !1, isDone: !1, lastY: 0, start: function (t) { if (this.options = Object.extend({ page: 1, url: window.location.href.replace('format=html', "format=js") }, t || {}), this.url = this.options.url, this.page = this.options.page, this.url.match(/[\?&]page=\d+/)) { var e = this.url.match(/[\?&](page=(\d+)&?)/); this.page = parseInt(e[2]), this.url = this.url.replace(e[1], "");} this.url.match(/per_page=\d+/) && (this.url = this.url.replace(/per_page=\d+&?/, "")), Event.observe(window, "scroll", function (t) { if (InfiniteScroll.lastY > window.pageYOffset + 5) return void (InfiniteScroll.lastY = window.pageYOffset); InfiniteScroll.lastY = window.pageYOffset; var e = document.viewport.getScrollOffsets()[1] + document.viewport.getHeight(); e >= document.body.scrollHeight - InfiniteScroll.getTriggerDistance() && InfiniteScroll.load();}); var i = document.viewport.getScrollOffsets()[1] + document.viewport.getHeight(); i >= document.body.scrollHeight && InfiniteScroll.load() }, load: function () { return this.isLoading || this.isDone ? !1:(this.isLoading = !0, void new Ajax.Request(this.url, {
parameters: { page: InfiniteScroll.page + 1 }, evalJS: !0, method: "get", onLoading: function () { return InfiniteScroll.options.loading==null?!0:void ('function'==typeof InfiniteScroll.options.loading ? InfiniteScroll.options.loading():$(InfiniteScroll.options.loading).show());}, onComplete: function (t) { InfiniteScroll.isLoading = !1, InfiniteScroll.page += 1, InfiniteScroll.options.loading && "function"!==typeof InfiniteScroll.options.loading && $(InfiniteScroll.options.loading) && $(InfiniteScroll.options.loading).hide(), "function" == typeof InfiniteScroll.options.afterLoad && InfiniteScroll.options.afterLoad(t);}, on204: function () { InfiniteScroll.isDone = !0 } }));}, getTriggerDistance: function () { if (this.options.triggerDistance) return this.options.triggerDistance; var t = document.body.scrollHeight / 2; var e = 3 * document.viewport.getHeight(); return t > e ? e:t } }; !(function(){Element.modalDialog=function(t,e){t=$(t);var i=t.id+"_fader",o=$(i);if(o)$(o).update("").show();else{var o=$(i)||new Element("div",{id:t.id+"_fader","class":"modalDialogFader"});$(t).appendChild(o),$(o).absolutize(),Event.observe(window,"resize",function(){$(o).clonePosition(t)})}var n=new Element("div").setStyle({backgroundColor:"white",opacity:"0.8",width:"100%",height:"100%"});$(o).update(n),$(o).clonePosition(t);var s="string"==typeof e?new Element("div").update(e):$(e).show();$(o).appendChild(s),$(s).absoluteCenter()},Element.clearModalDialog=function(t){t=$(t),$(t.id+"_fader")&&$(t.id+"_fader").hide()},Element.absoluteCenter=function(t){var e=$(t).up();"absolute"!=e.getStyle("position")&&"relative"!=e.getStyle("position")&&e.setStyle("position","relative"),$(t).setStyle({position:"absolute",left:"50%",top:"50%",marginLeft:"-"+$(t).getWidth()/2+"px",marginTop:"-"+$(t).getHeight()/2+"px"})},Element.addMethods({modalDialog:Element.modalDialog}),Element.addMethods({clearModalDialog:Element.clearModalDialog}),Element.addMethods({absoluteCenter:Element.absoluteCenter})}()); var BookAutocompleter = Class.create(Ajax.Autocompleter, { onKeyPress: function ($super, t) { this.active || t.keyCode != Event.KEY_TAB && t.keyCode != Event.KEY_RETURN ? $super(t):Event.stop(t);} }); var BookSearchAutocompleter=Class.create(Ajax.Autocompleter,{selectEntry:function(){this.active=!1,this.index<0||this.updateElement(this.getCurrentEntry())},updateChoices:function(t){if(!this.changed&&this.hasFocus){if(this.update.innerHTML=t,Element.cleanWhitespace(this.update),Element.cleanWhitespace(this.update.down()),this.update.firstChild&&this.update.down().childNodes){this.entryCount=this.update.down().childNodes.length;for(var e=0;e<this.entryCount;e++){var i=this.getEntry(e);i.autocompleteIndex=e,this.addObservers(i)}}else this.entryCount=0;this.stopIndicator(),this.index=-1,1==this.entryCount&&this.options.autoSelect?(this.selectEntry(),this.hide()):this.render()}},onKeyPress:function(t){if(this.active)switch(t.keyCode){case Event.KEY_TAB:case Event.KEY_RETURN:if(this.selectEntry(),!(this.index>-1))return;Event.stop(t);case Event.KEY_ESC:return this.hide(),this.active=!1,void Event.stop(t);case Event.KEY_LEFT:case Event.KEY_RIGHT:return;case Event.KEY_UP:return this.markPrevious(),this.render(),void Event.stop(t);case Event.KEY_DOWN:return this.markNext(),this.render(),void Event.stop(t)}else if(t.keyCode==Event.KEY_TAB||t.keyCode==Event.KEY_RETURN||Prototype.Browser.WebKit>0&&0==t.keyCode)return;this.changed=!0,this.hasFocus=!0,this.observer&&clearTimeout(this.observer),this.observer=setTimeout(this.onObserverEvent.bind(this),1e3*this.options.frequency)}}); var BookAutoCompleteField={setup:function(t,e,i){var o=BookAutoCompleteField.elementIds(t,e),i=i||{},n=i.url||"/book/auto_complete";i.url=null;var s=i.afterComplete;i.afterComplete=null;var a=i.autocompleterClass||BookAutocompleter;i.autocompleterClass=null;var r={afterUpdateElement:function(t,e){return""==e.id?void($(o.ac_field_id).value=""):($(o.ac_selected).show().down(".acItem").update(e.innerHTML),$(o.ac_wrapper).hide(),$(o.ac_target_id).value=e.id,void("function"==typeof s&&s(t,e)))},callback:function(t,e){return"q="+$F(o.ac_field_id)},indicator:o.ac_loading_id,minChars:3};i=Object.extend(r,i),window[o.ac_autocompleter_name]=new a(o.ac_field_id,o.ac_autocomplete_id,n,i)},clear:function(t,e,i){var o=BookAutoCompleteField.elementIds(t,e),i=i||{};$(o.ac_selected).hide(),$(o.ac_wrapper).show(),$(o.ac_target_id).value="",$(o.ac_field_id).addClassName("greyText").value=i.field_tip||"Start typing the name of a book...","function"==typeof i.after&&i.after()},remove:function(t,e){var i=BookAutoCompleteField.elementIds(t,e);$(i.ac_target_id).value="",$(i.ac_selected).fade({to:.2}),$(i.ac_selected).down(".controls").setStyle({visibility:"hidden"})},elementIds:function(t,e){return{ac_field_id:t,ac_target_id:e,ac_loading_id:t+"_loading",ac_autocomplete_id:t+"_auto_complete",ac_autocompleter_name:t+"_auto_completer",ac_wrapper:t+"_wrapper",ac_selected:t+"_selected"}}}; var HeaderNav = { searchHeaderAfterUpdateElement: function (t, e) { if (''==e.id) { var i = e.down('a#autocompleteSearchLink'); return void (i && (window.location.href = i.getAttribute('href')));} var o = $$('#'+e.id + " .title")[0]; o && (t.value = o.innerHTML.stripTags().strip()), $j.post('/track_conversion_action', { event: "autocomplete_suggestion_accepted", options: { multiple: !0 } }), window.location = "/book/show/" + e.id + "?ac=1&from_search=1";} }; if (Element.activateAjaxPaginationLink = function (t) { t.observe('click', function (t) { new Ajax.Request(this.href, { method: "get", evalJS: !0 }); try { pageTracker._trackPageview(this.href) } catch (e) {}t.stop();}) }, Element.activateAjaxPagination = function (t) { t.select('.imagePaginationSm a').each((t) => {t.activateAjaxPaginationLink()}) }, Element.addMethods({ activateAjaxPaginationLink: Element.activateAjaxPaginationLink }), Element.addMethods({ activateAjaxPagination: Element.activateAjaxPagination }), document.observe('dom:loaded', function () { $$('.bookTipBottomRight').each((t) => {t.bookTip({attach:"bottomRight"})}), $$('.bookTipBottomLeft').each((t) => {t.bookTip({attach:"bottomLeft"})}), $$('.bookTipLeft').each((t) => {t.bookTip({attach:"left"})}), $$('.imagePaginationSm a').each((t) => {t.activateAjaxPaginationLink()}) }), jQuery(document).ready(() => {if(jQuery("#pollForReload").length>0){var t=$j("#pollForReload").data("reload-link");setInterval(function(){jQuery.getScript(t)},1e4)}}), "undefined" == typeof $gr) var $gr = {}; $gr && ($gr.components = {}, $gr.communityQA = {}, $gr.giveaway = {}, $gr.shared = {}, $gr.user = {}), Modernizr.touchevents ? $gr.touch = "touchstart":$gr.touch = "click", $gr.components.slide = function (t, e) { this.containerClassName = ".sliderContainer", this.containerWidth = t, this.contentClassName = ".slider", this.sliderNav = ".navButton", this.sliderPrev = ".sliderPrev", this.sliderNext = ".sliderNext", this.sliderWidth = e, this.maxLeft = 0, this.minLeft = 0, this.newWidthSet = !1; var i = this; var o=500; var n = $j(this.contentClassName); this.setNavVisibility = function (t) { "undefined"===typeof t && n.length && (t = n.position().left), t > i.minLeft ? $j(i.sliderNext).show():$j(i.sliderNext).hide(), t < i.maxLeft ? $j(i.sliderPrev).show():$j(i.sliderPrev).hide();}, this.singleSlide = function (t) { var e; n.stop(), "prev" === t ? e = $j(this.contentClassName).position().left + 4 * this.containerWidth / 5:'next'===t && (e = $j(this.contentClassName).position().left - 4 * this.containerWidth / 5), e = Math.min(e, i.maxLeft), e = Math.max(e, i.minLeft), i.setNavVisibility(e), $j(this.contentClassName).animate({ left: e }, o);}, this.setNewWidth = function () { var e = 0; $j('.slider .cover').each(function () { e += $j(this).outerWidth();}), i.sliderWidth = e; var o = 30; i.minLeft = Math.min(t - i.sliderWidth - o, i.maxLeft), $j('.slider').width(e + 50), i.newWidthSet = !0;}, this.toggleBackground = function (t) { $j(i.sliderNext).toggleClass('sliderBackground', t), $j(i.sliderPrev).toggleClass('sliderBackground', t) }, $j(this.containerClassName).on('click', this.sliderNav, function () { var t; this.hasClassName('sliderNext') ? t = "next":this.hasClassName('sliderPrev') && (t = "prev"), i.first ? (i.singleSlide(t, !0), i.first = void 0):i.singleSlide(t);}), $j(document).on('mouseenter', this.containerClassName, function () { i.toggleBackground(!0), i.setNavVisibility() }).on('mouseleave', this.containerClassName, function () { i.toggleBackground(!1), i.setNavVisibility();}), window.onload = function () { 0 !== n.length && (i.setNewWidth(), i.setNavVisibility(), i.toggleBackground(!1)) };}, $gr.components.friendRequests = function () { var t = function (t) { var e = t.parents('.dropDown').eq(0); var i = e.siblings('.dropDownOpener').eq(0).find('.notification'); i.html(Number(i.text()) - 1), 0 === Number(i.text()) && i.hide(), $notificationWrapper = t.parents('.notificationWrapper'), $notificationWrapper.addClass('hide'), $notificationWrapper.on('transitionend webkitTransitionEnd oTransitionEnd otransitionend', $j.get('/friend/requests', { format: "js" }).done((t) => {e.find(".dropDownMenu").html(t)})) }; return { reloadMenu: t };}(), $j(document).on('click', ".friendsNotice .confirmRequest", function (t) { $gr.components.friendRequests.reloadMenu($j(t.target)), t.preventDefault();}), $gr.components.mentionInserter = function () { var t = function (t) { this.textarea = t;}; var e=function(t){i(this.textarea)?o(this.textarea,t):this.textarea.value+=t}; var i=function(t){return _.isNumber(t.selectionStart)}; var o=function(t,e){var i=t.selectionStart;n(e,t,i),s(e,t,i)}; var n=function(t,e,i){var o=e.value.substring(0,i),n=e.value.substring(i,e.value.length);e.value=o+t+n}; var s = function (t, e, i) { var o = i + t.length; e.selectionStart = o, e.selectionEnd = o;}; return { setField: t, insertText: e } }(), $gr.components.explanationHighlighter = function () { var t; var e=function(){var e=$j(this).data("term-name");t.find("."+e).addClass("highlighted")}; var i=function(){var e=$j(this).data("term-name");t.find("."+e).removeClass("highlighted")}; var o = function (o, n, s) { t = $j('.'+s), $j('.'+n).find('.'+o).hover(e, i) }; return { init: o };}(); var Cookies = { get: function (t) { var e = null; return jQuery.each(document.cookie.split('; '), function (i, o) { var n = o.split('='); n[0] === t && (e = n[1]) }), e }, set: function (t, e, i) { i = i || 365; var o = new Date(); o.setTime(o.getTime() + 24 * i * 60 * 60 * 1e3); var n = "; expires=" + o.toGMTString(); document.cookie = t + "=" + encodeURIComponent(e) + n + "; path=/" } }; var EnvironmentDetection = function () { var t = function (t) { return navigator.userAgent.match(t)==null?!1:!0 }; var e=function(){return t(/android 4\.0/i)}; var i=function(){return t(/android 3/i)}; var o = function () { for (var t, e = 3, i = document.createElement('div'), o = i.getElementsByTagName('i'); i.innerHTML = "<!--[if gt IE " + ++e + "]><i></i><![endif]-->", o[0];);return e > 4 ? e:t }; return { android: { isICS: e, isHC: i }, ie: o };}(); !(function(){var t={addIcon:"//s.gr-assets.com/assets/gr/icons/icon_add-4bf34f2abdff9c1d51bcb53d0a8c71ad.svg",amazon:{brand:{favIcon40:"//s.gr-assets.com/assets/amazon/brand/amazon_favicon_40-cf3e4a4940c8ed9d095c15ebb3d78f3f.png"}},closeIcon:"//s.gr-assets.com/assets/gr/icons/icon_close-63734f04e7baaa77fbad796225e5724c.svg",closeIcons:{darkBackground:"//s.gr-assets.com/assets/gr/icons/icon_close_white-dbf4152deeef5bd3915d5d12210bf05f.svg"},facebook:{brand:{favIcon:"//s.gr-assets.com/assets/facebook/fb-c8d40d3b6a03b9b61cd240a98e652e2e.png"}},goodreadsApps:{androidDownloadBadgeDesktopHome:"//s.gr-assets.com/assets/app/badge-android-desktop-home-0f517cbae4d56c88a128d27a7bea1118.png",androidDownloadBadgeDesktopHome2x:"//s.gr-assets.com/assets/app/badge-android-desktop-home-2x-e31514e1fb4dddecf9293aa526a64cfe.png",iOSDownloadBadge:"//s.gr-assets.com/assets/app/badge-ios-desktop-homepage-6ac7ae16eabce57f6c855361656a7540.svg"},icons:{info:"//s.gr-assets.com/assets/gr/icons/icon_info-ec2ca870befa3adc83295813fadc66d9.svg"},settingsCog:"//s.gr-assets.com/assets/gr/icons/settings_cog-2acb8771e16e7cf04aa082503f1be885.svg",siteFooter:{facebookIcon:"//s.gr-assets.com/assets/site_footer/footer_facebook-ea4ab848f8e86c5f5c98311bc9495a1b.svg",instagramIcon:"//s.gr-assets.com/assets/site_footer/footer_instagram-d59e3887020f12bcdb12e6c539579d85.svg",linkedInIcon:"//s.gr-assets.com/assets/site_footer/footer_linkedin-5b820f4703eff965672594ef4d10e33c.svg",twitterIcon:"//s.gr-assets.com/assets/site_footer/footer_twitter-126b3ee80481a763f7fccb06ca03053c.svg"},currentlyReadingSparseStateIcon:"//s.gr-assets.com/assets/react_components/currently_reading/icn_default_CR_ltrail-16f28d39654104ceb329648a474943eb.svg",wtrSparseStateIcon:"//s.gr-assets.com/assets/react_components/shelf_display/icn_default_wtr_leftrail-62c079d4573e5db15651d273fc72d1d2.svg",notificationFromGRIcon:"//s.gr-assets.com/assets/icons/goodreads_g-6781672965e751d8a1a6db90b280e1b1.svg",loadingGif:"//s.gr-assets.com/assets/loading-trans-ced157046184c3bc7c180ffbfc6825a4.gif"};window.GrImageRegistry=t}()); var grPopup = {}; grPopup.show = function (t, e) { EnvironmentDetection.ie(); "function"!==typeof e && (e = $j.fn.show), t.each(function () { var t = $j(this); t.is(':visible') || (e.call(t), t.offset().left < $j(window).scrollLeft() ? t.offset({ left: $j(window).scrollLeft() }):$j(window).scrollLeft() + $j(window).innerWidth() < t.offset().left + t.outerWidth() && t.offset({ left: $j(window).scrollLeft() + $j(window).innerWidth() - t.outerWidth() }));}) }, grPopup.hide = function (t, e) { EnvironmentDetection.ie(); "function"!==typeof e && (e = $j.fn.hide), t.each(function () { var t = $j(this); t.is(':visible') && t.queue(function (t) { e.call($j(this)), t() }).queue(function (t) { $j(this).css('left', ""), t();}).queue((t) => {t()}) });}, HoverIntent = {}, HoverIntent.onEnterIntent = function (t, e, i, o) { "undefined" == typeof i && (i = t); try { clearTimeout(i.leaveTimeout) } catch (n) {}'undefined'==typeof o && (o = HoverIntent.hoverDelay), i.hoverTimeout = window.setTimeout(() => {e.call(t)}, o) }, HoverIntent.onLeaveIntent = function (t, e, i, o) { "undefined"===typeof i && (i = t); try { clearTimeout(i.hoverTimeout);} catch (n) {}'undefined'==typeof o && (o = HoverIntent.hoverDelay), i.leaveTimeout = window.setTimeout(() => {e.call(t)}, o) }, HoverIntent.hoverDelay = 250; var sourcesToHideBuyFeatures = ['ebfg_gr', "ebfg_fb", "ebfg_fbm", "ebfg_tw", "ebfg_email", "ebfg_sms"]; $j(document).ready(() => {showBuyableFeatures()}), $j(document).on('tooltipHtmlConstructed', function () { showBuyableFeatures();}), WantToRead = {}, $j(() => {var t,e;WantToRead.shelfMenu=function(){return"object"==typeof t&&0!==t.length?t:t=$j(".wtrShelfMenu").first()},WantToRead.exclusiveShelfButtons=function(){return"object"==typeof e&&0!==e.length?e:e=WantToRead.shelfMenu().children(".wtrShelfList").children(".wtrExclusiveShelves").children("li").children("button")},WantToRead.resetShelfMenuStored=function(){t=$j(".wtrShelfMenu").first()}}), WantToRead.submitFormViaAjax = function (t, e, i) { var o = t.serializeArray(); t.find('button').each(function (t) { o.push({ name: $j(this).prop('name'), value: $j(this).attr('value') });}), o.push({ name: "wtr_new", value: !0 }), o.push({ name: "wtr_button_id", value: t.closest('.wtrButtonContainer').prop('id') }), $j.ajax({ type: "POST", url: t.prop('action'), data: o, dataType: "script" }).done(() => {"function"==typeof e&&e()}).fail((t) => {var e;if(t&&403===t.status){if(e=JSON.parse(t.responseText),e.redirect)return location.href=e.redirect,!0;alert("So sorry, but there was a problem completing your request. Please reload the page and try again.")}("function"!=typeof i||i(t)===!1)&&alert("So sorry, but there was a problem completing your request. Please reload the page and try again.")});}, WantToRead.setupShelfVisibilityInMenu = function (t) { var e = t.data('exclusive-shelf'); if (WantToRead.shelfMenu().find('ul.wtrExclusiveShelves > li, ul.wtrNonExclusiveShelves > li').length > 11 ? WantToRead.shelfMenu().find('.wtrShelfSearch').show():WantToRead.shelfMenu().find('.wtrShelfSearch').hide(), WantToRead.updateAddShelfReftags(WantToRead.shelfMenu()), WantToRead.exclusiveShelfButtons().show(), WantToRead.shelfMenu().find('.wtrNonExclusiveShelves input').prop('checked', !1), e) { WantToRead.shelfMenu().find(`button[value='${e}']`).hide(); var i = t.data('shelves'); if (i) for (let o = i.toString().split(','), n = 0; n < o.length; n++)WantToRead.shelfMenu().find(`input[value='${o[n]}']`).prop('checked', !0) } }, WantToRead.showShelfMenu = function (t) { var e = t.find('.wtrRight'); WantToRead.resetShelfSearch(); var i = e.find('.wtrShelfMenu'); i.length > 0 && i.get(0) !== WantToRead.shelfMenu().get(0) && i.remove(), 0 == e.find('form.wtrAddShelf').length && e.append(WantToRead.shelfMenu()), WantToRead.setupShelfVisibilityInMenu(e), grPopup.show(WantToRead.shelfMenu(), function () { this.slideDown('fast'), EnvironmentDetection.android.isICS() || EnvironmentDetection.android.isHC() || this.css('overflow-y', "auto");}) }, WantToRead.hideShelfMenu = function () { var t = WantToRead.shelfMenu().find('form.wtrAddShelf input[name=name]'); var e = WantToRead.shelfMenu().find('.wtrShelfSearchField'); t.is(':focus') || 0 !== e.length && e.is(':focus') || (grPopup.hide(WantToRead.shelfMenu(), function () { this.slideUp('fast') }), "" === t.val() && WantToRead.hideAddShelfForm());}, WantToRead.toggleAddShelfForm = function () { var t = WantToRead.shelfMenu().find('form.wtrAddShelf'); t.is(':visible') ? WantToRead.hideAddShelfForm(t):WantToRead.showAddShelfForm(t);}, WantToRead.showAddShelfForm = function (t) { var e; var i=WantToRead.shelfMenu().children(".wtrOtherShelfOptions"); var o = WantToRead.shelfMenu().children('.wtrShelfList'); t || (t = WantToRead.shelfMenu().find('form.wtrAddShelf')), t.show(), e = t.height(), i.css('height', i.height() + e), o.css('max-height', parseInt(o.css('max-height'), 10) - e) }, WantToRead.hideAddShelfForm = function (t) { var e; var i=WantToRead.shelfMenu().children(".wtrOtherShelfOptions"); var o = WantToRead.shelfMenu().children('.wtrShelfList'); t || (t = WantToRead.shelfMenu().find('form.wtrAddShelf')), t.is(':visible') && (e = t.height(), t.hide(), i.css('height', i.height() - e), o.css('max-height', parseInt(o.css('max-height'), 10) + e)) }, WantToRead.showShelfSearchAddShelf = function () { var t = WantToRead.shelfMenu().find('.wtrShelfSearch > .wtrShelfSearchField').val(); var e=WantToRead.shelfMenu().children(".wtrShelfList").children(".wtrShelfSearchAddShelf"); var i = e.find('button'); t = toShelfName(t), WantToRead.shelfMenu().find('.wtrShelfSearchAddShelf button[name=name]').val(t), WantToRead.shelfMenu().find('.wtrShelfSearchAddShelf .wtrButtonLabelShelfName').text(t), "want-to-read" != t && "" != t && 0 === WantToRead.shelfMenu().find(`ul.wtrExclusiveShelves > li[data-shelf-name='${t}'], ul.wtrNonExclusiveShelves > li[data-shelf-name='${t}']`).length ? (e.css('display', "block"), i.is(':hidden') && i.css('display', "block")):e.css('display', "none"), WantToRead.hideAddShelfForm(), WantToRead.shelfMenu().children('.wtrOtherShelfOptions').children('label.wtrAddShelf').hide() }, WantToRead.hideShelfSearchAddShelf = function () { WantToRead.shelfMenu().find('.wtrShelfSearchAddShelf').hide(), WantToRead.shelfMenu().children('.wtrOtherShelfOptions').children('label.wtrAddShelf').show();}, WantToRead.resetShelfSearch = function () { WantToRead.shelfMenu().find('.wtrShelfSearchField').val(''), WantToRead.shelfMenu().find('.wtrShelfSearchEmptyResults').css('display', "none"), WantToRead.hideShelfSearchAddShelf(), WantToRead.shelfMenu().find('ul.wtrExclusiveShelves > li, ul.wtrNonExclusiveShelves > li').css('display', "block").removeClass('topShelfSearchResult');}, WantToRead.thankForRating = function (t) { grPopup.show(t.find('.wtrPrompt.ratingThanks'), function () { this.fadeIn();}), window.setTimeout(() => {grPopup.hide(t.find(".wtrPrompt.ratingThanks"),function(){$j(this).fadeOut()})}, 6e3) }, WantToRead.showPromptToReview = function () { $j(this).hasClass('wtrHasReview') || grPopup.show($j(this).closest('.wtrButtonContainer').find('.wtrPrompt.wtrPromptToReview'), function () { this.fadeIn() }) }, WantToRead.hidePromptToReview = function () { grPopup.hide($j(this).closest('.wtrButtonContainer').find('.wtrPrompt.wtrPromptToReview'), function () { this.fadeOut() });}, WantToRead.showPromptToEditReview = function () { grPopup.show($j(this).closest('.wtrButtonContainer').find('.wtrPrompt.wtrPromptToEditReview'), function () { this.fadeIn() }) }, WantToRead.hidePromptToEditReview = function () { grPopup.hide($j(this).closest('.wtrButtonContainer').find('.wtrPrompt.wtrPromptToEditReview'), function () { this.fadeOut() }) }, WantToRead.showUserStatusPrompt = function () { grPopup.show($j(this).closest('.wtrButtonContainer').find('.wtrPrompt.wtrUserStatusPrompt'), function () { this.fadeIn();}) }, WantToRead.hideUserStatusPrompt = function (t) { null != t && t.jquery || (t = $j('.wtrButtonContainer')), grPopup.hide(t.find('.wtrPrompt.wtrUserStatusPrompt'), function () { this.fadeOut() }) }, WantToRead.showNewUserStatusForm = function (t) { grPopup.show(t.find('.wtrNewUserStatus')), t.find('.wtrNewUserStatus input[type="text"]').select();}, WantToRead.hideNewUserStatusForm = function (t) { grPopup.hide(t.find('.wtrFloatingBox.wtrNewUserStatus'), function () { this.fadeOut();}) }, WantToRead.showFormProgress = function (t) { t.is('input') && (t = t.parent()), t.find('.progressTrigger').hide(), t.find('.progressIndicator').show() }, WantToRead.hideFormProgress = function (t) { t.find('.progressIndicator').hide(), t.find('.progressTrigger').show() }, WantToRead.showUserStatusConfirmation = function (t, e) { t.find('.wtrUserStatusConfirmation').replaceWith(e), confirmation = t.find('.wtrUserStatusConfirmation'), grPopup.show(confirmation, function () { this.fadeIn();}), confirmation.on('mouseleave.wtrShowUserStatusConfirmation', function (t) { confirmation.off('mouseleave.wtrShowUserStatusConfirmation'), grPopup.hide($j(this), function () { this.fadeOut();}), WantToRead.enablePrompts();}) }, WantToRead.showPromptToReorderShelf = function () { grPopup.show($j(this).closest('.wtrButtonContainer').find('.wtrPrompt.wtrReorderShelf'), function () { this.fadeIn();}) }, WantToRead.hidePromptToReorderShelf = function () { grPopup.hide($j(this).closest('.wtrButtonContainer').find('.wtrPrompt.wtrReorderShelf'), function () { this.fadeOut() });}, WantToRead.activateReorderForm = function (t) { t.find('.wtrPrompt.wtrReorderShelf').removeClass('wtrPrompt').addClass('wtrFloatingBox'), t.find('.saveShelfPosition').show(), t.find('.wtrReorderShelf .viewShelfLink').hide() }, WantToRead.deactivateReorderForm = function (t) { t.find('.wtrFloatingBox.wtrReorderShelf').removeClass('wtrFloatingBox').addClass('wtrPrompt'), t.find('.saveShelfPosition').hide(), t.find('.wtrReorderShelf .viewShelfLink').show();}, WantToRead.enablePrompts = function () { WantToRead.disablePrompts(), $j(document).on({ "mouseenter.wtrReviewPrompt": function () { HoverIntent.onEnterIntent(this, WantToRead.showPromptToReview);}, "mouseleave.wtrReviewPrompt": function () { HoverIntent.onLeaveIntent(this, WantToRead.hidePromptToReview) } }, ".wtrLeft.wtrStatusRead, .wtrLeft.wtrStatusOtherShelf"), $j(document).on({ "mouseenter.wtrReviewPrompt": function () { HoverIntent.onEnterIntent(this, WantToRead.showPromptToEditReview);}, "mouseleave.wtrReviewPrompt": function () { HoverIntent.onLeaveIntent(this, WantToRead.hidePromptToEditReview) } }, ".wtrLeft.wtrStatusRead.wtrHasReview, .wtrLeft.wtrStatusOtherShelf.wtrHasReview"), $j(document).on({ "mouseenter.wtrStatusPromptEvents": function () { HoverIntent.onEnterIntent(this, WantToRead.showUserStatusPrompt);}, "mouseleave.wtrStatusPromptEvents": function () { HoverIntent.onLeaveIntent(this, WantToRead.hideUserStatusPrompt);} }, ".wtrButtonContainer .wtrLeft.wtrStatusReadingNow");}, WantToRead.disablePrompts = function (t) { $j(document).off('mouseenter.wtrReviewPrompt mouseleave.wtrReviewPrompt', ".wtrLeft.wtrStatusRead, .wtrLeft.wtrStatusOtherShelf"), $j(document).off('mouseenter.wtrReviewPrompt mouseleave.wtrReviewPrompt', ".wtrLeft.wtrStatusRead.wtrHasReview, .wtrLeft.wtrStatusOtherShelf.wtrHasReview"), $j(document).off('mouseenter.wtrStatusPromptEvents mouseleave.wtrStatusPromptEvents', ".wtrButtonContainer .wtrLeft.wtrStatusReadingNow") }, $j(() => {WantToRead.enablePrompts(),$j(document).on("submit",".wtrButtonContainer form.wtrAddShelf, .wtrShelfSearchAddShelf > form",function(){var t=$j(this),e=t.closest(".wtrRight").find(".hiddenShelfForm"),i=e.find("[name='book_id']").val(),o=e.find("[name='unique_id']").val();t.find("[name='book_id']").val(i),t.find("[name='unique_id']").val(o),WantToRead.showFormProgress(t)}),$j(document).on("submit",".wtrButtonContainer form",function(t){t.preventDefault(),WantToRead.submitFormViaAjax($j(this),null,function(t){if(t&&403===t.status){var e=JSON.parse(t.responseText);if(e.redirect)return location.href=e.redirect,!0}return!1})}),$j(document).on("click",".wtrButtonContainer button.wtrUnshelve",function(t){t.preventDefault();var e=$j(this);window.confirm("Removing a book deletes your rating, review, etc. Remove this book from all your shelves?")&&(e.parents(".secondaryWtrButton").length>0?handleSecondaryWtrUnshelving(t):e.closest("form").submit())}),$j(document).on("click",".wtrButtonContainer button.wtrToRead",function(){WantToRead.showFormProgress($j(this).closest("form"))}),$j(document).on("mouseenter.wtrButton",".wtrButtonContainer .wtrRight",function(){HoverIntent.onEnterIntent(this,function(){WantToRead.showShelfMenu($j(this).closest(".wtrButtonContainer"))},WantToRead.shelfMenu())});var t=function(t){HoverIntent.onLeaveIntent(this,WantToRead.hideShelfMenu,WantToRead.shelfMenu(),t)};$j(document).on("mouseleave.wtrButton",".wtrButtonContainer .wtrRight",function(){var e=1e3,i=$j(this),o=i.find(".wtrShelfSearchField");(i.find("form.wtrAddShelf").is(":visible")||o.length>0&&o.val().length>0)&&(e=5e3),t(e)}),$j(document).on("click.wtrButton",".wtrButtonContainer button.wtrShelfButton",function(){WantToRead.shelfMenu().is(":animated")||(WantToRead.shelfMenu().is(":visible")?WantToRead.hideShelfMenu():WantToRead.showShelfMenu($j(this).closest(".wtrButtonContainer")))}),$j(".wtrShelfSearchField").search("ul.wtrExclusiveShelves > li > button, ul.wtrNonExclusiveShelves > li > label",".wtrShelfSearchField",function(t){var e="ul.wtrExclusiveShelves > li, ul.wtrNonExclusiveShelves > li";t.empty(function(){WantToRead.shelfMenu().find(e).css("display","none"),WantToRead.shelfMenu().find(".wtrShelfSearchEmptyResults").css("display","block"),WantToRead.showShelfSearchAddShelf()}),t.reset(function(){WantToRead.resetShelfSearch()}),t.results(function(t){WantToRead.shelfMenu().find(".wtrShelfSearchEmptyResults").css("display","none"),WantToRead.shelfMenu().find(e).css("display","none").removeClass("topShelfSearchResult"),t.parent().css("display","block"),(void 0===EnvironmentDetection.ie()||EnvironmentDetection.ie()>=9)&&t.not("button:hidden").first().parent().addClass("topShelfSearchResult"),WantToRead.showShelfSearchAddShelf()})}),(void 0===EnvironmentDetection.ie()||EnvironmentDetection.ie()>=9)&&$j(document).on("keydown",".wtrShelfMenu > .wtrShelfList > .wtrShelfSearch > .wtrShelfSearchField",function(t){13===t.which&&$j(this).val().length>0&&(t.preventDefault(),WantToRead.shelfMenu().find("ul.wtrExclusiveShelves > li > button:visible, ul.wtrNonExclusiveShelves > li > label > input:visible").first().click());
}),$j(document).on("touchstart",".wtrShelfList",function(t){this.wtrScrollStartPos=$j(this).scrollTop()+t.originalEvent.touches[0].pageY}),$j(document).on("touchmove",".wtrShelfList",function(t){this.scrollTop=this.wtrScrollStartPos-t.originalEvent.touches[0].pageY,t.preventDefault()}),(EnvironmentDetection.android.isICS()||EnvironmentDetection.android.isHC())&&$j(".wtrButtonContainer .wtrShelfList").css("overflow-y","hidden"),$j(document).on({mouseenter:function(){HoverIntent.onEnterIntent(this,WantToRead.showPromptToReorderShelf)},mouseleave:function(){HoverIntent.onLeaveIntent(this,WantToRead.hidePromptToReorderShelf)}},".wtrButtonContainer .wtrLeft.wtrStatusToRead"),$j(document).on("click",".wtrButtonContainer .wtrReorderShelf form button[type=submit]",function(){WantToRead.showFormProgress($j(this).closest("form"))}),$j(document).on("click",".wtrExclusiveShelves button.wtrExclusiveShelf",function(){e($j(this))}),$j(document).on("change",".wtrNonExclusiveShelves input.wtrNonExclusiveShelf",function(t){e($j(this),!0)});var e=function(t,e){WantToRead.showFormProgress(t);var i=t.val(),o=t.closest(".wtrButtonContainer").find(".hiddenShelfForm");if(0===o.length)return void alert("We're sorry, but there was a problem completing your request. Please reload the page and try again.");if(o.find("[name=name]").val(i),e){var n=t.prop("checked");o.find("[name=a]").val(n?"":"remove"),WantToRead.setShelfTypeReftag(o,"wtrnes")}else WantToRead.setShelfTypeReftag(o,"wtres"),o.find("[name=a]").val("");WantToRead.submitFormViaAjax(o)};$j(document).on("click",".wtrButtonContainer label.wtrAddShelf",function(){WantToRead.toggleAddShelfForm()}),$j(document).on("focusin",".wtrButtonContainer .wtrPrompt.wtrUserStatusPrompt input[type=text]",function(){var t=$j(this).closest(".wtrButtonContainer");WantToRead.disablePrompts(),WantToRead.hideUserStatusPrompt(t),WantToRead.showNewUserStatusForm(t)}),$j(document).on("click",".wtrButtonContainer .wtrNewUserStatus form button[type=submit]",function(){WantToRead.showFormProgress($j(this).closest("form"))}),$j(document).on("click",".wtrButtonContainer div.wtrNewUserStatus form button[type=reset]",function(){buttonContainer=$j(this).closest(".wtrButtonContainer"),WantToRead.hideNewUserStatusForm(buttonContainer),WantToRead.enablePrompts()}),$j(document).on("click",".wtrButtonContainer .wtrNewUserStatusProgressTypeToggle",function(){var t=$j(this).closest(".wtrNewUserStatusProgress"),e=$j(this).closest(".wtrNewUserStatus").find(".wtrNewUserStatusProgress:hidden");t.find("input, button").prop("disabled",!0),t.hide(),e.find("input, button").prop("disabled",!1),e.show()}),$j(document).on("click",".wtrButtonContainer .wtrNewUserStatus button.wtrExclusiveShelf[value=read]",function(t){t.preventDefault(),window.confirm("Mark this book as read?")&&(e($j(this)),WantToRead.enablePrompts())}),$j(document).on("focusin",".wtrButtonContainer input.shelfPosition",function(){$j(this).select(),WantToRead.activateReorderForm($j(this).closest(".wtrButtonContainer"))}),$j(document).on("click",".wtrButtonContainer div.wtrReorderShelf form button[type=reset]",function(){WantToRead.deactivateReorderForm($j(this).closest(".wtrButtonContainer"))})}); var clearSecondaryWtrButton = function (t, e) { var i = t.parents('.wtrButtonContainer').find('.wtrRight'); i.data('exclusive-shelf', ""), i.data('shelves', ""), WantToRead.setupShelfVisibilityInMenu(i), i.removeClass('wtrDown'), i.addClass('wtrUp'), t.closest('.wtrLeft').replaceWith(e.wtr_button_left);}; var clearSecondaryRatingStars=function(t,e){var i=t.parents(".wtrButtonContainer").find(".ratingStars");i.replaceWith(e.rating_stars),i.removeClass("hasRating")}; var handleSecondaryWtrUnshelving = function (t) { var e = $j(t.target); var i=e.parents(".wtrButtonContainer").attr("id"); var o=e.parents("form").attr("action"); var n = { format: "json", unique_id: i, use_secondary_wtr: !0 }; $j.ajax({
url: o, type: "POST", dataType: "json", data: n, success: function (e) { var i = $j(t.target); updateRateBooksHeaderAndFooter(e), clearSecondaryRatingStars(i, e), clearSecondaryWtrButton(i, e) }
});}; WantToRead.setShelfTypeReftag = function (t, e) { var i = t.find('.wtrRefRightShelfMenu'); i.length > 0 && i.val(i.val().replace(/_wtr(es|nes)$/, "_" + e)) }, WantToRead.updateAddShelfReftags = function (t) { var e = t.parents('.wtrButtonContainer'); var i = e.find('.wtrRefRightShelfMenu').val(); null != i && "" != i && (t.find('.wtrShelfSearchAddRef').val(i.replace(/_wtres/, "_wtres")), t.find('.wtrAddSearchRef').val(i.replace(/_wtres/, "_wtrnes")), e.children('.wtrDown').length > 0 ? e.find('.wtrExisting').val('true'):e.find('.wtrExisting').val('false')) }, /*

Live searching of shelves, as used in, e.g., the shelf menu of the 'want to
read' button.

Adapted from:

https://github.com/nakajima/jquery-livesearch

(c) Copyright 2009 Pat Nakajima

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
*/
(function(t){function e(e){return(val=this.val())?t(e).filter(':containsi("'+val+'")'):!1}jQuery.expr[":"].containsi=jQuery.expr.createPseudo(function(t){return function(e){return toShelfName(jQuery(e).text()).toUpperCase().indexOf(toShelfName(t).toUpperCase())>=0}});var i=function(t){this.callbacks={},t(this)};i.prototype.all=function(t){this.callbacks.all=t},i.prototype.reset=function(t){this.callbacks.reset=t},i.prototype.empty=function(t){this.callbacks.empty=t},i.prototype.results=function(t){this.callbacks.results=t},t.fn.search=function o(n,s,a){function r(){if(result=e.call(t(this),n)){l.all&&l.all.call(this,result);var i=result.size()>0?"results":"empty";return l[i]&&l[i].call(this,result)}return l.all&&l.all.call(this,t(n)),l.reset&&l.reset.call(this)}var o=new i(a),l=o.callbacks;t(document).on("keyup click",s,r)}}(jQuery)), $j(document).ready(() => {$j(".aboutHeaderImage").slideshow()}), function () { var t; var e; var i=5e3; var o=function(){t=$j(this),e=setTimeout(function(){n(t)},i)}; var n = function (t) { var o; var s = t.find('img.active'); 0 == s.length && (s = t.find('img:last')), o = s.next('img').length ? s.next('img'):t.find('img:first'), s.addClass('last-active'), o.css({ opacity: 0 }), o.addClass('active'), o.animate({ opacity: 1 }, i / 4, function () { s.removeClass('active last-active'), e = setTimeout(() => {n(t)}, i);});}; $j.fn.slideshow = function () { return o.apply(this) } }($j), document.observe('dom:loaded', function () { $('usersCreatedRecently') && ($('selectButtons').show(), $('selectSuspicious').observe('click', function () { select_all_suspicious_users();}), $('selectNone').observe('click', function () { deselect_all_users();}));}), $j(() => {$j("#deleteShelvesFilter").search("#deleteShelvesList > li > label","#deleteShelvesFilter",function(t){t.empty(function(){$j("#deleteShelvesList > li").addClass("initiallyHidden")}),t.reset(function(){$j("#deleteShelvesList > li").removeClass("initiallyHidden")}),t.results(function(t){$j("#deleteShelvesList > li").addClass("initiallyHidden"),t.parent().removeClass("initiallyHidden")})}),$j(".spamResultItemCheckbox").change(function(){updateSpamResultItemStyling()}),$j(".spamSearchSelectAll").change(function(){$j(".spamResultItemCheckbox").prop("checked",this.checked),$j(".spamSearchSelectAll").prop("checked",this.checked),updateSpamResultItemStyling()}),$j("#spamDeletionForm").submit(function(){var t=$j(".spamResultItemCheckbox:checked").length,e="You are about to delete ";return e+=t,e+=1==t?" item":" items",1==confirm(e)}),updateSpamResultItemStyling(),$j("#notes").on("change","#notes_filter",function(){this.form.submit()})}), $j(document).on('click', "#deleteUsersButton", function (t) { var e = ""; var i=$j(document.createElement("textarea")).attr("name","multi_delete_note").attr("rows","4").attr("id","multi_delete_note").attr("cols","45"); var o = $j(document.createElement('input')).attr('type', "button").attr('value', "Delete Users").attr('id', "submitMultiDelete")
.attr('class', "button"); return t.preventDefault(), 0 === $j('.jsAdminCheckbox:checkbox:checked').length ? void alert('No users selected.'):void ((!$j('.jsToggleDeleteSockPuppet').is(':checked') || confirm('Please confirm that these are sock puppet users, and you want delete all content they have created.')) && ($j(".jsToggleDeleteSpam:checkbox:checked").length==0||confirm('Please confirm that these are spam users, and you want to delete all content that they have created. Please also confirm that you are not deleting librarians using this tool.')) && ($j('.jsAdminCheckbox:checkbox:checked').each((t,i) => {e+=$j(i).attr("data_user_name")+", "}), e = e.slice(0, -2), Lightbox.showBoxString('<h2>Confirm Multi-User Deletion</h2><br><b>Please enter a deletion reason:</b><br><br>'+i[0].outerHTML + "<br><br><b>Users to delete:</b> " + e + "<br><br>" + o[0].outerHTML + "<br><br><a href='#' id='cancelMultiDeleteLightbox'>Cancel</a>", 500))) }), $j(document).on('click', "#cancelMultiDeleteLightbox", function (t) { t.preventDefault(), Lightbox.hideBox();}), $j(document).on('click', "#submitMultiDelete", function () { $j('#multi_delete_note').hide(), $j('#deleteUsersForm').append($j('#multi_delete_note')), $j('#deleteUsersForm').trigger('submit', [!0]) }), $j(document).on('click', ".jsAdminCheckbox:checkbox", function () { var t = $j('.jsAdminCheckbox:checkbox:checked').length; 0 === t ? $j('#adminSelectAllCheckbox').prop('indeterminate', !1).prop('checked', !1):t === $j('.jsAdminCheckbox').length ? $j('#adminSelectAllCheckbox').prop('indeterminate', !1).prop('checked', !0):$j('#adminSelectAllCheckbox').prop('indeterminate', !0).prop('checked', !1) }), $j(document).on('click', "#adminSelectAllCheckbox", function () { $j('.jsAdminCheckbox:checkbox:checked').length === $j('.jsAdminCheckbox:checkbox').length ? ($j('.jsAdminCheckbox:checkbox').prop('checked', !1), $j('#adminSelectAllCheckbox').prop('checked', !1)):($j('.jsAdminCheckbox:checkbox').prop('checked', !0), $j('#adminSelectAllCheckbox').prop('checked', !0));}), $j(document).on('change', "input.jsToggleDeleteSpam", function (t) { $j(t.target).prop('checked') ? ($j('table.adminRecords .deleteSingleUser').hide(), $j('table.adminRecords .deleteSingleSpamUser').show(), $j('table.adminRecords .deleteSingleSockPuppet').hide(), $j('.jsToggleDeleteSockPuppet').prop('checked', !1)):($j('table.adminRecords .deleteSingleSpamUser').hide(), $j('table.adminRecords .deleteSingleUser').show()) }), $j(document).on('change', "input.jsToggleDeleteSockPuppet", function (t) { $j(t.target).prop('checked') ? ($j('table.adminRecords .deleteSingleUser').hide(), $j('table.adminRecords .deleteSingleSpamUser').hide(), $j('table.adminRecords .deleteSingleSockPuppet').show(), $j('.jsToggleDeleteSpam').prop('checked', !1)):($j('table.adminRecords .deleteSingleUser').show(), $j('table.adminRecords .deleteSingleSockPuppet').hide()) }), $j(document).on('click', ".js-notifyFlagger", function () { var t = $j(this).data('admin-action'); var e=$j(this).data("queued-item-id"); var i = $j(this).data('ui'); "show" === i ? $j('#message_field-'+t + "-" + e).show():'hide'===i ? $j('#message_field-'+t + "-" + e).hide():$j('#message_field-'+t + "-" + e).toggle() }); var grBookContextSelection = { populateBookSelectForQuotes: function () { grBookContextSelection.populateBookSelectOptions('quote_author_name', "bookSelect"), grBookContextSelection.clearOptionsFrom($j('#bookChapterSelect'));}, populateBookSelectOptions: function (t, e) { var i; var o; var n; var s; var a; var r; var l; var h; var c=$j("#"+e); var d = c.find('select'); i = $j('#'+t), o = i.val(), n = $j('#authorSelectedUrl').val() + "?sort_by_title=true&author=" + encodeURI(o), s = $j.get(n), s.done((t) => {grBookContextSelection.clearOptionsFrom(c),t&&0!==t.length?(l=1===t.length?"one book":t.length+" books",$j("#bookSearchResults").text("We found "+l+" by "+o+"."),a=new Option("Select",null),d.append(a),$j.each(t,function(t,e){h=e.title.length>40?e.title.substring(0,37)+"...":e.title,r=new Option(h,e.id),d.append(r)}),c.removeClass("initiallyHidden")):c.addClass("initiallyHidden")}) }, clearOptionsFrom: function (t) { var e = t.find('select'); e.children('option').remove(), t.addClass('initiallyHidden') }, populateBookChapterSelectOptions: function (t) { var e; var i=$j("#bookChapterSelect"); var o = i.find('select'); grBookContextSelection.clearOptionsFrom(i), e = t.is('span') ? t.attr('book_id'):t.val(); var n = $j('#bookSelectedUrl').val() + "?book=" + e; var s = $j.get(n); s.done((t) => {if(0===t.length)i.addClass("initiallyHidden");else{var e=new Option("Select",null);o.append(e),$j.each(t,function(t,e){var i=new Option(e.chapter_name,e.percent);o.append(i)}),i.removeClass("initiallyHidden")}});}, showBookAndBookChapterSelectFields: function () { $j('#bookIdSelect option').size() > 1 && $j('#bookSelect').removeClass('initiallyHidden'), $j('#bookLocationSelect option').size() > 1 && $j('#bookChapterSelect').removeClass('initiallyHidden');}, populateBookChapterSelectForTopics: function (t, e) { var i = $j('.acItem.auto_complete_selected').children('.ac_book'); grBookContextSelection.populateBookChapterSelectOptions(i);}, clearBookChapterSelectOptionsForTopics: function () { grBookContextSelection.clearOptionsFrom($j('#bookChapterSelect'));} }; $j(document).ready(() => {$j("#quote_body").focus(),grBookContextSelection.showBookAndBookChapterSelectFields();var t=$j(".sharingToggle"),e=t.children("input");$j("#bookIdSelect").on("change",function(i){bookIdField=$j(this),grBookContextSelection.populateBookChapterSelectOptions(bookIdField);var o="None"===bookIdField.val()||null===bookIdField.val();t.toggleClass("disabled",o),e.prop("disabled",o)}),$j("#quote_author_name").change(function(t){grBookContextSelection.populateBookSelectForQuotes()})}); var refreshBookChapterEditButtons = function () { $j('.deleteExistingBookChapterButton').on('click', function (t) { var e = $j(this); t.preventDefault(); var i = $j.post(e.attr('href'), { _method: "delete" }); i.done(() => {e.closest("tr").remove(),InlineFlash.showNotice("Chapter deleted")}) }), $j('.deleteNewBookChapterButton').on('click', function (t) { var e = $j(this); t.preventDefault(); var i; var o; var n = e.closest('tr'); n.hasClass('even') ? (i = "even", o = "odd"):(i = "odd", o = "even"); var s = n.nextAll('.chapter'); s.removeClass('odd even'), s.filter(':even').addClass(i), s.filter(':odd').addClass(o), n.remove();});}; var enableAddBookChapterButton=function(){$j(".addNewBookChapterButton").on("click",function(t){var e=$j("#chapterEditTable .chapter").length,i=$j("#chapterEditTable .newChapter"),o=i.clone(!0);lastRow=$j("#chapterEditTable tr.chapter").last(),lastRow.hasClass("even")?i.addClass("odd"):i.addClass("even"),i.removeClass("newChapter hidden").addClass("chapter"),chapterRowId="chapterRow"+e,i.attr("id",chapterRowId),i.children("#chapterNumber").append(e),i.children("td").each(function(){var t=$j(this).children("input"),i=t.attr("name");newName="book_chapters["+e+"]["+i+"]",t.attr("name",newName)}),$j("#chapterEditTable .chapter:last").after(o)})}; var enableMakeDefaultChapterBookLink = function () { $j('#makeDefaultChapterBookLink').on('click', function (t) { var e = $j(this); t.preventDefault(); var i = $j.post(e.attr('href'), { _method: "post" }); i.done(() => {e.replaceWith("This book's chapters are now the default for the associated work.")}) });}; $j(document).ready(() => {refreshBookChapterEditButtons(),enableAddBookChapterButton(),enableMakeDefaultChapterBookLink()}), $j(window).load(() => {$gr.shared.bookCarousel.attachTo(".bookCarousel")}), $j(() => {$gr.shared.newsfeedUpdateUI.attachTo(".js-newsfeed-container"),$gr.shared.attachNewsfeedComponents(),$gr.communityQA.readerQAForm.attachTo(".js-readerQAForm"),$gr.communityQA.shareToggle.attachTo(".js-shareToggle"),$gr.communityQA.facebookTimelinePoster.attachTo(".js-facebookTimelinePoster"),$gr.communityQA.editQAMessageForm.attachTo(".js-editQAMessageForm"),$gr.shared.notification.attachTo(".js-standalone-notification"),LoadMore.attachTo(".jsLoadMoreAnswered",{loadMoreContainerSelector:"#loadMoreContainerAnsweredQuestions",loadMoreActionSelector:".loadMoreActionAnsweredQuestions",loadMoreSelector:".jsLoadMoreAnswered"}),LoadMore.attachTo(".jsLoadMoreUnanswered",{loadMoreContainerSelector:"#loadMoreContainerUnansweredQuestions",loadMoreActionSelector:".loadMoreActionUnansweredQuestions",loadMoreSelector:"jsLoadMoreUnanswered"}),$gr.shared.toggleQaForm.attachTo(document),$gr.shared.authorDashboardQA.attachTo(".js-authorDashboardQA"),$gr.shared.editInPlaceController.attachTo(".communityAnswer.js-editInPlace",{editableElementSelector:".communityAnswerText",highlightElementSelector:".communityAnswerText",elementsToHideSelectors:".communityAnswererName, .communityAnswerText, .communityAnswerFooter"}),$gr.shared.editInPlaceController.attachTo("#helpBox.js-editInPlace",{editableElementSelector:".helpBoxTextContainer",highlightElementSelector:".helpBoxTextContainer",elementsToHideSelectors:".js-editInPlaceEnableAction"}),$gr.shared.editorialStoryForm.attachTo(".js-editorialStoryForm"),$gr.shared.audibleSampleButton.attachTo(window),$gr.shared.favoriteAuthor.attachTo(".authorDropdownMenu"),$gr.shared.notificationBanner.attachTo("#notificationBanner"),$gr.shared.asyncPreviewButton.attachTo(".asyncPreviewButtonContainer"),$gr.shared.asyncGlideButton.attachTo("#asyncBuyButtonContainer"),$gr.shared.authorAnswersSort.attachTo(".js-authorAnswersSort"),$gr.shared.inAppNotification.attachTo(".notificationWrapper"),$gr.shared.amazonPurchasesBanner.attachTo(".js-amazonRateBooksHeader"),$gr.shared.twitterDialog.attachTo(".twitterDialog"),$gr.shared.twitterCallbacks.attachTo(".mainContentContainer"),$gr.shared.confirmModal.attachTo(".js-confirmModal"),$gr.shared.modal.attachTo(".js-modal"),$gr.shared.modalTrigger.attachTo(".js-modalTrigger"),$gr.shared.checkBoxForm.attachTo(".js-genresForm",{checkedClass:"genreButtonChecked",checkBoxContainerSelector:".genreButton"}),$gr.shared.newsfeedTracking.attachTo(document,{trackingContainerSelector:".newsfeedUpdates"}),$gr.shared.previewableNewsfeedStoryForm.attachTo(".js-previewableNewsfeedStoryForm"),$gr.shared.challenge.attachTo(".challengeSteps"),$gr.shared.dataStoreUserPreferences.attachTo(document),$gr.shared.formBoxChecker.attachTo(".js-formBoxChecker",{massCheckAll:!0}),$gr.shared.openGlidePopup.attachTo(".glideButton"),$gr.shared.lazilyLoadedGlidePopup.attachTo(".js-lazyGlideContainer"),$gr.shared.favoriteGenre.attachTo(".js-favoriteGenre"),$gr.shared.reviewDraftDataCollection.attachTo(".js-reviewUserText"),$gr.shared.ratingDistTooltip.attachTo(".js-ratingDistTooltip"),$gr.shared.readingNote.attachTo(".js-readingNote"),$gr.shared.readingNoteBanner.attachTo(".js-readingNotesBanner"),$gr.shared.paginatedReadingNotesLinksWidget.attachTo(".js-paginatedReadingNotesLinks"),$gr.shared.giveawayBookFindWidget.attachTo("#giveawayBookFindWidget"),$gr.shared.videoInline.attachTo(".js-videoInline")}), $j(document).on('lazyload:complete', function () { $gr.communityQA.readerQAForm.attachTo('.js-readerQAForm'), $gr.communityQA.shareToggle.attachTo('.js-shareToggle'), $gr.shared.paginatedReadingNotesLinksWidget.attachTo('.js-paginatedReadingNotesLinks'), $gr.shared.readingNote.attachTo('.js-readingNote') }), $j(document).ready(() => {LoadMore.attachTo(".jsLoadMore")}), $gr.shared.attachNewsfeedComponents = function (t) { t = "undefined"===typeof t ? "":t, $gr.shared.newsfeedNav.attachTo(`${t}.js-newsfeedNav`), $gr.shared.updateFiltersForm.attachTo(`${t}.js-updateFiltersForm`), $gr.shared.checkBoxForm.attachTo(`${t}.js-genresForm`, { checkedClass: "genreButtonChecked", checkBoxContainerSelector: ".genreButton" }), $gr.shared.relatedWorks.attachTo(`${t}.js-relatedWorksTrigger`), LoadMore.attachTo(`${t}.jsLoadMoreUpdates`, { loadMoreContainerSelector: "#loadMoreContainerUpdates", loadMoreActionSelector: ".loadMoreActionUpdates", loadMoreSelector: ".jsLoadMoreUpdates" }), $gr.shared.newsfeedMenu.attachTo('.js-newsfeedStoryDropdown'), $gr.shared.tooltip.attachTo(`${t}.js-tooltipTrigger`), $gr.shared.dataTooltip.attachTo(`${t}.js-dataTooltip`), $gr.shared.modal.attachTo(`${t}.js-modal`), $gr.shared.modalTrigger.attachTo(`${t}.js-modalTrigger`), $gr.shared.followSuggestedAuthor.attachTo(`${t}.js-followSuggestedAuthor`), $gr.shared.authorFollow.attachTo(`${t}.js-AuthorFollow`), $gr.shared.libraryExport.attachTo(`${t}.js-LibraryExport`), $gr.shared.confirmNilReadAt.attachTo(`${t}.js-confirmNilReadAt`), $gr.shared.readingYear.attachTo(`${t}.js-readingYear`), $gr.shared.yearInBooksUserBlurb.attachTo(`${t}.js-yearInBooksUserBlurb`);}; var EnableButtons = { enableButtons: function (t) { return t.observe('click', function (e) { $(t).up().request(), e.stop();}), $(t);} }; Element.addMethods(EnableButtons), Element.enableButtons = function (t) { t.observe('click', function (e) { $(t).up('form').request(), e.stop() }) }, Element.addMethods({ enableButtons: Element.enableButtons }), document.observe('dom:loaded', function () { enableAll('.relatedVoteAction'), enableAll('.ignoreRelatedWorkAction'), enableAll('.userNotInterestedWorkAction');}), $j(document).ready(() => {$j(".eventResponseForm").bind("ajax:beforeSend",function(){$j(this).find(".loadingImage").show()}).bind("ajax:success",function(t,e){var i=$j(this);i.closest(".respondEvent").hide(),i.find(".loadingImage").hide(),i.closest(".respondEvent").parent().find(".respondEventStatus").html(e)})}), $j(() => {function t(t){var e=t.parent(),i=t.closest(".expandableContainer");e.hide(),e.hasClass("fullContent")?i.find(".truncatedContent").show():i.find(".fullContent").show()}$j(document).on("click",".jsHide, .jsShow",function(e){e.preventDefault(),t($j(e.target))})}), $grfb = function () { var t = "email, user_friends"; var e={grSession:!1,suppressAutoLogin:!1}; var i = $j.Deferred(); window.fbAsyncInit = function () {
FB.init({ appId: e.appId,
// This is what makes login work! The cookie contains a signed request;
  cookie: "localhost" === location.hostname ? " ":!0,
  // parse any social plugins on the page (misnomer! not related to XFBML!)
  xfbml: !0,
version: "v3.1" }), FB.getLoginStatus((t) => {$grfb.auth=t,i.resolveWith($grfb)}), FB.Event.subscribe('auth.authResponseChange', function (t) { $grfb.auth = t;})
}; var o = function (t) { $j.extend(e, t); const i = "fb-sdk-iframe"; !(function(){if(!document.getElementById(i)){var t=document.createElement("iframe"),e=t.frameElement||t;e.style.cssText="width: 0; height: 0; border: 0",t.src="javascript:false",t.id=i;var o=document.createElement("div");o.style.cssText="width: 0; height: 0; border: 0",document.body.appendChild(o),o.appendChild(t);var n=t.contentWindow,s=n.document,a="//connect.facebook.net/en_US/sdk.js";s.open().write('<head><meta name="referrer" content="same-origin"></head><body onload="window.inDapIF = true;var js = document.createElement(\'script\');js.src = \''+a+"';document.body.appendChild(js);\">"),s.close()}}())}; var n=function(e){e="object"==typeof e?e:{};var o,n=$j.Deferred(),s=t;return FB.login(function(t){"object"==typeof t&&"connected"===t.status?n.resolve(t):n.reject(t)},{scope:s,auth_type:"rerequest"}),i.done(function(){"connected"===this.auth.status&&
// Warning! This might not be good enough; this will fail if the user
n.resolve(this.auth)}),n.done(function(){e.hasOwnProperty("trackingId")&&(o=$j.post("/track/track",{tid:e.trackingId})),e.hasOwnProperty("redirect")&&$j.when(o).always(function(){window.location.href=e.redirect})}).fail(function(){u.resolve()}),n.promise()}; var s=function(){var t=$j.Deferred();return i.done(function(){"connected"===this.auth.status?FB.logout(function(){t.resolve()}):t.resolve()}),t.promise()}; var a=function(t,e){e="object"==typeof e?e:{};var i=$j.Deferred(),o=t.split(","),n={scope:t,return_scopes:!0,auth_type:"rerequest"},s=function(t){if(t.hasOwnProperty("authResponse")&&t.authResponse.hasOwnProperty("grantedScopes")){var e=t.authResponse.grantedScopes.split(","),n=!0;$j.each(o,function(t,i){$j.inArray(i,e)<=-1&&(n=!1)}),n?i.resolve():i.reject()}else i.reject()};return FB.login(s,n),i.done(function(){e.hasOwnProperty("redirect")&&(window.location.href=e.redirect)}),i.fail(function(){e.hasOwnProperty("declinedRedirect")&&(window.location.href=e.declinedRedirect)}),i.promise()}; var r=function(){var t=$j.Deferred();return i.done(function(){"connected"===this.auth.status?$j.ajax({type:"DELETE",url:"/facebook_users/destroy",data:{deauth:!0}}).done(function(){FB.getLoginStatus(),t.resolve()}).fail(function(){t.reject()}):"not_authorized"===this.auth.status?$j.ajax({type:"DELETE",url:"/facebook_users/destroy",data:{deauth:!1}}).done(function(){FB.getLoginStatus(),t.resolve()}).fail(function(){t.reject()}):t.reject()}),t.promise()}; var l=function(t){var e=$j.Deferred();return i.done(function(){t.method="share",FB.ui(t,function(t){e.resolve(t)})}),e.done(function(e){if(e&&"object"==typeof e){var i;i=t.hasOwnProperty("trackingId")?t.trackingId:"fb_"+t.resource_type+"_share_form_opp",$j.post("/track/track",{tid:i})}}),e.promise()}; var h=function(t){var e=$j.Deferred();return i.done(function(){t.method="feed",FB.ui(t,function(t){e.resolve(t)})}),e.done(function(e){if(e&&"object"==typeof e){var i;i=t.hasOwnProperty("trackingId")?t.trackingId:"fb_"+t.resource_type+"_feed_form_opp",$j.post("/track/track",{tid:i})}}),e.promise()}; var c=function(t){var e=$j.Deferred();return i.done(function(){t.method="send",FB.ui(t,function(t){t&&"object"==typeof t&&t.hasOwnProperty("success")?e.resolve(t):e.reject(t)})}),e.promise()}; var d = function (t) { var e = $j.Deferred(); return i.done(() => {FB.ui({method:"pagetab"},function(i){if(i&&"object"==typeof i&&i.hasOwnProperty("tabs_added")&&0!==i.tabs_added.length){for(facebook_page_id in i.tabs_added)if(i.tabs_added.hasOwnProperty(facebook_page_id)&&"object"==typeof t){var o={"facebook_page[facebook_page_id]":facebook_page_id,"facebook_page[page_type]":t.pageType};"g"===t.pageType&&(o["facebook_page[group_id]"]=t.groupId),$j.post("/facebook/page_tab",o)}e.resolve(i)}else e.reject(i)})}), e.promise() }; i.done(function () { var t = !0; window.Mobvious && (t = "mobile" !== window.Mobvious.device_type), e.grSession || e.suppressAutoLogin || "connected" === this.auth.status && (t && Lightbox.showBoxByID('fbSigninNotification'), $j.post('/track/track', { tid: "fb_auto_login" }).fail(() => {t&&Lightbox.hideBox()}).done(() => {location.reload()})) }), i.done(function () { return e.grSession && ('true'!==Cookies.get('fbl') || e.serverFBUser && "connected" === this.auth.status) ? void 0:u.resolve() }); var u = $j.Deferred(); return u.done(() => {var t=$j.Deferred();t.done(function(){$j.post("/user/sign_out?facebook_auto_logout=true&broken_fb_connection=true").done(function(){var t=window.Mobvious&&"mobile"===window.Mobvious.device_type;t?window.location.href="/user/sign_in?returnurl="+encodeURIComponent(location.pathname+location.search):location.reload()})}),e.grSession&&t.resolve()}), { init: i.promise(), initialize: o, login: n, logout: s, ensurePermission: a, disconnect: r, shareDialog: l, feedDialog: h, sendDialog: c, pageTabDialog: d };}(), $j(document).on('click', ".fbjsLogin", function (t) { var e = $j(this); var i = e.data(); if (!i.hasOwnProperty('redirect')) { var o = e.attr('href'); "" !== o && (i.redirect = o) }$grfb.login(i), t.preventDefault() }), $j(document).on('click', ".fbEnsurePermissions", function (t) { var e = $j(this); var i=e.data(); var o = e.attr('href'); i.hasOwnProperty('redirect') || "" !== o && (i.redirect = o), i.hasOwnProperty('permissions') ? $grfb.ensurePermission(i.permissions, i):$grfb.login(i), t.preventDefault() }), $j(document).on('click', ".fbjsLogout", function (t) { var e = this; var i=$j(this).attr("href"); var o=$grfb.logout(); var n = function () {}; "" === i || (n = void 0 === $j(this).data('method') ? function () { window.location.href = i;}:function () { $j.rails.handleMethod($j(e)) }), o.done(n), t.preventDefault();}), $j(document).ready(() => {$j("#auto_add_fb_friends.autosave").click(function(){$j.post("/user/toggle_auto_add_fb_friends_pref",{auto_add_fb_friends:$j("#auto_add_fb_friends").is(":checked")}).success(function(){$j("#pref_status").html("Preference saved.").effect("highlight",{},2e3)}).error(function(){$j("#pref_status").html("There was an error saving your preference.").effect("highlight",{},2e3)})}),$j("body").on("submit","#confirmAutoAddForm",function(t){var e=$j(t.target);$j("#user_auto_add_fb_friends").prop("checked","true"==e.find("#auto_add_fb_friends_confirm").val()),$j.post(e.attr("action"),e.serialize()).success(function(){Lightbox.hideBox()}).error(function(){alert("There was an error saving your preference. Please try again.")}),t.preventDefault()})}), $gr.giveaway = function () { var t = "required"; var e="disabled"; var i=function(){var e=$j("<label>",{"for":"giveaway_book_id"});$j("#giveaway_book_isbn").val("").removeAttr(t),$j("#giveawayIsbnContainer").hide(),$j("#giveawayBookIdContainer").css("display","inline-block"),$j("#giveaway_book_id").prop(t,t),$j("#isbnTooltip").hide(),e.text("Book ID").attr({id:"giveawayBookIdLabel"}),$j("#giveawayBookIsbnLabel").replaceWith(e)}; var o=function(){var e=$j("<label>",{"for":"giveaway_book_isbn"});$j("#giveaway_book_id").val("").removeAttr(t),$j("#giveawayBookIdContainer").hide(),$j("#giveawayIsbnContainer").css("display","inline-block"),$j("#giveaway_book_isbn").prop(t,t),$j("#isbnTooltip").show(),e.text("ISBN/ISBN13").attr({id:"giveawayBookIsbnLabel"}),$j("#giveawayBookIdLabel").replaceWith(e)}; var n = function () { this.checked ? $j('#giveawaySubmitButton').removeProp(e):$j('#giveawaySubmitButton').prop(e, e) }; return { changeToBookId: i, changeToIsbn: o, toggleSubmitButtonEnabledState: n } }(), $j(document).ready(() => {$j("#giveawayBookIdSwitchLink").click($gr.giveaway.changeToBookId),$j("#giveawayBookIsbnSwitchLink").click($gr.giveaway.changeToIsbn),$j("#termsCheckBox").click($gr.giveaway.toggleSubmitButtonEnabledState),""!==$j("#giveaway_book_id").val()?$gr.giveaway.changeToBookId():$gr.giveaway.changeToIsbn()}), void 0 == window.gr && (window.gr = {}), window.gr.toggleStatusLink = function (t, e) { var e = e || {}; var i=e.target||$$($(t).getAttribute("rel")).first(); var o = $(i).down('.status_form_contents'); !$(i).visible() || o && !o.visible() ? (e.callback instanceof Function && e.callback.apply(t, e), this.openStatusLink(t)):this.closeStatusLink(t) }, window.gr.closeStatusLink = function (t, e) { var e = e || {}; var i = e.target || $$($(t).getAttribute('rel')).first(); $(i).hide(), $(t).removeClassName('open') }, window.gr.openStatusLink = function (t, e) { var e = e || {}; var i=e.target||$$($(t).getAttribute("rel")).first(); var o = $(t).up('.status_editor'); o && o.select('.toggleLink.open').each((t) => {gr.closeStatusLink(t)}), $(i).show(); var n = $(i).down('.status_form_contents'); n && n.show(), $(t).addClassName('open');}, window.gr.install_count_chars = function (t, e) { var i = "none" === $j(e).css('display'); $j(document).on('input', t, function (t) { i && ($j(e).show(), i = !1), window.countChars(t, e);}) }, window.gr.expandSelectorHeight = function (t) { $j(() => {var e=$j(t);e.css({height:"auto","overflow-y":"hidden"}).height(e.prop("scrollHeight"))}), $j(t).on('input', function () { var e = $j(t); var i=e.outerHeight(); var o = this.scrollHeight; o > i && $j(t).height(this.scrollHeight);}) }, window.gr.makeBigger = function (t) { var e = $$(t)[0]; var i = parseInt(e.getStyle('height')); e.setStyle({ height: i + 200 + "px" });}, void 0 == window.gr && (window.gr = {}), window.gr.RecommendedUIHelper = function (t) { var e = this; return e.clear = function () { e.id_input().value = "", e.name_input().value = "", e.ui().hide(), e.autocomplete_wrapper().show(), e.name_input().focus() }, e.clear_action = function () { return void 0 === e._clear_action && (e._clear_action = $$('.reviewForm .ui_recommended .clear_action').first()), e._clear_action }, e.member = function () { return void 0 === e._member && (e._member = $$('.reviewForm .ui_recommended .member').first()), e._member;}, e.member_status = function () { return void 0 === e._member_status && (e._member_status = $$('.reviewForm .ui_recommended .member_status').first()), e._member_status;}, e.id_input = function () { return void 0 === e._id_input && (e._id_input = $$('.reviewForm #review_recommender_user_id1').first()), e._id_input }, e.name_input = function () { return void 0 === e._name_input && (e._name_input = $$('.reviewForm #review_recommender_user_name1').first()), e._name_input }, e.autocomplete_wrapper = function () { return void 0 === e._ac && (e._ac = $$('.reviewForm .autocomplete').first()), e._ac }, e.ui = function () { return void 0 === e._ui && (e._ui = $$('.reviewForm .ui_recommended').first()), e._ui;}, e.after_update_element = function (t, i) { e.id_input().value = i.id, e.id_input().setAttribute('id_for_name', i.innerHTML) }, e.set_or_invalidate_id = function () { var t = !0; try { t = e.autocompleter.getCurrentEntry(), e.after_update_element(e.autocompleter.element, t);} catch (i) {}e.id_input().getAttribute('id_for_name') !== e.name_input().value && (e.id_input().value = "");}, e.non_member_entry = function () { e.autocomplete_wrapper().hide(), e.ui().show(), e.member().hide(), e.ui().select('.clear_action').first().show(); var t = e.ui().select('.non_member').first(); t.update(e.name_input().value), t.show(), e.id_input().value = "", e.member_status().update('');}, e.member_entry = function () { e.autocomplete_wrapper().hide(), e.ui().show(), e.ui().select('.non_member').first().hide(), e.ui().select('.clear_action').first().show(), e.member().update(e.name_input().value), e.member().setAttribute('href', "/user/show/" + e.id_input().value), e.member().show(), e.member_status().update('(goodreads)');}, e.on_focus_lost = function () { setTimeout(() => {0!=e.name_input().value&&(e.set_or_invalidate_id(),0==e.id_input().value?e.non_member_entry():e.member_entry())}, 100);}, e.if_single_response_matches_name = function (t) { if (e.autocompleter.hasFocus);else { var i = new Element('div').update(t.responseText); if (i.children[0].children.length===1) { var o = i.children[0].children[0].id; var n = i.children[0].children[0].innerHTML; e.name_input().value === n && (e.id_input().value = o, e.member_entry());} } }, !t.test == !0 && (e.autocompleter = new Ajax.Autocompleter('review_recommender_user_name1', "review_recommender_user_name1_auto_complete", t.search_url, { indicator: "recommender_user_name1_indicator", afterUpdateElement: e.after_update_element, on200: e.if_single_response_matches_name }), Event.observe(e.name_input(), "blur", function () { e.on_focus_lost();}), Event.observe(e.clear_action(), "click", function () { e.clear();})), {
clear_action: e.clear, no_member_found: e.non_member_entry, after_update_element: e.after_update_element, on_focus_lost: e.on_focus_lost } }, $j(() => {$j("#showFlag").on("click",function(t){$j("#flagGroup").removeClass("initiallyHidden"),Lightbox.showBoxByID("flagGroup"),t.preventDefault()}),$j("#toggleFlagExplanation").on("click",function(t){$j("#flagExplanation").toggleClass("initiallyHidden"),t.preventDefault()})}), document.addEventListener('DOMContentLoaded', function () { $j('#signedOutHome .bookImgDiscovered').reflect({ height: 15 });}); var selected_quote = 0; window.addEventListener('load', function () { $j('#signedOutHome').length && $j('#quotes').length && setInterval('changeQuote()', 1e4) }), $j(() => {$j(".hidePurchasesModule").click(function(t){t.preventDefault(),$j.post("/user/update_preferences",{user:{show_amazon_import_prompt:0}}),$j(".amazonPurchasesModule").fadeOut()})}), $gr.hostedImage = function () { var t = 20; var e=2500; var i="hostedImg"; var o=function(o,n){return n=n||{},t=n.retryMax||t,e=n.retryDelay||e,this.img=o,this.$img=$j(o),this.$img.removeProp("onload").removeProp("onerror"),this.$img.removeClass(i),this.src=this.$img.data("src"),this.style=this.$img.attr("style"),this.$loading=this.$img.next(),this.errorMsg=this.$img.data("error"),this.retryCount=0,this.$img.removeClass(i),this}; var n=function(){var t=this.src.indexOf("?")<0?"?":"&";return this.src+t+"v="+(new Date).getTime()}; var s=function(){if(this.retryCount++<=t)$gr.hostedImage.imageLoaded(this.img)?(clearInterval(this.timer),this.$loading.remove(),this.$img.show()):(this.img=document.createElement("img"),this.img.className=i+" gr-hostedUserImg",this.img.style.display="none",this.img.src=this.s3Url(),this.$img.replaceWith(this.img),this.$img=$j(this.img),this.$img.attr("style",this.style));else{clearInterval(this.timer),this.$loading.remove();var e=document.createElement("span");e.innerHTML=this.errorMsg,this.$img.replaceWith(e)}}; var a = function (t, i) { var n = this; return o.call(n, t, i), n.timer = setInterval(() => {s.apply(n)}, e), n }; return { load: a, s3Url: n, tryLoading: s } }, $gr.hostedImage.imageLoaded = function (t) { var e = !1; return e = "object"===typeof t && t.hasOwnProperty('tagName') && "img" !== t.tagName.toLowerCase() ? !1:void 0 !== t.naturalWidth ? t.naturalWidth > 0:t.complete }, function (t) { t.fn.loadHostedImage = function () { if (!this.data('loading')) { this.data('loading', !0); var t = $gr.hostedImage(); return t.load(this.get(0)), this } };}(jQuery), function (t) { "undefined" != typeof t && Ajax.Responders.register({ onCreate: function (t) { var e; var i = $$('meta[name=request-id]')[0]; i && (e = i.readAttribute('content'), t.options.requestHeaders || (t.options.requestHeaders = {}), t.options.requestHeaders['Related-Request-Id'] = e) } });}(Prototype), function (t) { "undefined"!==typeof t && t.ajaxPrefilter((e,i,o) => {var n=t("meta[name=request-id]").attr("content");n&&o.setRequestHeader("Related-Request-Id",n)});}(jQuery), $j(() => {likeComponent.init()}); var likeComponent = function () { var t = { likeActionSelector: ".jsLike", loadingHtml: '<span class="loadingAnimation" style="display: inline"></span>' }; var e={}; var i=function(e){$j.extend(t,e),o()}; var o=function(){$j(document).on({"ajax:beforeSend":a,"ajax:success":r,"ajax:error":l},t.likeActionSelector)}; var n=function(){$j(document).off({"ajax:beforeSend":a,"ajax:success":r,"ajax:error":l},t.likeActionSelector)}; var s=function(t,e){var i=t.match(/ref=(.*_u?lk)/);i&&(i=i[1],i.match(/_lk/)?i=i.replace(/_lk/,"_ulk"):i.match(/_ulk/)&&(i=i.replace(/_ulk/,"_lk")),e.attr("href",e.attr("href")+"&ref="+i))}; var a=function(i){var o,n=$j(i.target),s=n.data("like-container-id");"undefined"==typeof s&&(o=n.text(),""!==o&&(e.bodyText=o),n.html(t.loadingHtml))}; var r=function(t,e,i){if($j.isPlainObject(e)){var o,n,a,r=$j(t.target),l=r.attr("class"),h=r.data("like-container-id");"undefined"!=typeof h?(n=$j(e.container_html),o=$j("#"+h),o.replaceWith(n),a=n.find("a.jsLike")):(n=$j(e.html),r.replaceWith(n),n.addClass(l),a=n),s(r.attr("href"),a)}}; var l = function (t, i, o) { var n = $j(t.target); var s = n.data('like-container-id'); "undefined" == typeof s && (InlineFlash.showError('We had a problem while liking the resource.'), n.text(e.bodyText));}; return { init: i, teardown: n } }(); $j(() => {window.top!==window.self&&window.location.href.match(/show_mini/)&&($j("a").attr("target","_top"),$j("a").attr("href",function(t,e){var i=$j(parent.document.getElementsByTagName("iframe")[0]).data("url1");return"undefined"!=typeof i?i+e:e}))}), $j(document).on('ajax:beforeSend', ".loadingLinkSpan", function () { var t = $j(this); var e = t.find('.loadingLink'); if (e.data('recycleElementId')) { var i = $j('#'+e.data('recycleElementId')); i && i.size() > 0 && ($j('body').append(i[0].outerHTML), i.hide());}t.find('.loadingLink, .loadingError').hide(), t.find('.loadingAnimation').show();}).on('ajax:success', ".loadingLinkSpan", function () { var t = $j(this); var e = t.find('.loadingLink'); e && (e.data('keepOnSuccess') && (e.show(), e.data('resetOnSuccess') && e.html('&nbsp;')), e.data('removeClassOnSuccess') && e.removeClass(e.data('removeClassOnSuccess')), e.data('removeOnSuccess') && $j(document).find('#'+e.data('removeOnSuccess')).remove()), t.find('.loadingAnimation, .loadingError').hide() }).on('ajax:error', ".loadingLinkSpan", function () { var t = $j(this); t.find('.loadingError').html('<span class="error">ERROR</span> try again'), t.find('.loadingLink, .loadingError').show(), t.find('.loadingAnimation').hide();})
.on('ajax:complete', ".loadingLinkSpan", function () { var t = $j(this); var e = t.find('.loadingLink'); if (e.data('recyclePlacementId')) { var i = $j('#'+e.data('recycleElementId')); i && i.size() > 0 && $j('#'+e.data('recyclePlacementId')).prepend(i) } }), $j(document).ready(() => {$j(".sendMessageToFriend").on("click",function(t){var e=$j(this).data("parentUserId"),i={channel:$j(this).data("channel"),variation:$j(this).data("variation"),parent_user_id:e};$grfb.sendDialog({link:"https://www.goodreads.com/user/sign_up?from_fb_send_dialog=true&i="+e}).done(function(){$j.post("/facebook_users/record_invitation_sent",i)}),t.preventDefault()})}), $j(() => {}), "undefined" != typeof Prototype && Ajax.Responders.register({ onCreate: function (t) { var e = $$('meta[name=csrf-token]')[0]; if (e) { var i = "X-CSRF-Token"; var o = e.readAttribute('content'); t.options.requestHeaders || (t.options.requestHeaders = {}), t.options.requestHeaders[i] = o;} } }), $j(document).ready(() => {$j(".quizFriendInvite").on("ajax:success",function(){quizFriendInviteSuccess($j(this))})}), document.observe('dom:loaded', function () { activateRateBooksMoreGenreLnk() }); var updateAmazonPurchaseImportUI = function () { $j('.js-amazonRateBooksHeader').fadeOut(), $j('.navRow a.actionLinkLite.selected').removeClass('selected'), $j('.js-amazonRateBooksStart').addClass('selected'), setGenre('amazon_purchase_import'), WantToRead.resetShelfMenuStored();}; $j(() => {$j(".jsBackToTop").on("click",function(t){t.preventDefault(),window.scroll(0,0)}),$j(".js-amazonRateBooksStart").on("click",function(){$j("#rateBooksList").html("<div class='loadingPageImage'></div>"),updateAmazonPurchaseImportUI()})}); var updateAllStarsForBookID = function (t, e) { var i = $j(`.stars[data-resource-id='${t}']`); i.each((t,i) => {$j(i).children().each(function(t,i){$j(i).removeClass("on"),$j(i).removeClass("off"),$j(i).addClass(t>=e?"off":"on")})});}; var colorStars=function(t,e){var i=t.find(".star");if(!t.hasClass("ignored"))for(var o=0;o<i.length;o++)e>=o?i[o].setAttribute("class","star on"):i[o].setAttribute("class","star off")}; var showRatingErrorMessage=function(t){t.parents(".wtrButtonContainer").find(".starsErrorTooltip").removeClass("hidden"),t.children("#starsSaving").remove(),t.children(".star").show()}; var showRelatedBooks=function(t){"undefined"!=typeof t.related_work_row&&$j("#"+t.row_id).after(t.related_work_row)}; var updateRateBooksHeaderAndFooter=function(t){var e=$j("#rateBooksHeader");e.find(".progress").length&&e.html(t.rate_books_header),$j("#rateBooksFooter").html(t.rate_books_footer)}; var updateWTRButton=function(t,e){var i=e.parents(".wtrButtonContainer");i.find(".wtrLeft").replaceWith(t.wtr_button_left);var o=i.find(".wtrRight");o.data("exclusive-shelf",t.review_read_status),WantToRead.setupShelfVisibilityInMenu(o),WantToRead.disablePrompts()}; var updateRatingStars=function(t,e){e.parents(".ratingStars").replaceWith(t.rating_stars)}; var submitStars=function(t,e,i){var o=$j("#reviewMessage"+t.data("resourceId")+"_"+i),n=$j("#successMessage"+t.data("resourceId")+"_"+i);if(!t||!t.hasClass("ignored")){var s="script",a={},r=$j(".regpathRateBooks").length>0,l=t.parents("#amazonPurchaseImport").length>0,h=t.parents(".secondaryWtrButton").length>0,c=r||l;c&&(a={format:"json",use_secondary_wtr:h},s="json");var d=t.find(".star").attr("ref"),u=t.parents(".wtrButtonContainer");$j.ajax({url:e,type:"POST",dataType:s,data:a,context:t,success:function(e){c&&$j.isPlainObject(e)&&(updateWTRButton(e,t),updateRatingStars(e,t),r&&(showRelatedBooks(e),updateRateBooksHeaderAndFooter(e))),$j(this).children("#starsSaving").remove(),u.find(".star").attr("ref",d),$j(this).children(".star").show(),o.hide(),n.show()},error:function(e){if(e&&403===e.status){var i=JSON.parse(e.responseText);i.redirect&&(location.href=i.redirect)}else h?showRatingErrorMessage(t):($j(this).addClass("error"),$j(this).html("So sorry, but there was a problem completing your request. Please reload the page and try again."))},beforeSend:function(){$j(this).append("<span id='starsSaving'>saving...</span>"),$j(this).children(".star").hide()}})}}; var enrichUrl=function(t,e,i){var o=t.match(/\?/)?t+"&":t+"?";return o=o+e+"="+i}; var clearRating = function (t) { submitStars(t, enrichUrl(t.data('submitUrl'), "rating", 0), t.data('userId')), t.data('rating', 0), colorStars(t, 0);}; $j(document).on('click', ".clearRating, .js-clearRating", function () { clearRating($j(this).siblings('div.stars')) }), $j(document).on('mouseenter', ".wtrButtonContainer div.ratingStars", function () { $j(this).hasClass('hasRating') && ($j(this).find('.myRating').hide(), $j(this).find('.clearRating').show());}).on('mouseleave', ".wtrButtonContainer div.ratingStars", function () { $j(this).find('.clearRating').hide(), $j(this).find('.myRating').show();}), $j(document).on('mouseover', ".star", function () { var t = $j(this); var e = t.parent(); colorStars(e, e.children().index(t));}).on('click', ".star", function () { var t = $j(this); var e=t.parent(); var i = e.children().index(t); return e.data('rating', i + 1), url = enrichUrl(e.data('submitUrl'), "rating", i + 1), submitStars(e, enrichUrl(url, "ref", t.attr('ref')), e.data('userId')), !1 }).on('mouseleave', "div.stars", function () { var t = $j(this); colorStars(t, t.data('rating') - 1) }), $j(document).on('click', ".recommendBook", function (t) { recommendBookPopup($j(this).data()), t.preventDefault() }); var recommendBookPopup = function (t, e) { var i; var o; var n="/recommendations/book_popup/"; var s="/book/recommend_send/"; var a="/user/update_preferences"; var r="/friend/invite"; var l=6; var h=!1; var c=""; var d=""; var u=null; var f=0; var p='<div id="recommendBookPopup" style="display: none;">     <div class="mediumText"><div class="bigText"><div class="cover"><img width="50" style="max-height: 75px;"></div></div><p><input id="friend_filter" name="friend_filter" placeholder="Search by name" results="" type="search"></p></div>     <div class="peopleContainer"><div class="people clearFix"></div></div>     <div class="paging clearFix"><a href="#" class="prev disabled">&larr; Previous</a>&nbsp;&nbsp;&nbsp;<a href="#" class="next disabled">Next &rarr;</a></div>     </div>'; var m='<div class="friend vcenteredLineOfBlocks">     <div class="pic"></div>     <div class="text">     <textarea class="message"></textarea>     <div class="name"></div>     <div class="reason"></div>     <a class="gr-button gr-button--small js-recommendButton">Recommend</a>     <span class="toggleMessage">add message</span>     <div class="banner"></div>     </div></div>'; var g='<div class="togglePref sansSerif">     <span class="explanation">We\'re asking you to recommend this book because you rated it 4 or 5 stars.</span>     <label id="togglePrefLabel">     <input id="recommendBookPopupPref" name="recommendBookPopupPref" type="checkbox">     <span>Don&rsquo;t show this again</span>     </label>     <span class="saved" style="display:none;">Preference saved!</span>     </div>'; var v='Visit your <a href="/user/edit?tab=settings" target="_blank">settings</a> to re-enable this later; just check<br> &ldquo;prompt me to recommend books to friends.&rdquo;'; var w='No friends! <a href="'+r+'">Invite a few</a> to Goodreads.'; var S='Oops, something went wrong!<br>Please wait a moment and <a href="#">try again</a>.'; var b=$j(p); var k=b.find(".people"); var C=b.find("#friend_filter"); var j=b.find(".prev"); var y = b.find('.next'); "object" == typeof e && e.hasOwnProperty('afterReview') && (h = e.afterReview); var x = function () { k.addClass('people loading'), $j.get(n + t.id, { after_review: h }).always(() => {k.removeClass("errorNotice loading")}).done((t) => {t.hasOwnProperty("friends")&&t.friends.length>0?(i=$j(t.friends).map(function(){return this.lowercaseName=this.name.toLocaleLowerCase(),this.containsUnicode=!/^[\000-\177]*$/.test(this.name),this.disabled=null!==this.readStatus||null!==this.recStatus,this}),C.on("keyup search",A),b.children(".paging").on("click",".prev, .next",L),k.on("click",".js-recommendButton",P),k.on("click","span.toggleMessage",U),""===C.val()||C.val()===C.attr("placeholder")?(I(),N()):C.keyup()):(k.removeClass("people").addClass("errorNotice"),k.html(w),h&&Lightbox.hideBox())}).fail(() => {k.removeClass("people").addClass("errorNotice"),k.html(S),k.children(".friend").click(function(t){k.empty(),x(),t.preventDefault()})}) }; x(), $j('body').append(b); var T; h ? (T = "Would any of your friends enjoy <em>" + t.title + "</em>?", b.append($j(g)), new Tip($('togglePrefLabel'), v, { style: "goodreads", stem: "topMiddle", hook: { tip: "topMiddle", target: "topMiddle" }, offset: { x: 5, y: 15 }, hideOn: !1, hideAfter: .05
}), $('togglePrefLabel').observe('prototip:shown', function () { $j('.prototip').css('z-index', 100089) }), b.find('#recommendBookPopupPref').change((t) => {$j.post(a,{"user[prompt_to_recommend_books]":$j(t.target).prop("checked")?"0":"1"},function(){$j("#recommendBookPopup .saved").show().delay(1e3).fadeOut()})})):T = "Recommend <em>" + t.title + "</em> to your friends", b.find('.bigText').append(T), b.find('.cover img').attr({ src: t.image, alt: t.title }), $j(() => {Lightbox.showBoxByID("recommendBookPopup",715,300),Lightbox.center("box"),$j("#lightBoxRightClose").remove(),document.observe("Lightbox:hideBox",function(){document.stopObserving("Lightbox:hideBox"),$j("#recommendBookPopup").remove()})}); var A = _.debounce((t) => {c=t.target.value,c===C.attr("placeholder")&&(c=""),c!==d&&(I(),N()),d=c}, 300); var B=function(t,e){return e.score!==t.score?e.score-t.score:t.containsUnicode||e.containsUnicode?t.lowercaseName.localeCompare(e.lowercaseName):t.lowercaseName<e.lowercaseName?-1:t.lowercaseName>e.lowercaseName?1:0}; var I=function(){o=$j(jQuery.extend({},i)),c.length>0?(null===u&&(u=f),f=0,o.each(function(){this.score=this.name.score(c)}),o.sort(B)):(f=u||0,u=null),M()}; var M=function(){c.length>0&&(o=o.filter(function(){return this.score>0}))}; var E=function(t){if(!t.hasOwnProperty("html")){var e=$j(m);e.data("friend",t),e.toggleClass("disabled",t.hasOwnProperty("disabled")&&t.disabled),e.find(".name").html(t.name),e.find(".reason").html(t.reason),e.find(".banner").html(R(t.readStatus)),e.find(".message").attr("placeholder",t.name+" would like this book because..."),null!==t.imageUrl&&e.children(".pic").css("background-image",'url("'+t.imageUrl+'")'),t.html=e}return t.html}; var R=function(t){switch(t){case"read":return"Marked as Read";case"to-read":return"Marked as Want to Read";case"currently-reading":return"Marked as Currently Reading";default:return"Recommended"}}; var N=function(){k.children().detach();var t=l*f;o.length>0?(k.empty().addClass("people").removeClass("errorNotice"),o.slice(t,t+l).each(function(){k.append(E(this))})):(k.addClass("errorNotice").removeClass("people"),k.html("No matches found.")),F(o.length)}; var F=function(){var t=o.length>l,e=o.length/l-1<=f;j.toggleClass("disabled",!t||0===f),y.toggleClass("disabled",!t||e)}; var L=function(t){var e=$j(t.target),i=e.hasClass("prev")?-1:1;e.hasClass("disabled")||(f+=i,N()),t.preventDefault()}; var P=function(e){var n=$j(e.target).parents(".friend"),a=n.data("friend"),r=n.find(".message"),d=r.is(":visible");a.disabled=!0,n.addClass("disabled"),n.removeClass("messageVisible");var u={send:{}};if(u.send[a.id]=!0,u.source="recommend_book_popup",d&&(u.message=r.val()),h?u.context="after_review":u.context="not_after_review",$j.post(s+t.id,u,null,"script"),0===c.length){var f,p,m,g=$j.inArray(a,i),v=0;for(f=g+1;f<i.length;f++)if(!i[f].disabled&&(v++,v>=l)){p=i[f],m=f;break}i=p?i.slice(0,g).add(p).add(i.slice(g+1,m)).add(i.slice(m+1)).add(i[g]):i.slice(0,g).add(i.slice(g+1)).add(i[g]),o=$j(jQuery.extend({},i)),n.delay(2500).fadeOut(700,function(){N(),this.show()})}}; var U = function (t) { var e = $j(t.target); var i=e.parents(".friend"); var o = "clear message" !== e.html(); i.toggleClass('messageVisible', o), e.html(o ? "clear message":'add message'), o && i.find('.message').focus();};}; var adjustRecommendationSponsoredBookHeight = function () { try { var t = $j('#sponsoredBookContainer').find('div'); var e=t.children().find("iframe"); var i=e.contents().find("iframe"); var o = (i.contents().find('.bookDescription').find('a'), i.contents().find('body').height()); e.attr('height', o), i.attr('height', o), t.height(o);} catch (n) { if ('SecurityError'!=n.name) throw n } }; $j(setTimeout(() => {try{var t=$j("#sponsoredBookContainer").find("div"),e=t.children().find("iframe"),i=e.contents().find("iframe"),o=i.contents().find(".bookDescription").find("a");o.on("click",adjustRecommendationSponsoredBookHeight)}catch(n){if("SecurityError"!=n.name)throw n}}, 4e3)), /*!
	reflection.js for jQuery v1.11
	(c) 2006-2013 Christophe Beyls <http://www.digitalia.be>
	MIT-style license.
*/
(function(t){t.fn.extend({reflect:function(e){return e=t.extend({height:1/3,opacity:.5},e),this.unreflect().each(function(){function i(){var i,n,s,a,r,l=o.width,h=o.height;if(n=Math.floor(e.height>1?Math.min(h,e.height):h*e.height),i=t("<canvas />")[0],i.getContext){a=i.getContext("2d");try{t(i).attr({width:l,height:n}),a.save(),a.translate(0,h-1),a.scale(1,-1),a.drawImage(o,0,0,l,h),a.restore(),a.globalCompositeOperation="destination-out",r=a.createLinearGradient(0,0,0,n),r.addColorStop(0,"rgba(255, 255, 255, "+(1-e.opacity)+")"),r.addColorStop(1,"rgba(255, 255, 255, 1.0)"),a.fillStyle=r,a.rect(0,0,l,n),a.fill()}catch(c){return}}else{if(!window.ActiveXObject)return;i=t("<img />").attr("src",o.src).css({width:l,height:h,marginBottom:n-h,filter:"FlipV progid:DXImageTransform.Microsoft.Alpha(Opacity="+100*e.opacity+", FinishOpacity=0, Style=1, StartX=0, StartY=0, FinishX=0, FinishY="+n/h*100+")"})[0]}t(i).css({display:"block",border:0}),s=t(/^a$/i.test(o.parentNode.tagName)?"<span />":"<div />").insertAfter(o).append([o,i])[0],s.className=o.className,t.data(o,"reflected",s.style.cssText=o.style.cssText),t(s).css({width:l,height:h+n,overflow:"hidden"}),o.style.cssText="display: block; border: 0px",o.className="reflected"}var o=this;/^img$/i.test(o.tagName)&&(o.complete?i():t(o).load(i))})},unreflect:function(){return this.unbind("load").each(function(){var e,i=this,o=t.data(this,"reflected");void 0!==o&&(e=i.parentNode,i.className=e.className,i.style.cssText=o,t.removeData(i,"reflected"),e.parentNode.replaceChild(i,e))})}})}(jQuery)), jQuery((t) => {t("img.reflect").reflect({})}), window.twttr = function (t, e, i) { var o; var n; var s = t.getElementsByTagName(e)[0]; if (!t.getElementById(i)) return n = t.createElement(e), n.id = i, n.src = "https://platform.twitter.com/widgets.js", s.parentNode.insertBefore(n, s), window.twttr || (o = { _e: [], ready: function (t) { o._e.push(t);} });}(document, "script", "twitter-wjs"), $gr.user.user_name_edit = function () { var t = {}; var e = function () { var e = $j('#user_full_name_source'); t.first_name = $j('#user_first_name').val(), t.middle_name = $j('#user_middle_name').val(), t.last_name = $j('#user_last_name').val(); var i = {}; i.FL = t.first_name + " " + t.last_name, i.FML = t.first_name + " " + t.middle_name + " " + t.last_name, i.LF = t.last_name + " " + t.first_name, e.find('option').each((t,e) => {e.text=i[$j(e).val()]});}; return { sync_dropdown: e } }(), $j(document).on('keyup', "#user_first_name, #user_middle_name, #user_last_name", function (t) { $gr.user.user_name_edit.sync_dropdown() }), $gr.user.custom_gender_suggestions = ['agender', "androgyne", "androgynous", "bigender", "cis", "cisgender", "cis female", "cis male", "cis man", "cis woman", "cisgender female", "cisgender male", "cisgender man", "cisgender woman", "female to male", "FTM", "gender fluid", "gender nonconforming", "gender questioning", "gender variant", "genderqueer", "intersex", "male to female", "MTF", "neither", "neutrois", "non-binary", "other", "pangender", "trans", "trans*", "trans female", "trans* female", "trans male", "trans* male", "trans man", "trans* man", "trans person", "trans* person", "trans woman", "trans* woman", "transfeminine", "transgender", "transgender female", "transgender male", "transgender man", "transgender person", "transgender woman", "transmasculine", "transsexual", "transsexual female", "transsexual male", "transsexual man", "transsexual person", "transsexual woman", "two-spirit"], $gr.user.show_custom_gender_options_if_needed = function () { "C" == $j('#user_gender').val() ? $j('#custom_gender_fields').show():$j('#custom_gender_fields').hide() }, $gr.user.autocomplete_gender_suggestions = function () { var t = $j('#user_gender_custom').val(); var e=""; var i = ""; return t.length >= 2 && $gr.user.custom_gender_suggestions.each((e) => {e.toUpperCase().startsWith(t.toUpperCase())&&(i+='<li class="resultsListItem"><a class="resultsListItemLink" href="#">'+e+"</a></li>")}), "" !== i && (e = '<ul class="resultsList">' + i + "</ul>"), e }, $j(document).ready(() => {$j("#user_full_name_source").append($j("<option value='FL'></option>")),""!==$j("#user_middle_name").val()&&$j("#user_full_name_source").append($j("<option value='FML'></option>")),""!==$j("#user_last_name").val()&&$j("#user_full_name_source").append($j("<option value='LF'></option>")),$gr.user.user_name_edit.sync_dropdown(),$j("#user_gender").change($gr.user.show_custom_gender_options_if_needed),$gr.user.show_custom_gender_options_if_needed(),Autocomplete.attachTo("#user_gender_custom",{menuListParentSelector:"#custom_gender_autocomplete",queryCallback:$gr.user.autocomplete_gender_suggestions,queryDebounceDuration:200,selectToFillIn:!0})}), $gr.user.user_feed_preferences = function () { var t = function (t) { var e = $j('#grok_'+t + "_en"); var i=$j("#grok_"+t+"_dis"); var o=$j("#gr_"+t+"_en"); var n=$j("#gr_"+t+"_dis"); var s=$j(".checkboxCorrespondingTo-"+t); var a=s.length; var r = s.filter(':checked').length; a == r ? (e.css('display', "block"), i.css('display', "none")):(e.css('display', "none"), i.css('display', "block")), r > 0 ? (o.css('display', "block"), n.css('display', "none")):(o.css('display', "none"), n.css('display', "block"));}; $j('.checkboxCorrespondingTo-publish_book_activities').on('click', function (e) { t('publish_book_activities') }), $j('.checkboxCorrespondingTo-publish_review_activities').on('click', function (e) { t('publish_review_activities') }), $j('.checkboxCorrespondingTo-publish_additional_activities').on('click', function (e) { t('publish_additional_activities');}) }, $j(document).ready(() => {$gr.user.user_feed_preferences()}), Element.activateHideNewShelfForm = function (t) { t.observe('click', function (e) { var i = t.up('#createShelfTip'); void 0 != i && (i.previous().addClassName('lastRow'), i.hide()), new Ajax.Request(t.href), e.stop();});}, Element.addMethods({ activateHideNewShelfForm: Element.activateHideNewShelfForm }), document.observe('dom:loaded', function () { var t = $('hideNewShelfForm'); t && t.activateHideNewShelfForm(), $j('#shelfTable .userShelfName .renameUserShelfLnk').click(function () { return showRenameForm($j(this)), !1 }), $j('#shelfTable .userShelfName .cancelRenameUserShelf').click(function () { return hideRenameForm($j(this)), !1 }), $j('#shelfTable .userShelfName .submitRenameUserShelf').click(function () { return submitRenameShelf($j(this).closest('form')), !1 }) }), document.observe('dom:loaded', function () { activateExpandDetailsLinks();}); var after_update = function (t) { return function (e, i) { $j('#'+t + "_name").val().replace(/ *\(.*\) *$/, ""); var o = i.readAttribute('id').replace(/auto_complete_/, ""); var n=o.split("_"); var s = n[n.length - 1]; $j('#'+t + "_id").val(s) } }; $j(document).ready(() => {$j("div.metaMerge > div.floatRightContainer").children("a").hide(),$j("div.metaMerge > div.meta_to_delete").children("input:checkbox").prop("checked",!1)}), $j(document).on('change', "div.meta_to_delete > input:checkbox", function () { var t = this.parent(); if (this.checked)$j('div.meta_to_delete').not(t).children('input:checkbox').hide(), $j('div.meta_to_delete').children('label').hide(), $j(t).children('input:checkbox,a').show(), $j('div.meta_to_keep').children('input:checkbox,a').show(), $j('div.meta_to_keep').children('a.meta_to_keep').attr('href', $j(t).children('a.meta_to_delete').attr('href')); else { var e = $j('div.metaMerge > div.floatRightContainer'); e.find('a').hide(), e.find('input:checkbox').show();} }); var MixinAuthRedirect = function () { this.authRedirect = function (t, e) { if (t && 403 === t.status) { var i = JSON.parse(t.responseText); i.redirect && (location.href = i.redirect) } else "function" == typeof e ? e(t):alert('So sorry, but there was a problem completing your request. Please reload the page and try again.');} }; var MixinBackgoundMask=function(){var t="bgmask-";this.initializeBackgroundMask=function(t){this.backgroundMaskId||("string"!=typeof t&&(t=""),t+=" backgroundMask","string"==typeof this.attr.componentName&&(t+=" "+this.attr.componentName+"Mask"),this.backgroundMaskId=this.generateBackgroundMaskId(t),$j("#"+this.backgroundMaskId).length||this.trigger(document,"create.viewportOverlay",{overlayId:this.backgroundMaskId,attr:{className:t,disableDirectHide:!0}}))},this.hideBackgroundMask=function(){this.trigger(document,"hide.viewportOverlay",{overlayId:this.backgroundMaskId})},this.showBackgroundMask=function(){this.trigger(document,"show.viewportOverlay",{overlayId:this.backgroundMaskId})},this.generateBackgroundMaskId=function(e){var i=e.split("").reduce(function(t,e){return t=(t<<5)-t+e.charCodeAt(0),t&t},0);return 0>i&&(i="0"+Math.abs(i).toString()),t+i}}; var dropdownMenu=function(){this.defaultAttrs({menuToggleSelector:".js-toggleDropdownMenu"}),this.after("initialize",function(){var t=this,e=this.getMenuToggleElement();t.$node.attr("tabindex",-1),t.$node.bind("focusout",function(i){setTimeout(function(){var o=document.activeElement;o&&!e.is(o)&&($j.contains(i.currentTarget,o)||(t.$node.toggle(!1),$j(".js-newsfeedOverlay").last().hide()))},1)}),e.click(function(e){e.preventDefault(),t.toggleDropdownMenu(),t.$node.is(":visible")?(t.$node.focus(),$j(".js-newsfeedOverlay").last().show()):$j(".js-newsfeedOverlay").last().hide()})}),this.toggleDropdownMenu=function(){this.$node.toggle()},this.getMenuToggleElement=function(){var t,e;return t=this.$node,e=t.prevAll(this.attr.menuToggleSelector).first()}}; var withExpandableTextField=function(){flight.compose.mixin(this,[MixinEventUtils]),this.defaultAttrs({expandedClass:"expanded",loadingClass:"loading",showClass:"show",cancelActionSelector:".cancelAction",hiddenContentSelector:".hiddenContent",inputFieldSelector:".textInput",submitActionSelector:".submitAction"}),this.after("initialize",function(){this.$inputField=this.select("inputFieldSelector"),this.select("inputFieldSelector").on("focus",$j.proxy(this.uiExpandTextField,this)),this.select("cancelActionSelector").on("click",$j.proxy(this.uiResetForm,this))}),this.uiResetForm=function(){this.$inputField.val(""),this.uiHideLoading(),this.uiCollapseTextField()},this.uiExpandTextField=function(){this.$inputField.addClass(this.attr.expandedClass),this.uiShowHiddenContent()},this.uiCollapseTextField=function(){this.$inputField.removeClass(this.attr.expandedClass),this.$inputField.css({width:"",height:""}),this.uiHideContent()},this.uiShowHiddenContent=function(){this.select("hiddenContentSelector").addClass(this.attr.showClass)},this.uiHideContent=function(){this.select("hiddenContentSelector").removeClass(this.attr.showClass)},this.uiShowLoading=function(){this.select("submitActionSelector").addClass(this.attr.loadingClass)},this.uiHideLoading=function(){this.select("submitActionSelector").removeClass(this.attr.loadingClass)}}; var withFormSubmission=function(){this.after("initialize",function(){this.on("submit",this.submitForm)}),this.submitForm=function(t){var e=this.$node.serialize(),i=this.$node.attr("method"),o=this.$node.attr("action");this.$node.data("remote")&&($j.ajax({url:o,type:i,data:e,dataType:"json",context:this}).done(this.onFormSuccess).fail(this.onFormError),t.preventDefault(),t.stopPropagation())},this.onFormSuccess=function(t,e,i){this.broadcast("data-form-success",t)},this.onFormError=function(t,e,i){this.trigger("data-form-error",{status:e,error:i})}}; var withSlideUpMenu=function(){var t="transitionend webkitTransitionEnd oTransitionEnd otransitionend";flight.compose.mixin(this,[MixinEventUtils,MixinBackgoundMask]),this.defaultAttrs({slideUpMixinEventNamespace:"slideUpMenu",slideUpAnimPrepClass:"readyToShow",slideUpShowClass:"show",slideUpItemSelectedClass:"selected",slideUpCancelSelector:".cancel",slideUpItemSelector:".slideUpMenuItem:not(.cancel, .title, .message)",slideUpListSelector:".slideUpMenuList"}),this.after("initialize",function(){"undefined"==typeof this.attr.menuSelector&&this.broadcastError("'menuSelector' attribute is required",!0),this.$node.is(this.attr.menuSelector)?this.$slideUpMenu=this.$node:this.$slideUpMenu=this.select("menuSelector"),this.$slideUpMenu.find(this.attr.slideUpCancelSelector).on("click",$j.proxy(this.hideSlideUpMenu,this));var t=this.getListItems();t.length&&t.on("click",$j.proxy(function(t){this.attr.slideUpListItemAllowDefaultAction||t.preventDefault(),this.triggerSlideUpEvent("listItemSelected",t.target)},this)),this.initializeBackgroundMask(),this.updateMenuHeight(),this.on(document,"beforeHide.viewportOverlay",$j.proxy(function(t,e){e&&e.overlayId===this.overlayId&&this.defer(function(){this.isSlideUpMenuVisible()&&this.hideSlideUpMenu()})},this))}),this.hideSlideUpMenu=function(e){"undefined"!=typeof e&&e.preventDefault(),this.triggerSlideUpEvent("beforeHide"),this.$slideUpMenu.removeClass(this.attr.slideUpShowClass),this.hideBackgroundMask();var i=$j.proxy(function(e){this.$slideUpMenu.off(t,i),this.onHideSlideUpAnimationDone(e)},this);this.$slideUpMenu.one(t,i)},this.onHideSlideUpAnimationDone=function(t){this.$slideUpMenu.removeClass(this.attr.slideUpAnimPrepClass).select("slideUpListSelector").css("bottom",""),this.triggerSlideUpEvent("afterHide")},this.isSlideUpMenuVisible=function(){return this.$slideUpMenu.hasClass(this.attr.slideUpShowClass)},this.showSlideUpMenu=function(){/\biP(hone|ad|od)\b/i.test(navigator.userAgent)&&($j(document).trigger("hideBrowserAddressBar"),$j(document).trigger("hideSmartAppBanner")),this.triggerSlideUpEvent("beforeShow"),this.$slideUpMenu.addClass(this.attr.slideUpAnimPrepClass),this.showBackgroundMask(),this.$slideUpMenu.addClass(this.attr.slideUpShowClass),this.triggerSlideUpEvent("afterShow")},this.toggleSlideUpMenuVisibility=function(t){t&&t.preventDefault(),this.isSlideUpMenuVisible()?this.hideSlideUpMenu():this.showSlideUpMenu()},this.updateMenuHeight=function(){var t=this.$slideUpMenu.find(this.attr.slideUpListSelector);if(t.length){if(this.menuHeight=t.outerHeight(),!(this.menuHeight>0))return this.broadcastError("cannot display menu list because it has no dimensions");t.css("bottom",0-this.menuHeight+"px")}},this.getSafeEventNameForSlideUpEvent=function(t){return this.getSafeEventName([t,this.attr.slideUpMixinEventNamespace].join("."))},this.onSlideUpEvent=function(t,e){this.on(this.getSafeEventNameForSlideUpEvent(t),$j.proxy(e,this))},this.triggerSlideUpEvent=function(t,e){this.trigger(this.getSafeEventNameForSlideUpEvent(t),e)},this.getListItems=function(){return this.$slideUpMenu.find(this.attr.slideUpItemSelector)}}; var MixinEventUtils=function(){this.broadcast=function(t,e){"undefined"==typeof e||$j.isPlainObject(e)||(e={data:e}),this.trigger(document,this.getSafeEventName(t),e)},this.broadcastError=function(t,e){if(!t||/^\s*$/.test(t))var t="unknown error";var i="unknown component",o={};if($j.each(["identifier","channel","componentName"],$j.proxy(function(t,e){var n=this.attr[e];n&&(o[e]=i=n)},this)),t=i+" : "+t,e===!0)throw new Error(t);this.trigger(document,"componentError",$j.extend({message:t},o))},this.defer=function(t,e){setTimeout($j.proxy(t,this),$j.isNumeric(e)?e:0)},this.forceBrowserReflow=function(){this.$node.offset()},this.getSafeEventName=function(t){if("string"==typeof t){var e=".";this.attr.channel&&(t+=e+this.attr.channel),this.attr.identifier&&(t+=e+this.attr.identifier)}return t},this.listen=function(t,e){this.on(document,this.getSafeEventName(t),e)}}; var withFormAjax=function(){this.defaultAttrs({}),this.after("initialize",function(){this.on("ajax:before",this.onBefore),this.on("ajax:error",this.onError)}),this.onBefore=function(){this.uiDismissNotification(),this.uiShowLoading()},this.onError=function(t,e,i,o){var n;try{n=$j.parseJSON(e.responseText)}catch(s){n={type:"error",message:"There was an unknown error. Please retry."}}this.uiShowNotification(n),this.uiHideLoading()}}; var withNotification=function(){flight.compose.mixin(this,[MixinEventUtils]);var t="info",e=["info","error","success"];this.defaultAttrs({notificationType:t,showNotificationClass:"notificationShow",dismissActionSelector:".js-notificationDismissAction",messageSelector:".js-notificationMessage"}),this.after("initialize",function(){this.$notificationNode=this.$node.find(".js-notification");var t=this.$notificationNode.find(this.attr.dismissActionSelector);t.on("click",$j.proxy(function(t){this.onDismiss(t)},this))}),this.onDismiss=function(t){this.uiDismissNotification(t),this.recordNotificationDismissal()},this.uiDismissNotification=function(){this.$notificationNode.removeClass(this.attr.showNotificationClass)},this.uiShowNotification=function(e){if($j.isPlainObject(e)){this.uiResetNotification(),e.type&&this.isValidNotificationType(e.type)?this.attr.notificationType=e.type:this.attr.notificationType=t,this.$notificationNode.addClass(this.notificationTypeToClassName(this.attr.notificationType));var i=this.$notificationNode.find(this.attr.messageSelector).first(),o=e.message;if("error"===e.type&&$j.isArray(o)&&o.length>1){var n=$j("<ul>");$j.each(o,function(t,e){n.append($j("<li>").html(e))}),i.html(n)}else i.html(o);this.$notificationNode.addClass(this.attr.showNotificationClass)}},this.uiResetNotification=function(){this.$notificationNode.removeClass(this.notificationTypeToClassName(this.attr.notificationType))},this.recordNotificationDismissal=function(){var t=this.$notificationNode.find(this.attr.dismissActionSelector).data("user-preference");if(t){var e={};e[t]=0,$j.post("/user/update_preferences",{user:e})}},this.isValidNotificationType=function(t){return $j.inArray(t,e)>-1},this.notificationTypeToClassName=function(t){return"notification"+t.charAt(0).toUpperCase()+t.slice(1)}}; var withTooltips=function(){this.defaultAttrs({tooltipTriggerSelector:".js-withTooltips-tooltipTrigger",tooltipSelector:".js-withTooltips-tooltip"}),this.after("initialize",function(){this.attr.titleText=this.select("tooltipTriggerSelector").attr("title"),this.on("mouseenter",{tooltipTriggerSelector:this.intendToShow,tooltipSelector:this.intendToShow}),this.on("mouseleave",{tooltipTriggerSelector:this.intendToHide,tooltipSelector:this.intendToHide})}),this.hideTooltip=function(){grPopup.hide(this.select("tooltipSelector"),function(){this.hide()})},this.intendToShow=function(){HoverIntent.onEnterIntent(this,this.showTooltip)},this.intendToHide=function(){HoverIntent.onLeaveIntent(this,this.hideTooltip)},this.showTooltip=function(){var t=this.select("tooltipSelector"),e=this.select("tooltipTriggerSelector"),i=e.attr("title");void 0!==i&&""!==i&&(e.attr("title",""),""===t.html()&&t.text(this.attr.titleText)),grPopup.show(t,function(){this.show()})}}; var Accordion = flight.component(function () { var t = $j(document); var e = "accordionComponent"; this.defaultAttrs({ channel: e, componentName: e, catalystSelector: ".accordionHeading", contentSelector: ".accordionContent", openClass: "sectionOpen", outsideCatalystSelectors: "", outsideCatalystsCloseSection: !1 }), this.after('initialize', function () { var t = this.select('catalystSelector'); var e = ""; t.on('click', $j.proxy(this.toggleState, this)), "" !== this.attr.outsideCatalystSelectors && (e = this.attr.outsideCatalystsCloseSection === !1 ? "openState":'toggleState', $j(this.attr.outsideCatalystSelectors).on('click', $j.proxy(this[e], this))) }), this.toggleState = function (t) { this.isVisible() ? this.closedState(t):this.openState(t) }, this.isVisible = function () { return this.$node.hasClass(this.attr.openClass) }, this.openState = function (e) { this.$node.addClass(this.attr.openClass), "true" === $j(e.target).data('scroll-to-section') && t.scrollTop(this.$node.offset().top);}, this.closedState = function (t) { this.$node.removeClass(this.attr.openClass) } }); $gr.shared.amazonPurchasesBanner = flight.component(function () { var t = "amazonPurchasesBannerComponent"; this.defaultAttrs({ channel: t, componentName: t, dismissButtonSelector: ".dismissButton", rateBooksContainerSelector: ".rateBooks" }), this.after('initialize', function () { this.on('click', { dismissButtonSelector: this.hideBanner }), this.$node.parents(this.attr.rateBooksContainerSelector).length && this.hideDismissButton() }), this.hideBanner = function (t) { this.$node.fadeOut(), this.updateHideBannerPreference(), t.preventDefault(), this.teardown() }, this.hideDismissButton = function () { this.select('dismissButtonSelector').hide();}, this.updateHideBannerPreference = function () { $j.post('/user/update_preferences', { user: { show_amazon_import_prompt: 0 } });};}), $gr.shared.asyncGlideButton = flight.component(function () { this.RTS_PATTERN = /rts=((\w)+)(&|$)/, this.RTS = location.search.match(this.RTS_PATTERN) ? location.search.match(this.RTS_PATTERN)[1]:null, this.RTO_PATTERN = /rto=((\w)+)(&|$)/, this.RTO = location.search.match(this.RTO_PATTERN) ? location.search.match(this.RTO_PATTERN)[1]:null, this.after('initialize', function () { var t = this.$node.data('book-id'); this.getGlideData(t);}), this.getGlideData = function (t) { var e = "/buttons/glide/" + t; this.RTO && (e = e + "?rto=" + this.RTO), $j.ajax({
url: e, type: "GET", context: this, success: function (t) { this.readJson(t);}
}) }, this.readJson = function (t) { var e = t.glide_eligible; var i=t.glide_enabled; var o=t.ku_eligible; var n=t.ebook_price; var s=t.deal; var a=t.asin; var r=t.marketplace_suffix; var l = t.ref_tag_override; if (i) { var h = this.$node.find('.asyncKindleUnlimitedBuyText'); var c = "Or buy for "; if (this.$node.find('.glideButton').attr('data-asin', a), o) this.$node.find('.glideButton').attr('data-ku-eligible', !0), l ? (this.$node.find('.asyncGlideButton').attr('data-ref-tag', l), h.attr('data-ref-tag', l)):s ? (this.$node.find('.asyncGlideButton').attr('data-ref-tag', this.applyRTS('x_gr_w_glide_hasdeal_sout_ku')), h.attr('data-ref-tag', this.applyRTS('x_gr_w_glide_hasdeal_sout_ku_buy'))):(this.$node.find('.asyncGlideButton').attr('data-ref-tag', this.applyRTS('x_gr_w_glide_sout_ku')), h.attr('data-ref-tag', this.applyRTS('x_gr_w_glide_sout_ku_buy'))), this.$node.find('.asyncGlideButton').html('Kindle Unlimited <span class="kindleUnlimitedPrice">$0.00</span>'), s ? (c += '<span class="buyButtonBar__formerPrice">' + s.original_price + "</span> ", c += '<span class="buyButtonBar__dealPrice">' + n + "</span>"):c += n, h.html(c), h.css('display', "inline-block"); else { this.$node.find('.glideButton').attr('data-ku-eligible', !1), l ? this.$node.find('.asyncGlideButton').attr('data-ref-tag', l):s ? this.$node.find('.asyncGlideButton').attr('data-ref-tag', this.applyRTS('x_gr_w_glide_hasdeal_sout')):this.$node.find('.asyncGlideButton').attr('data-ref-tag', this.applyRTS('x_gr_w_glide_sout')); var d = "Kindle Store "; s ? (d += '<span class="buyButtonBar__formerPrice">' + s.original_price + "</span> ", d += '<span class="buyButtonBar__dealPrice">' + n + "</span>"):d += n, this.$node.find('.asyncGlideButton').html(d) }s ? this.updateBuyButtonRefTag(this.applyRTS('x_gr_w_glide_hasdeal_bb_sout'), r, l):this.updateBuyButtonRefTag(this.applyRTS('x_gr_w_glide_bb_sout'), r, l), this.$node.find('#buyDropButtonStores .buttonBar').html('Stores&nbsp;&#9662;'), this.$node.find('.secondBuyButton').removeClass('secondBuyButton'), this.$node.find('.asyncGlideButton').css('display', "inline-block");} else (e || this.RTS) && this.updateBuyButtonRefTag(this.applyRTS('x_gr_w_bb_sout'), r, l) }, this.updateBuyButtonRefTag = function (t, e, i) { var o = /ref=(\S)+?(?=&|$)/; var n=/tag=(\S)+?(?=&|$)/; var s = this.$node.find('#buyButton'); if (s.length==1) { var a = s.attr('href'); i ? (a = a.replace(o, "ref=" + i), a = a.replace(n, "tag=" + i + e)):(a = a.replace(o, "ref=" + t), a = a.replace(n, "tag=" + t + e)), s.attr('href', a) } }, this.applyRTS = function (t) { return this.RTS && !this.RTO ? t + this.RTS:t;};}, MixinEventUtils), $gr.shared.asyncPreviewButton = flight.component(function () { this.RTO_PATTERN = /rto=((\w)+)(&|$)/, this.RTO = location.search.match(this.RTO_PATTERN) ? location.search.match(this.RTO_PATTERN)[1]:null, this.after('initialize', function () { var t = this.$node.data('book-id'); this.getPreviewLink(t) }), this.getPreviewLink = function (t) { var e = "/buttons/preview/" + t; this.RTO && (e = e + "?rto=" + this.RTO), $j.ajax({ url: e, type: "GET", data: {}, context: this, success: function (t) { this.readJson(t) } });}, this.readJson = function (t) { var e = t.preview_link; e && (this.$node.find('.asyncPreviewButton').attr('href', e), this.$node.show());};}, MixinEventUtils), $gr.shared.audibleSampleButton = flight.component(function () { this.audibleIframeLocation = "https://www.audible.com", this.defaultAttrs({
audibleSampleContainer: "#audibleSample", audibleFlyoutFrame: "#audibleSampleFlyoutFrame", modalAMediumHeight: 175, modalALargeHeight: 245
}), this.after('initialize', function () { this.on('message onmessage', this.receiveMessage) }), this.receiveMessage = function (t) { if (t = t.originalEvent, t.origin === this.audibleIframeLocation) { for (var e, i = t.data, o = document.getElementsByTagName('iframe'), n = 0; n < o.length; n++) if (o[n].contentWindow === t.source) { e = o[n]; break;} if ('function'==typeof this[i.func]) { if (!isShowingBuyableFeatures()) return; $j.proxy(this[i.func], this, e).call() } } }, this.showAudibleButton = function (t) { $j(this.attr.audibleSampleContainer).css('display', "inline-block"), $j(this.attr.audibleFlyoutFrame).addClass('audibleSampleFlyoutFrameNoTreatment'); var e = t.getAttribute('data-report-audible-mapping'); var i=t.getAttribute("data-book-id"); var o = "/book/audible_enabled/" + i; "true" == e && $j.get(o);}, this.showAudibleSampleFlyout = function (t) { var e = t.getAttribute('data-flyout-id'); e ? ($j('#'+e).show(), $j.post('/track/track_click', { feature: "AEP_Desktop_ListenButtons" })):$j(this.attr.audibleFlyoutFrame).show() }, this.hideAudibleSampleFlyout = function (t) { var e = t.getAttribute('data-flyout-id'); e ? $j('#'+e).hide():$j(this.attr.audibleFlyoutFrame).hide() } }), $gr.shared.authorAnswersSort = flight.component(function () { this.defaultAttrs({ sortMenuSelector: ".answersSort__menu", loadingSelector: ".answersSort__spinner" }), this.after('initialize', function () { this.$answersContainer = $j('.authorAnsweredQuestions__questionsList'), this.$loadingIcon = $j('.authorAnsweredQuestions__loading'), this.$errorContainer = $j('.authorAnsweredQuestions__errorMessage'), this.on('change', { sortMenuSelector: this.getSortedAnswers }) }), this.updateAnswerList = function (t, e, i) { this.$loadingIcon.hide(), this.$answersContainer.html(t.content_html).fadeIn(), LoadMore.attachTo('.jsLoadMoreAnswered', { loadMoreContainerSelector: "#loadMoreContainerAnsweredQuestions", loadMoreActionSelector: ".loadMoreActionAnsweredQuestions", loadMoreSelector: ".jsLoadMoreAnswered" });}, this.showLoadingIcon = function () { this.$answersContainer.hide(), this.$loadingIcon.show();}, this.showError = function () { this.$loadingIcon.hide(), this.$errorContainer.show() }, this.getSortedAnswers = function () { this.showLoadingIcon(); var t = this.select('sortMenuSelector').data('url'); $j.ajax({
url: t, type: "get", data: { format: "json", sort: this.select('sortMenuSelector').val(), resort: !0 }, context: this, success: this.updateAnswerList, error: this.showError }) };}, MixinEventUtils), $gr.shared.authorDashboardQA = flight.component(function () { var t = "authorDashboardQA"; this.defaultAttrs({
channel: t, componentName: t, digestSettingsSelector: ".js-authorDigestSettings", errorMessageSelector: ".errorMessage", loadingQuestionsSelector: ".js-questions-loading", optedInActionSelector: ".js-optIntoAuthorQA", optedInFormMessageSelector: ".js-optedInMessage", optedInNotificationSelector: ".js-optedInNotification", optedInSettingsSelector: ".js-optedInSettings", optedOutActionSelector: ".js-optOutofAuthorQA", optedOutFormMessageSelector: ".js-optedOutMessage", pendingQuestionsCountSelector: ".js-pending-questions-count", skipQuestionSelector: ".js-skipQuestionAction", starterQuestionSelector: ".starterQuestion", unansweredQuestionsContainerSelector: ".unansweredQuestionsContainer", unansweredQuestionSelector: ".unansweredQuestion" }), this.after('initialize', function () { this.optInUrl = this.select('optedInActionSelector').data('url'), this.optOutUrl = this.select('optedOutActionSelector').data('url'), this.currentQuestionsCount = parseInt(this.select('pendingQuestionsCountSelector').data('count')), this.attr.optIntoQaActionSelectors = [this.attr.optedInActionSelector, this.attr.optedOutActionSelector].join(','), this.on('change', { optIntoQaActionSelectors: this.updateOptInState, digestSettingsSelector: this.updateDigestSettings }), this.on('ajax:success', { skipQuestionSelector: this.uiHideSkippedQuestion }), this.listen('answerFormSubmitted', this.uiDecrementQuestionsCount);}), this.uiShowOptedOutState = function () { this.select('optedInNotificationSelector').hide(), this.select('starterQuestionSelector').show(), this.select('optedInFormMessageSelector').hide(), this.select('optedOutFormMessageSelector').show(), this.select('optedInSettingsSelector').hide();}, this.uiShowOptedInState = function (t, e, i) { this.select('optedInNotificationSelector').show(), this.select('starterQuestionSelector').hide(), this.select('optedInFormMessageSelector').show(), this.select('optedOutFormMessageSelector').hide(), this.select('optedInSettingsSelector').show(), $j.isPlainObject(t) && t.content_html && (this.select('unansweredQuestionsContainerSelector').html(t.content_html), this.select('pendingQuestionsCountSelector').text(t.questions_count), this.currentQuestionsCount = t.questions_count), this.select('loadingQuestionsSelector').hide();}, this.uiShowError = function () { this.select('errorMessageSelector').show();}, this.uiHideSkippedQuestion = function (t, e, i) { $j(t.target).parents(this.attr.unansweredQuestionSelector).fadeOut(), this.uiDecrementQuestionsCount() }, this.uiDecrementQuestionsCount = function () { this.currentQuestionsCount -= 1, this.currentQuestionsCount = Math.max(0, this.currentQuestionsCount), this.select('pendingQuestionsCountSelector').text(this.currentQuestionsCount) }, this.updateOptInState = function () { var t = this.select('optedInActionSelector').is(':checked'); t && this.select('optedInActionSelector').data('neverOpted') && this.select('loadingQuestionsSelector').show(), $j.ajax({
url: t ? this.optInUrl:this.optOutUrl, type: "post", data: { format: "json" }, context: this, success: t ? this.uiShowOptedInState:this.uiShowOptedOutState, error: this.uiShowError
});}, this.updateDigestSettings = function () { var t = this.select('digestSettingsSelector').data('url'); var e = this.select('digestSettingsSelector').find('input:checked').val(); $j.ajax({
url: t, type: "post", data: { format: "json", digest_frequency: e }, context: this, error: this.uiShowError
});};}, MixinEventUtils), $gr.shared.authorFollow = flight.component(function () { var t = "AuthorFollow"; this.defaultAttrs({
channel: t, componentName: t, activeClass: "gr-button--togglable--enabled", inactiveClass: "gr-button--togglable--disabled", hoverClass: "btnHover", activeStateMethod: "delete", inactiveStateMethod: "post"
}), this.after('initialize', function () { this.$node.data('activeButtonText') && (this.activeStateText = this.$node.data('activeButtonText')), this.$node.data('inactiveButtonText') && (this.inactiveStateText = this.$node.data('inactiveButtonText')), this.$node.data('hoverButtonText') && (this.hoverStateText = this.$node.data('hoverButtonText'), this.on('mouseenter', this.activateHover), this.on('mouseleave', this.deactivateHover)), this.on('click', this.updateAuthorFollowing) }), this.updateAuthorFollowing = function () { this.methodType = this.$node.attr('method'), this.url = this.$node.data('requestUrl'), this.disabledState(); var t = $j.ajax({
url: this.url, type: this.methodType, data: { format: "json" }, context: this
}); t.done(this.onButtonSuccess), t.fail(this.onButtonError), t.always(this.onButtonComplete);}, this.onButtonSuccess = function (t, e) { $j.isPlainObject(t) && this.$node.data('requestUrl', t.url), $j('#flashMessages').trigger('clearFlashMessage'), this.toggleState(); var i = 0; i = this.$node.hasClass(this.attr.activeClass) ? 1:-1, this.trigger('authorFollowersCountChanged', { countDelta: i }) }, this.onButtonComplete = function (t) { this.enabledState() }, this.onButtonError = function (t) { if (t.status===403) this.defer(function () { this.authRedirect(t, $j.proxy(function () { var e = "Unknown XHR failure when trying to follow author."; t.status && (e += " , status code " + t.status), this.broadcastError(e);}, this)) }, 500); else { var e = "There was an error when trying to follow/unfollow an author."; $j('#flashMessages').trigger('addFlashMessage', [e, "error"]), this.$node.data('hoverButtonText') && $j('#notificationBanner').trigger('showNotification', { type: "error", message: e }) } }, this.toggleState = function () { this.$node.hasClass(this.attr.inactiveClass) ? this.activeState():this.inactiveState();}, this.activateHover = function () { this.hoverStateText && this.$node.hasClass(this.attr.activeClass) && this.hoverState();}, this.deactivateHover = function () { this.hoverStateText && this.$node.hasClass(this.attr.hoverClass) && this.activeState();}, this.activeState = function () { this.$node.addClass(this.attr.activeClass), this.$node.removeClass(this.attr.inactiveClass), this.$node.removeClass(this.attr.hoverClass), this.$node.attr('method', this.attr.activeStateMethod), this.$node.text(this.activeStateText) }, this.inactiveState = function () { this.$node.addClass(this.attr.inactiveClass), this.$node.removeClass(this.attr.activeClass), this.$node.removeClass(this.attr.hoverClass), this.$node.attr('method', this.attr.inactiveStateMethod), this.$node.text(this.inactiveStateText);}, this.hoverState = function () { this.$node.addClass(this.attr.hoverClass), this.$node.removeClass(this.attr.activeClass), this.$node.removeClass(this.attr.inactiveClass), this.$node.text(this.hoverStateText);}, this.disabledState = function () { this.$node.attr('disabled', "disabled");}, this.enabledState = function () { this.$node.removeAttr('disabled') };}, MixinEventUtils, MixinAuthRedirect), $gr.shared.authorFollowersCount = flight.component(function () { var t = "AuthorFollowersCount"; var e = "count"; this.defaultAttrs({ channel: t, componentName: t }), this.after('initialize', function () {
this.on(document, "authorFollowersCountChanged", this.updateAuthorFollowersCount);
}), this.updateAuthorFollowersCount = function (t, i) { var o; var n = this.$node.data(e); parseInt(n) === n && (n += i.countDelta) >= 0 && (o = n + " ", o += 1 === n ? "follower":'followers', this.$node.text(o).data(e, n));};}), $gr.shared.notificationBanner = flight.component(function () { this.after('initialize', function () { this.on('showNotification', function (t, e) { this.uiShowNotification(e);}), this.on('resetNotification', this.uiResetNotification), this.on('dismissNotification', this.uiDismissNotification) }) }, withNotification); var Autocomplete = flight.component(function () { var t = "autocomplete"; this.defaultAttrs({ channel: t, componentName: t, menuListParentSelector: "body", menuListSelector: ".resultsList", menuListItemSelector: ".resultsListItem", menuListItemLinkSelector: ".resultsListItemLink", menuBaseClass: t, menuShowClass: "show", $queryAjaxSettings: {}, queryParamName: "q", queryLengthMin: 3, queryLengthMax: 50, queryDebounceDuration: 500, queryCallback: !1, selectToFillIn: !1
}), this.after('initialize', function () { this.initializeMenu(), this.on('keyup', flight.utils.debounce($j.proxy(this.onKeystroke, this), this.attr.queryDebounceDuration)), this.on(this.getSafeEventName('reset'), this.onReset), this.on(this.getSafeEventName('clearMenu'), this.onClearMenu);}), this.initializeMenu = function () { if (!this.$menuRoot) { this.$menuRoot = $j('<div/>').addClass(this.attr.menuBaseClass).appendTo(this.attr.menuListParentSelector), this.attr.identifier && this.$menuRoot.data(`${this.attr.componentName}-id`, this.attr.identifier); var t = this; $j('html').click(() => {t.hideMenu()}), this.$menuRoot.on('click', this.attr.menuListItemSelector, $j.proxy(this.onSelectMenuItem, this));} }, this.clearMenu = function () { this.$menuRoot.empty() }, this.hideMenu = function () { this.isMenuVisible() && (this.$menuRoot.removeClass(this.attr.menuShowClass), this.trigger(this.getSafeEventName('hideMenu')));}, this.isMenuVisible = function () { return this.$menuRoot.hasClass(this.attr.menuShowClass);}, this.reset = function () { this.hideMenu(), this.clearMenu(), this.$node.val('');}, this.showMenu = function () { this.isMenuVisible() || (this.$menuRoot.addClass(this.attr.menuShowClass), this.trigger(this.getSafeEventName('showMenu')));}, this.updateMenu = function (t) { this.$menuRoot.html(t), this.trigger(this.getSafeEventName('updateMenu')) }, this.submitQuery = function (t) { if (this.attr.queryCallback) return results = this.attr.queryCallback(t), void this.onSubmitQuerySuccess(results); if ('string'!=typeof t && (t = this.$node.val()), t.length >= this.attr.queryLengthMin && t.length <= this.attr.queryLengthMax) { this.cachedAjaxSettings || (this.cachedAjaxSettings = $j.extend({}, this.attr.$queryAjaxSettings, { context: this, success: this.onSubmitQuerySuccess, error: function () { this.onSubmitQueryError(t);}, complete: function () { this.trigger(this.getSafeEventName('submitQueryEnd')), this.$activeAjaxRequest = null }, beforeSend: function () { this.trigger(this.getSafeEventName('submitQueryStart'));} })); var e = $j.extend({}, this.cachedAjaxSettings); $j.isPlainObject(e.data) ? e.data[this.attr.queryParamName] = t:e.url += (e.url.indexOf('?') >= 0 ? "&":'?') + this.attr.queryParamName + "=" + encodeURIComponent(t), this.$activeAjaxRequest && this.$activeAjaxRequest.abort(), this.$activeAjaxRequest = $j.ajax(e);} else this.clearMenu() }, this.onClearMenu = function (t) { this.clearMenu() }, this.onKeystroke = function (t) { 13 === t.charCode && t.preventDefault(), this.submitQuery();}, this.onReset = function (t) { this.reset() }, this.onSelectMenuItem = function (t) { t.preventDefault(); var e = $j(t.target).closest(this.attr.menuListItemSelector); var i = e.find(this.attr.menuListItemLinkSelector); if (i.length) if (this.attr.selectToFillIn === !0) { var o = i.text(); var n = e.data('bookId'); o && (this.$node.val(o), this.$node.data('bookId', n), this.hideMenu());} else { var s = i.attr('href'); s && (this.reset(), location.href = s);} }, this.onSubmitQuerySuccess = function (t) { var e = t; $j.isPlainObject(t) && t.html && (t = t.html), this.updateMenu(t), this.showMenu(), e.attachLoadMore && LoadMore.attachTo('.jsLoadMore') }, this.onSubmitQueryError = function (t) { var e = "bad response from query"; "string"===typeof t && (e += ' : "' + t + '"'), this.trigger(this.getSafeEventName('submitQueryError')), this.broadcastError(e), this.hideMenu();} }, MixinEventUtils); var BackToTopButton = flight.component(function () { var t = "backToTopButton"; this.defaultAttrs({ hideOnFocusSelectors: "input[type='text'], input[type='password'],                                  select, textarea", showClass: "show", buttonVisibilityThresholdBottom: 150, buttonVisibilityThresholdTop: 150, scrollDebounceDuration: 15, channel: t, componentName: t }), this.after('initialize', function () { this.isFieldFocused = !1, this.on('click', this.onScrollToTop), this.on(window, "scroll", flight.utils.debounce(this.onUpdateDisplay, this.attr.scrollDebounceDuration)); var t = [this.getSafeEventName('focus'), this.getSafeEventName('blur')].join(' '); $j(document.body).on(t, this.attr.hideOnFocusSelectors, $j.proxy(function (t) { $j(t.target).is(':visible') && (t.type.indexOf('focusin') >= 0 ? this.onFieldFocus():this.onFieldBlur());}, this));}), this.hide = function () { this.isVisible() && this.$node.removeClass(this.attr.showClass) }, this.isVisible = function () { return this.$node.hasClass(this.attr.showClass);}, this.scrollToTop = function () { $j(document).scrollTop(0) }, this.show = function () { this.isVisible() || this.$node.addClass(this.attr.showClass) }, this.updateDisplay = function () { var t = window.scrollY; var e = $j(document).height() - $j(window).height() - this.attr.buttonVisibilityThresholdBottom; this.isFieldFocused || t < this.attr.buttonVisibilityThresholdTop || t > e ? this.hide():this.show() }, this.onFieldBlur = function (t) { this.isFieldFocused = !1, this.updateDisplay();}, this.onFieldFocus = function (t) { this.isFieldFocused = !0, this.hide() }, this.onScrollToTop = function (t) { t.preventDefault(), this.scrollToTop() }, this.onUpdateDisplay = function (t) { this.updateDisplay() } }, MixinEventUtils); $gr.shared.bookCarousel = flight.component(function () { var t = ($j(document), "bookCarouselComponent"); this.maxLeft = 0, this.minLeft = 0, this.defaultAttrs({
channel: t, componentName: t, bookCover: ".cover", carouselRow: ".carouselRow", carouselNav: ".navButton", navBackgroundClass: "highlightedNavButton", nextButtonClass: "navButtonNext", prevButtonClass: "navButtonPrev", rightArrowPadding: 30, slideDelay: 500 }), this.after('initialize', function () { this.containerWidth = this.$node.width(), this.setBoundsOfCarousel(), this.setNavVisibility(), this.toggleBackground(!1), this.on('click', { carouselNav: this.moveCarousel }), this.on('mouseenter', this.highlightNavigation), this.on('mouseleave', this.removeHighlightInNavigation);}), this.setBoundsOfCarousel = function () { var t = 0; this.select('carouselRow').find(this.attr.bookCover).each(function () { t += $j(this).outerWidth() }), this.minLeft = Math.min(this.containerWidth - t - this.attr.rightArrowPadding, this.maxLeft) }, this.moveCarousel = function (t) { var e; var i = $j(t.target).parent(); i.hasClass(this.attr.nextButtonClass) ? e = "next":i.hasClass(this.attr.prevButtonClass) && (e = "prev"), this.singleSlide(e);}, this.highlightNavigation = function () { this.toggleBackground(!0), this.setNavVisibility();}, this.removeHighlightInNavigation = function () { this.toggleBackground(!1), this.setNavVisibility();}, this.singleSlide = function (t) { var e; this.select('carouselRow').stop(), "prev" === t ? e = this.select('carouselRow').position().left + 4 * this.containerWidth / 5:'next'===t && (e = this.select('carouselRow').position().left - 4 * this.containerWidth / 5), e = Math.min(e, this.maxLeft), e = Math.max(e, this.minLeft), this.setNavVisibility(e), this.select('carouselRow').animate({ left: e }, this.attr.slideDelay) }, this.setNavVisibility = function (t) { "undefined" == typeof t && this.select('carouselRow').length && (t = this.select('carouselRow').position().left), t > this.minLeft ? this.$node.find('.'+this.attr.nextButtonClass).show():this.$node.find('.'+this.attr.nextButtonClass).hide(), t < this.maxLeft ? this.$node.find('.'+this.attr.prevButtonClass).show():this.$node.find('.'+this.attr.prevButtonClass).hide();}, this.toggleBackground = function (t) { this.select('carouselNav').toggleClass(this.attr.navBackgroundClass, t) } }); var BookProgressUpdate = flight.component(function () { var t = "bookProgressUpdate"; this.defaultAttrs({ bookSelectorPrefix: "#book_list_item_", cancelSelector: ".actionFormControls .cancel", catalystButtonSelector: ".startUpdate", distractionSelector: ".reviewList", fieldSelector: ".field", fieldToggleSelector: ".swap", finishedSelector: ".finished", formSelector: ".actionForm", progressSelector: ".bookProgress", fieldToggleClass: "showPages", meterClass: "meter", showFormClass: "active", channel: t, componentName: t, enableCollapseDistractions: !0
}), this.after('initialize', function () { this.on('click', { cancelSelector: this.onHideForm, fieldToggleSelector: this.onFieldsToggle }); var t = this.$node.data('bookid'); this.$bookNode = $j(this.attr.bookSelectorPrefix + t).first(), this.on(this.$bookNode.find(this.attr.catalystButtonSelector), "click", this.showForm), this.after('hideForm', function () { this.select('formSelector').get(0).reset() }); var e = this.select('fieldSelector'); e.on('focus', function () { $j(this).val('');}), e.each(function () { var t = $j(this); var e=t.val(); var i = new RegExp(t.attr('pattern')); i && i.test(e) && !/^\s*$/.test(e) && t.data('default-value', e) }), this.on('submit', { formSelector: function (t) { this.validateFields() || (t.preventDefault(), t.stopPropagation(), this.showMessage('Your progress was not updated. Please enter a valid number.', !0)) } }), this.on('ajax:success', { formSelector: this.onFormSubmitSuccess }), this.on('ajax:error', { formSelector: this.onFormSubmitError }) }), this.hideForm = function () { this.$node.removeClass(this.attr.showFormClass), this.toggleDistractionlessMode(!1);}, this.showForm = function () { this.$node.addClass(this.attr.showFormClass), this.toggleDistractionlessMode(!0) }, this.showMessage = function (t, e) { if ('string'==typeof t && !/^\s*$/.test(t)) { var i = $j('#flashMessages'); e ? alert(t):i.trigger('addFlashMessage', [t]);} }, this.toggleFields = function () { this.select('formSelector').toggleClass(this.attr.fieldToggleClass), this.select('fieldSelector').each(function () { this.disabled = !this.disabled;}) }, this.toggleDistractionlessMode = function (t) { var e = $j(this.attr.distractionSelector); this.attr.enableCollapseDistractions === !0 ? e[t ? "hide":'show']():e.css('visibility', t ? "hidden":'') }, this.onFieldsToggle = function (t) { t.preventDefault(), this.toggleFields(); var e = $j(t.target); var i=e.text(); var o = e.data('swap-text'); e.text(o).data('swap-text', i);}, this.onHideForm = function (t) { t.preventDefault(), this.hideForm();}, this.onFormSubmitError = function (t, e) { this.defer(function () { this.authRedirect(e, $j.proxy(function () { var t = "Unknown XHR failure when trying to update book progress."; e.status && (t += " , status code " + e.status), this.broadcastError(t);}, this));}, 500) }, this.onFormSubmitSuccess = function (t, e) { if ($j.isPlainObject(e)) { if (e.html_meter && !/^\s*$/.test(e.html_meter)) { var i = this.$bookNode.find('.'+this.attr.meterClass); if (i.length)i.html(e.html_meter); else { var o = this.$bookNode.find(this.attr.progressSelector); $j(e.html_meter).wrap('<div/>').addClass(this.attr.meterClass).prependTo(o);} } this.isBookFinished() && this.$bookNode.hide(), e.message && this.showMessage(e.message), e.redirect && window.location.replace(e.redirect), this.hideForm();} else this.broadcastError('Malformed JSON response when trying to update book progress.') }, this.isBookFinished = function () { return this.select('finishedSelector').prop('checked');}, this.getVisibleField = function () { return this.select('fieldSelector').filter(':visible').first();}, this.validateFields = function () { if (this.isBookFinished()) return !0; var t = this.getVisibleField(); if (t.length) { var e = /^\d+$/; var i=t.data("default-value"); var o = t.val(); return e.test(i) ? e.test(o) && o !== i:e.test(o);} return !1 };}, MixinEventUtils, MixinAuthRedirect); var BrowseButton=flight.component(function(){this.after("initialize",function(){this.on(document,"topBrowseMenuOpened",this.openMenu),this.on(document,"topBrowseMenuClosed",this.closeMenu),this.on($gr.touch,function(t){t.preventDefault(),"block"===$j("#browseMenu").css("display")?this.trigger(document,"topBrowseMenuClosed"):this.trigger(document,"topBrowseMenuOpened")})}),this.openMenu=function(){this.$node.addClass("selectedLinkBarItem")},this.closeMenu=function(){this.$node.removeClass("selectedLinkBarItem")}}); var BrowseMenu=flight.component(function(){this.after("initialize",function(){this.on(document,"topBrowseMenuOpened",this.openMenu),this.on(document,"topBrowseMenuClosed",this.closeMenu)}),this.openMenu=function(){this.$node.css("display","block")},this.closeMenu=function(){this.$node.css("display","none")}}); var ReCaptcha=flight.component(function(){this.defaultAttrs({site_key:null,theme:"light"});var t=function(t){var e=document.createElement("script");e.type="text/javascript",e.src=t;var i=document.getElementsByTagName("script")[0];i.parentNode.insertBefore(e,i)};this.after("initialize",function(){if(this.on("reset",function(){this.reset()}),"undefined"==typeof grecaptcha){if("undefined"==typeof _recaptchaLoadedCallback){var e=this;window._recaptchaLoadedCallback=function(){e.render()}}return t("https://www.google.com/recaptcha/api.js?render=explicit&onload=_recaptchaLoadedCallback"),!0}this.render()}),this.render=function(){"undefined"!=typeof grecaptcha&&(this.widget_id=grecaptcha.render(this.node,{sitekey:this.attr.site_key,theme:this.attr.theme}))},this.reset=function(){"undefined"!=typeof grecaptcha&&grecaptcha.reset(this.widget_id);try{div=jQuery("tr.gc-reset").closest("table.pls-container").parent("div"),ins=div.next("ins"),div.remove(),ins.remove()}catch(t){}this.$node.empty()}}); var Carousel = flight.component(function () { var t; var e; var i; this.defaultAttrs({ itemSelector: ".carouselItem" }), this.after('initialize', function () { var t = Hammer(this.$node, { drag_block_horizontal: !0 }); t.on('dragstart', $j.proxy(this.initializeCarousel, this)), t.on('drag', $j.proxy(this.moveCarousel, this)), this.listen('saveRatingSuccess.ratingStars', this.addBooks);}), this.initializeCarousel = function () { var o = this.$node.parent(); var n=o.innerWidth(); var s=o.parent().innerWidth(); var a = this.select('itemSelector'); e = 0, $j.each(a, function (t, i) { e += $j(i).outerWidth(!0) + 4 }), s > n && (n -= s - n), n > e && this.off('drag'), t = parseInt(this.$node.css('left'), 10), i = -Math.abs(e - n) }, this.moveCarousel = function (e) { var o = t + e.gesture.deltaX; 0 > o ? i > o ? this.$node.css('left', i):this.$node.css('left', o):this.$node.css('left', "0") }, this.addBooks = function (t, e) { void 0 !== e.related_work_row && void 0 !== e.book_id && ($j(`.carouselItem[rel='${e.book_id}']`).after(e.related_work_row), $j(document).trigger('rateBooksCarouselUpdated')) };}, MixinEventUtils); $gr.shared.challenge = flight.component(function () { var t = "challengeComponent"; this.defaultAttrs({ channel: t, componentName: t }), this.after('initialize', function () { _.each($j('li.step'), function (t) { t.on('click', e) });}); var e = function () { this.className += " doneStep" };}), $gr.challengeBadgesComponent = flight.component(function () { var t; var e; var i="View More \u25be"; var o="View Less \u25b4"; var n = !1; this.defaultAttrs({ expandToggleClass: "#showMoreBadges", collapsibleBadgesClass: ".moreChallengeBadges" }), this.after('initialize', function () { t = $j(this.attr.expandToggleClass), e = $j(this.attr.collapsibleBadgesClass), t.click(this.toggleBadgeDisplay), t.text() === o && (n = !0);}), this.toggleBadgeDisplay = function () { var s = t.text().trim(); s === i ? (e.show(), t.text(o), n = !0):(e.hide(), t.text(i), n = !1);};}, MixinEventUtils), $gr.challengeBooksComponent = flight.component(function () { var t; var e; var i; var o="View More \u25be"; var n="View Less \u25b4"; var s=!1; var a = ""; this.defaultAttrs({ sortClass: ".sortBy", expandToggleClass: "#showMoreReviews", collapsibleBooksClass: ".moreChallengeCovers" }), this.after('initialize', function () { t = $j(this.attr.sortClass), e = $j(this.attr.expandToggleClass), i = $j(this.attr.collapsibleBooksClass), a = this.$node.data('mobile'), t.change(this.toggleSort), e.click(this.toggleReviewDisplay), e.text() === n && (s = !0), $j('.loadMoreButton').on('click', { env: this }, this.loadMoreCovers) }), this.toggleSort = function () { var e = t.val(); var i = "?sort_by=" + e; s && (i += "&expand=true"), window.location.href = window.location.href.replace(/[\?#].*|$/, i);}, this.toggleReviewDisplay = function () { var t = e.text().trim(); t === o ? (i.show(), e.text(n), s = !0):(i.hide(), e.text(o), s = !1);}, this.loadMoreCovers = function () { button_data = $j('.loadMoreButton').data(), $j.get('/user_challenges/covers/show/'+button_data.id + "/" + button_data.page, function (t) { if (t.last_page && $j('.loadMoreButton').hide(), a) { $j('.bookList').append(t.html); var e = $j('ul.bookList > ul.bookList'); e.children('li').appendTo($j('ul.bookList:first')), e.remove();} else $j('.yearChallengeCovers').append(t.html);}), $j('.loadMoreButton').data('page', button_data.page + 1) };}, MixinEventUtils), $gr.shared.checkBoxForm = flight.component(function () { this.defaultAttrs({
continueMessageSelector: ".js-continueMessage", checkedClass: "", checkBoxContainerSelector: "", saveActionSelector: ".js-saveAction", mobile: !1 }), this.after('initialize', function () { this.uiSetupForm(), this.on('click', { checkBoxContainerSelector: this.uiUpdateCheckbox }), this.on('click', { saveActionSelector: this.submitFormAndHide });}), this.submitFormAndHide = function (t) { t.preventDefault(), t.stopPropagation(), this.$node.submit(), this.trigger('hideModal') }, this.uiSetupForm = function () { var t = this.$node.find(':checkbox'); var e = this; t.each(function (t) { var i = $j(this); var o = i.closest(e.attr.checkBoxContainerSelector); i.prop('checked') ? o.addClass(e.attr.checkedClass):o.removeClass(e.attr.checkedClass) }), this.uiUpdateFormSaveButton();}, this.uiUpdateCheckbox = function (t) { var e = $j(t.target).closest(this.attr.checkBoxContainerSelector); var i = e.find(':checkbox'); return $j(t.target) !== i && (i.prop('checked') ? e.addClass(this.attr.checkedClass):e.removeClass(this.attr.checkedClass)), this.uiUpdateFormSaveButton(), !1 }, this.uiUpdateFormSaveButton = function () { if (this.$node.data('forceSelection')) { var t = this.$node.find('input:checked').length > 0; this.attr.mobile ? t ? (this.select('saveActionSelector').addClass('enabled'), this.select('saveActionSelector').removeAttr('disabled')):(this.select('saveActionSelector').removeClass('enabled'), this.select('saveActionSelector').attr('disabled', "disabled")):(this.select('continueMessageSelector').toggle(!t), this.select('saveActionSelector').toggle(t));} else this.select('continueMessageSelector').hide(), this.select('saveActionSelector').show() } }, MixinEventUtils, withFormSubmission); var CommentComposer = flight.component(function () { var t = "commentComposer"; this.defaultAttrs({
channel: t, componentName: t, commentCountContainerSelector: ".commentsCount", formSelector: "form", submitButtonSelector: ".jsCommentComposerSubmitButton", textAreaContainerSelector: ".expandingArea", textAreaMirrorSelector: ".expandingArea span", textAreaSelector: ".jsCommentComposerTextArea", commentCountHideClass: "hide"
}), this.after('initialize', function () { return this.$commentList = $j(this.$node.data('comment-list')).first(), this.$commentList.length < 1 ? this.broadcastError('No comment list selector found.'):(this.commentCountSelector = this.$node.data('comment-counter'), this.select('textAreaContainerSelector').addClass('active'), this.toggleSubmitButton(), this.select('textAreaMirrorSelector').text(this.select('textAreaSelector').val()), this.on('input', this.resizeTextArea), this.on('input', this.toggleSubmitButton), this.$form = this.select('formSelector').first(), this.$form.on('ajax:success', $j.proxy(this.onFormSubmitSuccess, this)), void this.$form.on('ajax:error', $j.proxy(this.onFormSubmitError, this)));}), this.resizeTextArea = function (t) { this.select('textAreaMirrorSelector').text(this.select('textAreaSelector').val());}, this.toggleSubmitButton = function (t) { this.select('textAreaSelector').val().length > 0 ? (this.select('submitButtonSelector').show(), this.select('textAreaContainerSelector').addClass('jsCommentComposerTextAreaFilled')):(this.select('submitButtonSelector').hide(), this.select('textAreaContainerSelector').removeClass('jsCommentComposerTextAreaFilled'));}, this.onFormSubmitError = function (t, e) { this.defer(function () { this.authRedirect(e, $j.proxy(function () { var t = "Unknown XHR failure when trying to add new comment"; e.status && (t += " , status code " + e.status), this.broadcastError(t);}, this));}, 500);}, this.onFormSubmitSuccess = function (t, e) { this.insertComment(e.html), this.updateCommentCount(e.count), this.clearCommentField() }, this.clearCommentField = function () { this.select('textAreaSelector').val('') }, this.insertComment = function (t) { this.$commentList.is(':visible') || this.$commentList.show().removeClass('empty'), this.$commentList.append(t);}, this.updateCommentCount = function (t) { $j(this.commentCountSelector).html(t); var e = $j(this.commentCountSelector).closest(this.attr.commentCountContainerSelector); t > 0 && e.hasClass(this.attr.commentCountHideClass) && e.removeClass(this.attr.commentCountHideClass);} }, MixinEventUtils, MixinAuthRedirect); $gr.shared.confirmModal = flight.component(function () { var t = "confirmModal"; this.defaultAttrs({
channel: t, componentName: t, cancelActionSelector: ".js-cancelAction", closeModalSelector: ".js-closeModalIcon", confirmActionSelector: ".js-confirmAction", confirmHeadingSeletor: ".js-confirmationHeading", confirmMessageSelector: ".js-confirmationMessage", confirmActionText: "Yes", confirmModalId: "confirmationModal", modalHeading: "Are you sure?", modalMessage: "", modalHeight: 150, modalWidth: 500 }), this.after('initialize', function () { this.$modal = this.uiBuildModal(), this.on('click, ajax:before', this.onClick), this.on(document, "ui.modal.hideComplete", this.teardownModal), this.listen('hideConfirmModal', this.uiHideModal);}), this.onConfirmSuccess = function () { this.uiHideModal(), "undefined" != typeof this.redirectPath ? window.location.href = this.redirectPath:window.location.reload(!0);}, this.onConfirmError = function () { this.uiHideModal();}, this.onClick = function () { return this.uiShowModal(), !1 }, this.uiSetupModal = function () { var t = this.$modal.find(this.attr.confirmActionSelector); var e=this.$modal.find(this.attr.cancelActionSelector); var i=this.$node.attr("href"); var o=this.$node.data(); var n=o.confirmationHeading; var s=o.confirmationMessage; var a=o.method; var r = o.remote; this.redirectPath = o.redirectPath, "undefined" == typeof s && (s = this.attr.modalMessage), "undefined"===typeof n && (n = this.attr.modalHeading), this.$modal.find(this.attr.confirmMessageSelector).html(s), this.$modal.find(this.attr.confirmHeadingSeletor).text(n), t.attr('data-method', a), t.attr('data-remote', r), t.attr('href', i), t.on('ajax:success', $j.proxy(function (t, e, i, o) { this.onConfirmSuccess();}, this)), t.on('ajax:error', $j.proxy(function (t, e, i, o) { this.onConfirmError();}, this)), e.click(this.uiHideModal);}, this.uiShowModal = function () { this.uiSetupModal(), this.uiAttachModal(), Lightbox.showBoxByID(this.attr.confirmModalId, this.attr.modalWidth, this.attr.modalHeight) }, this.uiHideModal = function () { Lightbox.hideBox();}, this.uiAttachModal = function () { var t = $j('#'+this.attr.confirmModalId); t.length ? t.replaceWith(this.$modal):this.$modal.appendTo('body');}, this.uiBuildModal = function () { var t; var e; var i; return e = { confirmModalId: this.attr.confirmModalId, confirmActionText: this.attr.confirmActionText }, t = '<div id="{{confirmModalId}}" style="display: none">', t += '<h2 class="confirmationHeading js-confirmationHeading"></h2>', t += '<div class="confirmationMessage js-confirmationMessage"></div>', t += '<div class="confirmationActions js-confirmationActions">', t += '<a class="button confirmAction js-confirmAction">{{confirmActionText}}</a>', t += '<div class="cancelWrapper"><a class="cancelAction js-cancelAction" href="#">Cancel</a></div>', t += "</div>", t += "</div>", i = _.template(t), $j(i(e)) }, this.teardownModal = function () { $j('#'+this.attr.confirmModalId).remove();} }, MixinEventUtils), $gr.shared.confirmNilReadAt = flight.component(MixinEventUtils, function () { this.works_queue = [], this.html_queue = [], this.current_work_id = null, this.$work_display = null, this.$module_display = null, this.$messages_display = null, this.disable_nil_read_at_buttons = !1, this.reload_cache_val = 2, this.broadcast_type = "readingChallengeReadInYear"; var t = "confirmNilReadAt"; this.defaultAttrs({ channel: t, componentName: t }), this.after('initialize', function () { this.$work_display = $j('#'+this.$node.data('workdisplayid')), this.$module_display = $j('#'+this.$node.data('moduledisplayid')), this.$messages_display = $j('#'+this.$node.data('messagecontainerid')), this.updateNilReadAtWorks(), $j('#'+this.$node.data('readinyearbuttonid')).on('click', { env: this }, this.readInYearAction), $j('#'+this.$node.data('confirmnilreadatbuttonid')).on('click', { env: this }, this.confirmNilReadAtAction), $j('#'+this.$node.data('closereadinyearmoduleid')).on('click', { env: this }, function (t) { t.data.env.$module_display.css('display', "none"), t.preventDefault();});}), this.readInYearAction = function (t) { var e = t.data.env; e.disable_nil_read_at_buttons || (e.$module_display.css('visibility', "hidden"), e.disable_nil_read_at_buttons = !0, $j.ajax({ url: "/challenges/mark_as_read_this_year", data: { work_id: e.current_work_id }, method: "post" }).success((t) => {$j.data(document,"newProgressText",{text:t.new_progress_text}),e.broadcast(e.broadcast_type,""),e.afterDecision()}).fail((t) => {e.onFailure()})) }, this.confirmNilReadAtAction = function (t) { var e = t.data.env; e.disable_nil_read_at_buttons || (e.$module_display.css('visibility', "hidden"), e.disable_nil_read_at_buttons = !0, $j.ajax({ url: "/challenges/confirm_nil_read_at", data: { work_id: e.current_work_id }, method: "post" }).success(() => {e.afterDecision()}).fail(() => {e.onFailure()}));}, this.updateNilReadAtWorks = function () { var t = this; $j.ajax({ url: "/challenges/get_new_nil_read_at_books", dataType: "json" }).success((e) => {if(e.work_ids.length>0)for(var i=0;i<e.work_ids.length;i++)t.works_queue.include(e.work_ids[i])||(t.works_queue.push(e.work_ids[i]),t.html_queue.push(e.htmls[i]));0==t.works_queue.length?t.$module_display.css("display","none"):t.refreshDisplay()}).fail(() => {t.onFailure()}) }, this.refreshDisplay = function () { this.current_work_id = this.works_queue.shift(), this.$work_display.html(this.html_queue.shift()), this.$module_display.css('display', "inline-block"), this.$module_display.css('visibility', "visible"), this.disable_nil_read_at_buttons = !1 }, this.afterDecision = function () { this.works_queue.length <= this.reload_cache_val ? this.updateNilReadAtWorks():this.refreshDisplay();}, this.onFailure = function () { this.$module_display.css('visibility', "visible"), this.$module_display.css('display', "none"), this.$messages_display.html("We're sorry, there was a problem processing your request. Please reload the page and try again."), this.$messages_display.css('display', "inline-block");};}), $gr.shared.dataStoreUserPreferences = flight.component(function () { this.after('initialize', function () { this.on('ui-user-preference-changed', this.updateUserPreferences);}), this.updateUserPreferences = function (t, e) { $j.post('/user/update_preferences', { user: e.prefData });};}), $gr.shared.dataTooltip = flight.component(function () { var t = "dataTooltip"; var e=50; var i = 100; this.defaultAttrs({
channel: t, componentName: t, tooltipTriggerSelector: ".js-tooltipTrigger", broadcastEventName: "tooltipHtmlRetrieved"
}), this.after('initialize', function () { this.getTooltipContent(this.$node), this.listen('success.loadMore', this.handleLoadMore);}), this.handleLoadMore = function (t, e) { "undefined" != typeof e.content_html && this.getTooltipContent($j(e.content_html));}, this.getTooltipContent = function (t) { var o = {}; var n=this; var s = n.$node.data('batchSize'); s > 0 && i > s || (s = e), t.find(this.attr.tooltipTriggerSelector).each((t,e) => {var i={},a=$j(e).data("resource-type"),r=$j(e).data("resource-id"),l=a+"."+r;i.type=a,i.id=r,i.extra=$j(e).data("extra"),o[l]=i,Object.keys(o).length>=s&&(n.getBatchOfTooltipContent(o),o={})}), n.getBatchOfTooltipContent(o);}, this.getBatchOfTooltipContent = function (t) { var e = this.$node.data('ref-tag'); var i = this.$node.data('book-origin'); $j.ajax({ url: "/tooltips", type: "GET", data: {
resources: t, ref_tag: e, use_wtr_tooltip: this.$node.data('use-wtr-tooltip'), book_origin: i }, context: this, success: function (t) { this.broadcast(this.attr.broadcastEventName, t);}
});} }, MixinEventUtils), $gr.shared.dfpAd = flight.component(function () { var t; var e; this.impressionCode = {
success: "0", dfpError: "1", monolithError: "2", empty: "3"
}, this.defaultAttrs({
isNativeAd: !1, creativeSelector: null, attachClickTracking: function (t) {}, nativeAdAttrs: {
iframeWrapperSelector: null, iframeWrapperParams: [], adRootSelector: null, nativeAdUrl: null, success: function (t) {}
}, dfpEvent: null, pmetImpressionTrackUrl: null, pmetClickTrackUrl: null, adDeviceType: null
}), this.after('initialize', function () { if (this.attr.dfpEvent.isEmpty) return void this.trackImpression(this.impressionCode.empty); var i = this.$node.find('iframe[id^="google_ads_iframe_"]'); var o = i.contents().find(this.attr.creativeSelector); if (this.attr.isNativeAd) { var n = o.data('id'); var s=o.data("url"); var a=this.attr.dfpEvent.lineItemId; var r = { id: n, line_item_id: a, ad_unit: this.adUnit(), ad_device_type: this.attr.adDeviceType
}; if (n && s) { var l = i.closest(this.attr.nativeAdAttrs.iframeWrapperSelector); $j.each(this.attr.nativeAdAttrs.iframeWrapperParams, function (t, e) { r[e] = l.attr(e) }); var h = i.closest(this.attr.nativeAdAttrs.adRootSelector); this.populateNativeAd(r, h, s) } else this.trackImpression(this.impressionCode.dfpError) } else this.trackImpression(this.impressionCode.success), t = o, e = $j.proxy(function (t) { this._ajaxTrackingCall(this.attr.pmetClickTrackUrl, { click_type: t });}, this), this.attr.attachClickTracking(this) }), this.populateNativeAd = function (i, o, n) { $j.ajax({ url: this.attr.nativeAdAttrs.nativeAdUrl, type: "GET", data: i, context: this, success: function (i) { i.ok ? (t = o.replaceWithNew(i.content_html), this.trackImpression(this.impressionCode.success), this.attr.nativeAdAttrs.success(this), e = $j.proxy(function (t) { var e = $j.extend(this.dfpTrackingInfo(), { click_type: t }); $j('<iframe/>', { src: n + this.attr.pmetClickTrackUrl + encodeURIComponent('?'+$j.param(e)), style: "display:none", height: 0, width: 0, load: function () { $(this).show();}
}).appendTo('body');}, this), this.attr.attachClickTracking(this)):this.trackImpression(this.impressionCode.monolithError) }, error: function () { this.trackImpression(this.impressionCode.monolithError) } }) }, this.adUnit = function () { return this.attr.dfpEvent.slot.getName().split('/', 3)[2];}, this.dfpTrackingInfo = function () { return { ad_unit: this.adUnit(), line_item_id: this.attr.dfpEvent.lineItemId, ad_device_type: this.attr.adDeviceType };}, this.adRoot = function () { return t;}, this.trackImpression = function (t) { this._ajaxTrackingCall(this.attr.pmetImpressionTrackUrl, { impression_output: t });}, this.trackClick = function (t) { e(t);}, this.trackNotInterestedClick = function () { this._ajaxTrackingCall(this.attr.pmetClickTrackUrl, { not_interested: !0 }) }, this.trackNonDFPClick = function (t) { this._ajaxTrackingCall(this.attr.pmetClickTrackUrl, { click_type: t }) }, this._ajaxTrackingCall = function (t, e) { $j.ajax({ url: t, type: "GET", data: $j.extend(this.dfpTrackingInfo(), e) }) } }), $j.fn.replaceWithNew = function (t) { var e = $j(t); return this.replaceWith(e), e;}, $gr.shared.dfpAd.imageAdAttrs = function () { return { isNativeAd: !1, creativeSelector: "div#google_image_div", attachClickTracking: function (t) { t.adRoot().on('click', "a", function () { t.trackClick('click');});} };}, $gr.shared.dfpAd.newsfeedAdAttrs = function () { return {
isNativeAd: !0, creativeSelector: "div.dfp_native_update", attachClickTracking: function (t) { var e = function (e, i, o) { t.adRoot().on(e, i, function () { t.trackClick(o);}) }; e('click', ".star", "rating"), e('click', ".wtrShelfMenu button", "wtr_button"), e('submit', ".wtrButtonContainer form", "wtr_button"), e('change', ".wtrNonExclusiveShelves,input.wtrNonExclusiveShelf", "wtr_button"), e('click', ".newsfeedAdDescription a.trackClick", "body_click"), e('click', ".updateImage a, .updateImage js-tooltipTrigger tooltipTrigger a", "book_image"), e('click', ".newsfeedAdTitle a", "book_title"), e('click', ".authorName a", "author_name"), e('click', ".newsfeedAdCustomCopy a", "social"), e('click', ".newsfeedAdDescription a.showAction", "more"), t.adRoot().on('submit', "div.js-newsfeedNotInterested > form", function () { t.trackNotInterestedClick() }), t.adRoot().on('click', "div.whyAmISeeingThis a", function () { t.trackNonDFPClick('why') }), t.adRoot().on('click', "a.menuCaret", function () { t.trackNonDFPClick('caret') });}, nativeAdAttrs: { iframeWrapperSelector: "td", iframeWrapperParams: ['offset', "index"], adRootSelector: "tr", nativeAdUrl: "/dfp/ajax_native_ad/", success: function (t) { var e = t.adRoot(); var i = e.attr('id'); if (!i || 0 == i.length) { var o = "native_ad_" + Math.floor(1e6 * Math.random()); e.attr('id', o) } var n = "#" + e.attr('id') + " "; $gr.shared.attachNewsfeedComponents(n) }
} };}, $gr.shared.dfpAd.mobileNewsfeedAdAttrs = function () {
return { isNativeAd: !0,
creativeSelector: "div.dfp_native_update", attachClickTracking: function (t) {
var e = function (e, i, o) { t.adRoot().on(e, i, function () { t.trackClick(o) }) }; e('click', "a.feedItemImage", "book_image"), e('click', ".feedItemBookTitle a", "book_title"), e('click', ".feedItemBookAuthor a", "author_name"), e('click', ".feedItemContent .reviewText a.trackClick, .feedItemContent .reviewText .newsfeedAdMobileCustomText a.trackClick", "body_click"), e('click', ".feedItemContent .newsfeedAdMobileCustomText a", "social"), e('click', ".feedItemContent .reviewText a.showAction, .feedItemContent .reviewText .newsfeedAdMobileCustomText a.showAction", "more"), e('click', "a.newsfeedAdImageLink", "image"), e('click', ".updateButtons a", "cta_click"), e('click', ".newsfeedAdMobileFooterActions a", "sponsored"), t.on(document, "shelving.wtrButtonMenu", function (e, i) { $j.contains(t.adRoot()[0], document.getElementById(i.buttonId)) && t.trackClick('wtr_button');
}), t.adRoot().on('submit', "div.js-newsfeedNotInterested > form", function () { t.trackNotInterestedClick();}), t.adRoot().on('submit', "div.whyAmISeeingThis > form", function () { t.trackNonDFPClick('why') }), t.adRoot().on('click', "a.menuCaret", function () { t.trackNonDFPClick('caret');})
}, nativeAdAttrs: { iframeWrapperSelector: "article", iframeWrapperParams: [], adRootSelector: "article", nativeAdUrl: "/dfp/ajax_native_ad/", success: function (t) { ExpandableContent.attachTo('.jsShow, .jsHide'), $gr.shared.newsfeedMenu.attachTo('.js-newsfeedStoryDropdown');} }
} }, $gr.shared.dismissModuleUI = flight.component(function () { this.defaultAttrs({ newPrefValue: "1" }), this.after('initialize', function () { this.on('click', { dismissButtonSelector: this.hideModule }) }), this.hideModule = function (t) { this.$node.fadeOut(), this.attr.userPrefName && this.triggerUserPrefChanged(), t.preventDefault() }, this.triggerUserPrefChanged = function () { var t = {}; t[this.attr.userPrefName] = this.attr.newPrefValue, this.trigger('ui-user-preference-changed', { prefData: t }) };}), $gr.shared.doneRatingDialog = flight.component(function () { var t = "doneRatingDialog"; this.defaultAttrs({ channel: t, componentName: t }), this.after('initialize', function () { var t = this.$node; var e = $j('.js-saveAction'); this.listen('rateBooksDoneRating', function () { this.$node.show() }), $j('.js-closeDoneRatingDialog').on('click', function () { t.hide(), e.text('Done') });});}, MixinEventUtils), $gr.shared.editInPlace = flight.component(function () { var t = "editInPlace"; this.defaultAttrs({
channel: t, componentName: t, cancelActionSelector: ".cancelAction", controllerComponentSelector: ".js-editInPlace", editableElementSelector: ".editInPlaceContent", inputFieldSelector: ".editInPlaceInputField", formContainerSelector: ".editInPlaceContainer", submitActionSelector: ".submitAction", inputFieldClass: "editInPlaceInputField", loadingClass: "loading", originalText: null, submitButton: !0
}), this.after('initialize', function () { this.formHtml = this.uiBuildForm(), this.$editInPlaceController = this.$node.closest(this.attr.controllerComponentSelector), this.$node.append(this.formHtml), this.on('click', { cancelActionSelector: this.onCancel, submitActionSelector: this.onSubmit }), this.on('saveSuccess', this.onSaveSuccess), this.on('saveError', this.uiHideLoading) }), this.onCancel = function () { this.uiRemoveForm(), this.teardown(), this.trigger(this.$editInPlaceController, "ui.editInPlace.cancel") }, this.onSaveSuccess = function () { this.uiHideLoading(), this.uiRemoveForm(), this.teardown() }, this.onSubmit = function () { var t = this.select('inputFieldSelector').val(); this.uiShowLoading(), this.trigger(this.$editInPlaceController, "ui.editInPlace.submit", { text: t });}, this.uiBuildForm = function () { var t; var e; var i; var o = this.$node.data('field-name'); return t = { inputFieldClass: this.attr.inputFieldClass, inputFieldName: o, originalText: this.attr.originalText }, e = '<div class="editInPlaceContainer">', e += '<textarea class="{{inputFieldClass}}" name="{{inputFieldName}}">', e += "{{originalText}}", e += "</textarea>", e += '<div class="formAction">', e += 1 == this.attr.submitButton ? '<button class="submitAction primaryAction button" type="submit">Submit</button>':'<a class="submitAction primaryAction">Submit</a>', e += '<span class="cancelAction secondaryAction">Cancel</span>', e += "</div>", e += '<div class="editInPlaceError"></div>', e += "</div>", (i = _.template(e))(t) }, this.uiHideLoading = function () { this.select('submitActionSelector').removeClass(this.attr.loadingClass);}, this.uiRemoveForm = function () { this.select('formContainerSelector').hide().remove();}, this.uiShowLoading = function () { this.select('submitActionSelector').addClass(this.attr.loadingClass) };}), $gr.shared.editInPlaceController = flight.component(function () { var t = "editInPlaceController"; this.defaultAttrs({
channel: t, componentName: t, containerSelector: ".js-editInPlaceForm", editableElementSelector: ".textBody", enableLinkSelector: ".js-editInPlaceEnableAction", errorSelector: ".editInPlaceError", highlightElementSelector: ".js-editInPlaceHighlight", highlightClass: "highlight", enableLinkClass: "js-editInPlaceEnableAction", elementsToHideSelectors: "" }), this.after('initialize', function () { this.attr.rawText = this.$node.data('raw-text-for-editing'), this.attr.editableBecauseAdmin = !!this.$node.data('editable-because-admin'), this.isNotAdminEditor() && this.enableHighlight(), this.on('mouseup', { highlightElementSelector: this.onMouseUp }), this.on('click', { enableLinkSelector: this.onActivate }), this.on('ui.editInPlace.cancel', this.uiReset), this.on('ui.editInPlace.submit', this.onSubmit);}), this.onMouseUp = function (t) { this.isNotAdminEditor() && this.onActivate(t);}, this.disableHighlight = function () { this.off('mouseover mouseout'), this.uiRemoveHighlight() }, this.enableHighlight = function () { this.on('mouseover', { highlightElementSelector: this.uiAddHighlight }), this.on('mouseout', { highlightElementSelector: this.uiRemoveHighlight });}, this.onActivate = function (t) { var e = $j(t.target); t.preventDefault(), (!this.isTextSelected() || e.hasClass(this.attr.enableLinkClass)) && (this.disableHighlight(), this.uiHideElements(), $gr.shared.editInPlace.attachTo(this.select('containerSelector'), { originalText: this.$node.data('raw-text-for-editing'), submitButton: this.$node.data('submit-button') })) }, this.onSaveError = function (t, e, i) { var o = $j.parseJSON(t.responseText); $j.isPlainObject(o) && this.select('errorSelector').html(o.errors.join('<br>')), this.trigger(this.attr.containerSelector, "saveError");}, this.onSaveSuccess = function (t, e, i) { $j.isPlainObject(t) && this.uiUpdateText(t.answer_text_filtered), this.uiReset(), this.trigger(this.attr.containerSelector, "saveSuccess");}, this.onSubmit = function (t, e) { this.uiClearErrors(), this.attr.rawText = e.text, $j.isPlainObject(e) && this.save(e) }, this.save = function (t) { var e = this.$node.data('update-url'); var i=this.$node.data("field-name"); var o = {}; o[i] = t.text, $j.ajax({
url: e, type: "put", data: o, dataType: "json", context: this, timeout: 3e3
}).done(this.onSaveSuccess).fail(this.onSaveError);}, this.uiAddHighlight = function () { this.select('highlightElementSelector').addClass(this.attr.highlightClass) }, this.uiClearErrors = function () { this.select('errorSelector').text('') }, this.uiHideElements = function () { this.select('editableElementSelector').hide(), this.select('elementsToHideSelectors').hide();}, this.uiRemoveHighlight = function () { this.select('highlightElementSelector').removeClass(this.attr.highlightClass);}, this.uiReset = function () { this.uiClearErrors(), this.uiShowElements(), this.isNotAdminEditor() && this.enableHighlight() }, this.uiShowElements = function () { this.select('editableElementSelector').show(), this.select('elementsToHideSelectors').show();}, this.uiUpdateText = function (t) { this.select('editableElementSelector').html(t);}, this.isTextSelected = function () { var t = ""; return window.getSelection ? t = window.getSelection().toString():document.selection && "Control" != document.selection.type && (t = document.selection.createRange().text), "" !== t }, this.isNotAdminEditor = function () { return !this.attr.editableBecauseAdmin } }), $gr.communityQA.editQAMessageForm = flight.component(function () { var t = "editQAMessageForm"; this.defaultAttrs({ channel: t }), this.after('initialize', function () { this.on('ajax:success', this.uiUpdateFormField);}), this.uiUpdateFormField = function (t, e) { e.message && (this.uiResetForm(), this.select('inputFieldSelector').attr('placeholder', e.message));} }, MixinEventUtils, withExpandableTextField, withNotification, withFormAjax), $gr.shared.editorialStoryForm = flight.component(function () { this.defaultAttrs({ storyTypeMenuSelector: ".js-storyTypeMenu", featuredInputSelector: ".js-featuredBookInput", resourceInputSelector: ".js-resourceIdInput" }), this.after('initialize', function () { this.uiUpdateFormFields(), this.on('change', { storyTypeMenuSelector: this.uiUpdateFormFields });}), this.uiUpdateFormFields = function () { var t = this.select('storyTypeMenuSelector').val(); if ('best_books_of_the_month'===t ? this.select('featuredInputSelector').show():this.select('featuredInputSelector').hide(), "" === t) this.select('resourceInputSelector').hide(); else { this.select('resourceInputSelector').show(); var e = this.getResourceType(t) + " ID: "; this.select('resourceInputSelector').find('label').text(e) } }, this.getResourceType = function (t) { switch (t) { case "author_interview": return "Interview"; case "good_minds_suggest": return "Interview"; case "goodreads_blog": return "Blog"; case "best_books_of_the_month": return "FeaturedList"; default: return "" } } }); var ExpandableContent = flight.component(function () { this.defaultAttrs({ showSelector: ".jsShow", hideSelector: ".jsHide", containerSelector: ".expandableContainer" }), this.after('initialize', function () { this.on($gr.touch, { showSelector: this.uiShowHideToggle, hideSelector: this.uiShowHideToggle }) }), this.uiShowHideToggle = function (t) { var e = $j(t.target); var i=e.parent(); var o = e.closest(this.attr.containerSelector); t.preventDefault(), i.hide(), i.hasClass('fullContent') ? o.find('.truncatedContent').show():o.find('.fullContent').show() } }); $gr.shared.experimentConversion = flight.component(function () { var t = "experimentConversion"; this.defaultAttrs({ channel: t, componentName: t, clickSelector: ".js-trackConversionClick", experimentName: null, trackOverallClicks: !1
}), this.after('initialize', function () { var t = this.attr.experimentName; var i = this; $j(this.attr.clickSelector).on('click', function () { e($j(event.target).data('stepName'), t), i.attr.trackOverallClicks && e(i.$node.data('stepName'), t) });}); var e = function (t, e) { null != e && void 0 !== t && $j.post('/track_conversion_action', { event: t, options: { experiments: e } });} }), $gr.communityQA.facebookTimelinePoster = flight.component(function () { var t = "facebookTimelinePosterComponent"; this.defaultAttrs({ channel: t, componentName: t }), this.after('initialize', function () { this.on('click', this.shareToFacebook) }), this.shareToFacebook = function () { var t = this.$node.data('fb-options'); $grfb.feedDialog(t);};}), $gr.shared.favoriteAuthor = flight.component(function () { var t = "favoriteAuthorComponent"; var e="post"; var i="delete"; var o="Add to my favorite authors"; var n=" is now on your <b>Favorite Authors</b> list"; var s="Remove from my favorite authors"; var a=" has been removed from your <b>Favorite Authors</b> list"; var r="#notificationBanner"; var l="Sorry, there was an unknown error adding author to favorites. Please reload the page and try again."; var h=".js-addToFavoriteAuthors"; var c="h1.authorName > span"; var d="author-id"; var u="favorite-author-id"; var f="favorite_author"; var p="/favorite_authors"; var m="/favorite_authors/"; var g="success"; var v = "error"; this.defaultAttrs({ channel: t, componentName: t }), this.after('initialize', function () { this.authorName = $j(c).text(), this.addRemoveLink = this.$node.find(h), this.notification = $j(r), this.authorId = this.addRemoveLink.data(d), this.favoriteAuthorId = this.addRemoveLink.data(u), null === this.favoriteAuthorId || "" === this.favoriteAuthorId ? this.addRemoveLink.text(o):this.addRemoveLink.text(s), this.addRemoveLink.click($j.proxy(this.updateFavoriteAuthor, this));}), this.updateFavoriteAuthor = function () { this.disableState(), this.updateUrl(); var t = { format: "json" }; this.methodType === e && (t[f] = { author_id: this.authorId }), $j.ajax({
url: this.url, type: this.methodType, data: t, context: this, success: this.onSuccess, error: this.onError, complete: this.onComplete });}, this.onSuccess = function (t, e, o) { var s = t[f]; if (e === g) { var r = this.authorName; r += this.methodType === i ? a:n, this.toggleState(s), this.notification.trigger('showNotification', { type: "info", message: r });} else e === v && this.showErrorMessage(l) }, this.onError = function (t, e, i) { this.defer(function () { this.authRedirect(t, $j.proxy(function () { var t = "Unknown XHR failure when trying to add author to favorites."; e && (t += " (status code " + e + ")"), this.broadcastError(t), this.showErrorMessage(l) }, this)) }, 500) }, this.onComplete = function (t, e) { this.enableState() }, this.toggleState = function (t) { this.methodType === i ? (this.addRemoveLink.data(u, ""), this.addRemoveLink.text(o)):this.methodType === e ? (this.addRemoveLink.data(u, t), this.addRemoveLink.text(s)):this.showErrorMessage('Unsupported HTTP method: '+this.methodType) }, this.showErrorMessage = function (t) { this.notification.trigger('showNotification', { type: "error", message: t }), this.broadcastError(t);}, this.disableState = function () { this.addRemoveLink.attr('disabled', "disabled") }, this.enableState = function () { this.addRemoveLink.removeAttr('disabled') }, this.updateUrl = function () { this.favoriteAuthorId = this.addRemoveLink.data(u), null === this.favoriteAuthorId || "" === this.favoriteAuthorId ? (this.methodType = e, this.url = p):(this.methodType = i, this.url = m, this.url += this.favoriteAuthorId);} }, MixinEventUtils, MixinAuthRedirect, dropdownMenu), $gr.shared.favoriteGenre = flight.component(function () { var t = "FavoriteGenre"; this.defaultAttrs({
componentName: t, activeClass: "gr-button--togglable--enabled", inactiveClass: "gr-button--togglable--disabled", activeStateMethod: "post", inactiveStateMethod: "delete", dataAttrUrlActivate: "async-url-activate-url", dataAttrUrlInactivate: "async-url-inactivate-url" }), this.after('initialize', function () { var t = this.$node.data('active-button-text'); var e=this.$node.data("active-button-hover-text"); var i = this.$node.data('inactive-button-text'); t && (this.attr.activeStateText = t), e && (this.attr.activeButtonHoverText = e), i && (this.attr.inactiveStateText = i), this.on('ajax:success', this.onFavoriteSuccess), this.on('ajax:error', this.onFavoriteError), this.on('mouseover', this.handleHover), this.on('mouseleave', this.handleMouseLeave) }), this.onFavoriteSuccess = function (t, e, i) { $j.isPlainObject(e) && ('success'===e.status ? this.toggleState():'error'===e.status && this.showErrorMessage(e.message));}, this.onFavoriteError = function (t, e, i) { var o = "Sorry, there was an unknown error favoriting this genre. Please reload the page and try again."; this.showErrorMessage(o);}, this.toggleState = function () { this.$node.hasClass(this.attr.activeClass) ? this.inactiveState():this.activeState();}, this.activeState = function () { this.$node.addClass(this.attr.activeClass), this.$node.removeClass(this.attr.inactiveClass), this.$node.data('method', this.attr.inactiveStateMethod), this.$node.text(this.attr.activeStateText), this.updateURL();}, this.inactiveState = function () { this.$node.addClass(this.attr.inactiveClass), this.$node.removeClass(this.attr.activeClass), this.$node.data('method', this.attr.activeStateMethod), this.$node.text(this.attr.inactiveStateText), this.updateURL() }, this.showErrorMessage = function (t) { $j('#flashMessages').trigger('addFlashMessage', [t, "error"]), this.broadcastError(t) }, this.handleHover = function (t) { this.attr.activeButtonHoverText && this.$node.hasClass(this.attr.activeClass) && this.$node.text(this.attr.activeButtonHoverText);}, this.handleMouseLeave = function (t) { this.$node.hasClass(this.attr.activeClass) ? this.activeState():this.inactiveState() }, this.updateURL = function () { var t = ""; var e = this.$node.data('method'); e === this.attr.activeStateMethod ? t = this.$node.data(this.attr.dataAttrUrlActivate):e === this.attr.inactiveStateMethod && (t = this.$node.data(this.attr.dataAttrUrlInactivate)), this.$node.attr('href', t);};}, MixinEventUtils); var FlashMessages = flight.component(function () { var t = "flashMessages"; var e="gr-flashMessage"; var i="gr-flashMessage--success"; var o="gr-flashMessage--info"; var n = "gr-flashMessage--error"; this.defaultAttrs({ channel: t, componentName: t, hideClass: "hide", errorClass: "error", noticeClass: "notice", successClass: "success", containerIdSelector: "#flashMessages", flashMessageSelector: ".gr-flashMessage"
}), this.after('initialize', function () { this.select('flashMessageSelector'); this.on('addFlashMessage', this.add), this.on('addFlashError', function (t, e) { this.add(t, e, this.attr.errorClass);}), this.on('clearFlashMessage', this.onClearFlashMessage);}), this.setFlashMessageClasses = function (t, s) { switch (t.addClass(e), s) { case this.attr.successClass: t.addClass(i); break; case this.attr.errorClass: t.addClass(n); break; default: t.addClass(o);} }, this.addCloseButton = function (t) { var e = $j('<button>', { "class": "gr-iconButton gr-flashMessage__dismissButton", click: $j.proxy(this.remove, this, t) }); var i = $j('<img>', { alt: "Dismiss", src: window.GrImageRegistry.closeIcon }); i.appendTo(e), e.appendTo(t);}, this.add = function (t, e, i) { this.onClearFlashMessage(); var o = $j('<div/>'); this.setFlashMessageClasses(o, i), this.addCloseButton(o), o.append(e).appendTo(this.attr.containerIdSelector) }, this.onClearFlashMessage = function (t) { var e = this.getFirstMessage(); this.remove(e) }, this.getFirstMessage = function () { return this.select('flashMessageSelector').first();}, this.remove = function (t) { t.remove() };}); var Follow = flight.component(function () { var t = "follow"; this.defaultAttrs({
channel: t, componentName: t, activeClass: "btnActivated", inactiveClass: "btnSecondary", loadingClass: "btnLoading", activeStateMethod: "post", inactiveStateMethod: "delete", dataAttrUrlAdd: "async-url-add", dataAttrUrlDelete: "async-url-delete", defautlActiveStateText: "Unfollow", defautlInactiveStateText: "Follow"
}), this.after('initialize', function () { var t = this.$node.data('active-button-text'); var e = this.$node.data('inactive-button-text'); this.userId = this.$node.data('user-id'), this.validateUserId(), t && (this.attr.activeStateText = t), e && (this.attr.inactiveStateText = e), this.on('ajax:success', this.onFollowSuccess), this.on('ajax:error', this.onFollowError);}), this.onFollowSuccess = function (t, e, i) { $j.isPlainObject(e) && ('success'===e.status ? (this.toggleState(), this.broadcast('success', e)):'error'===e.status && this.showErrorMessage(e.message)) }, this.onFollowError = function (t, e, i) { this.defer(function () { this.authRedirect(e, $j.proxy(function () { var t = "Unknown XHR failure when trying to follow the user."; var i = "Sorry, there was an unknown error following this user. Please reload the page and try again."; e.status && (t += " (status code " + e.status + ")"), this.broadcastError(t), this.showErrorMessage(i) }, this)) }, 500) }, this.toggleState = function () { this.$node.hasClass(this.attr.activeClass) ? this.inactiveState():this.activeState() }, this.activeState = function () { this.$node.addClass(this.attr.activeClass), this.$node.removeClass(this.attr.inactiveClass), this.$node.data('method', this.attr.inactiveStateMethod), this.$node.text(this.attr.activeStateText), this.updateURL() }, this.inactiveState = function () { this.$node.addClass(this.attr.inactiveClass), this.$node.removeClass(this.attr.activeClass), this.$node.data('method', this.attr.activeStateMethod), this.$node.text(this.attr.inactiveStateText), this.updateURL() }, this.updateURL = function () { var t = ""; var e = this.$node.data('method'); if (e === this.attr.activeStateMethod)t = this.$node.data(this.attr.dataAttrUrlAdd); else if (e === this.attr.inactiveStateMethod)t = this.$node.data(this.attr.dataAttrUrlDelete); else { var i = "Sorry, there was an invalid method type for the Follow button."; this.showErrorMessage(i);}t ? this.$node.attr('href', t):this.$node.on('click', function () { return !1;}) }, this.showErrorMessage = function (t) { $j('#flashMessages').trigger('addFlashMessage', [t, "error"]), this.broadcastError(t) }, this.validateUserId = function () { var t = /[0-9]+/; t.test(this.userId) || (this.showErrorMessage('Invalid user ID for follow component.'), this.teardown()) } }, MixinEventUtils, MixinAuthRedirect); $gr.shared.followSuggestedAuthor = flight.component(function () { this.defaultAttrs({
defaultActiveStateText: "Unfollow", defaultInactiveStateText: "Follow", followButtonSelector: ".followAuthorButton", unfollowButtonSelector: ".unfollowAuthorButton" }), this.after('initialize', function () { this.on('click', { followButtonSelector: this.onFollow }), this.on('click', { unfollowButtonSelector: this.onUnfollow }), this.listen('success.follow', function (t, e) { this.appendNewUpdates(e);}) }), this.onFollow = function (t, e) { t.preventDefault(); var i = this.$node.data('follow-path'); var o = this.$node.data('ref-tag'); $j.ajax({
url: i, type: "post", data: { format: "json", follow_author_from_newsfeed: !0, ref: o }, context: this, success: this.onFollowSuccess, error: this.onError });}, this.onUnfollow = function (t, e) { t.preventDefault(); var i = this.$node.data('unfollow-path'); $j.ajax({ url: i, type: "delete", data: { format: "json", follow_author_from_newsfeed: !0 }, context: this, success: this.onUnfollowSuccess, error: this.onError
}) }, this.onFollowSuccess = function (t, e, i) { var o = t; "success" == o.status ? (this.appendNewUpdates(o), this.$node.find('.followedMessage').show(), this.$node.find('.notFollowedMessage').hide(), this.$node.find(this.attr.followButtonSelector).hide(), this.$node.find('.authorFollowingSuggestionMessaging').hide()):this.onError(i, e) }, this.onUnfollowSuccess = function (t, e, i) { var o = t; "success" == o.status ? (this.$node.find('.followedMessage').hide(), this.$node.find('.notFollowedMessage').show(), this.$node.find(this.attr.followButtonSelector).show(), this.$node.find('.authorFollowingSuggestionMessaging').show(), this.removeAssociatedUpdates()):this.onError(i, e);}, this.appendNewUpdates = function (t) { $j('.authorFollowingSuggestion.update, .authorFollowingSuggestion.feedItem').after(t.last_activity_html);}, this.removeAssociatedUpdates = function () { var t = "." + this.$node.data('associated-resource'); $j(t).remove() }, this.onError = function (t, e, i) { var o; try { o = $j.parseJSON(t.responseText);} catch (n) { o = { type: "error", message: "There was an unknown error. Please retry.  (errorThrown: " + i + ")" } } this.$node.find('.notFollowedMessage').html(o.message), this.$node.find('.notFollowedMessage').show(), this.$node.find('.followedMessage').hide(), this.$node.find('.authorFollowingSuggestionMessaging').hide() };}, MixinEventUtils), $gr.shared.formBoxChecker = flight.component(function () { this.defaultAttrs({ checkBoxesSelector: ".js-formBoxChecker-checkBox", massCheckAll: !1, massCheckControlSelector: "#js-formBoxChecker-checkAllControl" }), this.after('initialize', function () { this.on('allBoxesCleared', this.changeToCheckAll), this.on('allBoxesChecked', this.changeToUncheckAll), this.on('click', { massCheckControlSelector: this.handleMassCheckClick }), this.on('change', { checkBoxesSelector: this.handleCheckboxChange }) }), this.changeToCheckAll = function () { this.attr.massCheckAll = !0, this.select('massCheckControlSelector').text('Check all');}, this.changeToUncheckAll = function () { this.attr.massCheckAll = !1, this.select('massCheckControlSelector').text('Uncheck all');}, this.checkAll = function () { this.select('checkBoxesSelector').prop('checked', !0), this.trigger('allBoxesChecked');}, this.handleCheckboxChange = function () { $checkBoxes = this.select('checkBoxesSelector'), 0 === $checkBoxes.filter(':checked').length ? this.trigger('allBoxesCleared'):$checkBoxes.not(":checked").length===0&&this.trigger('allBoxesChecked');}, this.handleMassCheckClick = function (t) { t.preventDefault(), this.attr.massCheckAll === !0 ? this.checkAll():this.uncheckAll();}, this.uncheckAll = function () { this.select('checkBoxesSelector').prop('checked', !1), this.trigger('allBoxesCleared') };}); var FriendRequest = flight.component(function () { var t = "FriendRequest"; this.defaultAttrs({ channel: t, componentName: t, showClass: "show", approveButtonSelector: ".btnApprove", ignoreButtonSelector: ".btnIgnore", buttonContainerSelector: ".friendRequestActions", statusMessageSelector: ".friendRequestStatusMessage", confirmResponseType: "confirm", ignoreResponseType: "ignore", confirmRequestMessage: "You are now friends", ignoreRequestMessage: "You\u2019ve ignored this invitation" }), this.after('initialize', function () { var t = this.$node.data('confirm-request-message'); var e = this.$node.data('ignore-request-message'); t && !/^\s*$/.test(t) && (this.attr.confirmRequestMessage = t), e && !/^\s*$/.test(e) && (this.attr.ignoreRequestMessage = e), this.on('ajax:success', this.onFriendRequestSuccess), this.on('ajax:error', this.onFriendRequestError) }), this.onApprove = function () { this.hide('buttonContainerSelector'), this.updateMessage(this.attr.confirmRequestMessage), this.show('statusMessageSelector') }, this.onIgnore = function () { this.hide('buttonContainerSelector'), this.updateMessage(this.attr.ignoreRequestMessage), this.show('statusMessageSelector');}, this.onFriendRequestSuccess = function (t, e) { var i = [this.attr.confirmResponseType, this.attr.ignoreResponseType]; $j.isPlainObject(e) ? e.response_type && $j.inArray(e.response_type, i) >= 0 ? e.response_type === this.attr.confirmResponseType ? this.onApprove():e.response_type === this.attr.ignoreResponseType && this.onIgnore():this.broadcastError('Undefined or invalid response type in friend request response.', !0):this.broadcastError('Malformed JSON response when trying to confirm/ignore friend request.', !0);}, this.onFriendRequestError = function (t, e) { this.defer(function () { 404 === e.status && (e.status = 403, e.responseText = '{"redirect":"/user/sign_in"}'), this.authRedirect(e, $j.proxy(function () { var t = "Unknown XHR failure while trying to confirm/ignore a friend request"; e.status && (t += ", status code: " + e.status), this.broadcastError(t, !0) }, this)) }, 500) }, this.hide = function (t) { var e = this.select(t); e.removeClass(this.attr.showClass);}, this.show = function (t) { var e = this.select(t); e.addClass(this.attr.showClass);}, this.updateMessage = function (t) { if ('string'==typeof t && !/^\s*$/.test(t)) { var e = this.select('statusMessageSelector'); e.text(t) } };}, MixinEventUtils, MixinAuthRedirect); $gr.shared.genrePicker = flight.component(function () { var t = "genrePicker"; var e=null; var i=null; var o=null; var n=null; var s=null; var a=null; var r = "/user/edit_fav_genres"; this.defaultAttrs({ channel: t, componentName: t }), this.after('initialize', function () { switch (e = this.$node, n = $j('.js-saveAction'), s = n.text(), i = $j('.rateBooksContainer'), this.$node.data('page')) { case "recommendations": a = "/recommendations/genre"; break; case "rate_books": a = "/user/rate_books"; break; default: a = "/user/rate_books";}$j('.js-genrePickerButton').on('click', l), $j('.js-newFavoriteGenreListItem').on('click', c), $j('.js-genrePickerListItem').on('click', h), this.on('newFavoritePicked', u), this.on('genrePicked', d) }); var l = function () { var t = this.getAttribute('data-genre'); o = e.find(`[data-genre='${t}']`), o.addClass('genrePickerListItemSelected'), e.show(), i.hide(), n.length && (n.text('Done'), n.on('click', f)), $j(document).trigger('genrePickerOpened') }; var h=function(){$j(this).trigger("genrePicked",{genre:this.getAttribute("data-genre")}),f()}; var c=function(){$j(this).trigger("newFavoritePicked",{genre:this.getAttribute("data-genre")})}; var d=function(t,e){$j(".js-genrePickerButton").attr("data-genre",e.genre),$j(".js-genreName").attr("data-genre",e.genre),$j.ajax({url:a,type:"get",data:{format:"json",genre:e.genre,reg_path:$j("#reg_path").val()},context:this,success:p})}; var u=function(t,e){var i={};i[e.genre]="true",$j.ajax({url:r,type:"post",data:{format:"json",favorites:i}})}; var f=function(t){return o.removeClass("genrePickerListItemSelected"),i.show(),e.hide(),n.length&&(n.text(s),n.off("click",f)),$j(document).trigger("genrePickerClosed"),"undefined"!=typeof t&&t.preventDefault(),!1}; var p = function (t) { $j('.carouselList').html(t.html), $j(document).trigger('rateBooksCarouselUpdated') };}, MixinEventUtils), $gr.shared.giveawayBookFindWidget = flight.component(function () { var t = 13; var e=400; var i=403; var o=404; var n = 3e3; this.after('initialize', function () { this.$asinFindInput = this.$node.find('#asinFindInput'), this.$asinFindButton = this.$node.find('#asinFindButton'), this.$asinFindClearLink = this.$node.find('#asinFindClearLink'), this.$bookImage = this.$node.find('#bookImage'), this.$bookTitle = this.$node.find('#bookTitle'), this.$bookAuthor = this.$node.find('#bookAuthor'), this.$bookAsin = this.$node.find('#bookAsin'), this.$bookAsinHiddenInput = this.$node.find('#giveaway_asin'), this.$changeBookButton = this.$node.find('#changeBookButton'), this.$bookFindContainer = this.$node.find('#giveawayBookFind'), this.$bookFindResultContainer = this.$node.find('#giveawayBookFindResult'), this.on(this.$asinFindClearLink, "click", this.clearFindInput), this.on(this.$changeBookButton, "click", this.resetBookSelection), this.on(this.$asinFindButton, "click", this.findBookByAsin), this.on(this.$asinFindInput, "keyup", this.checkEnterPressedAndFindBook);}), this.findBookByAsin = function () { var t = this.$asinFindInput.val().trim(); t && (this.$asinFindButton.prop('disabled', !0), $j.ajax({
url: "/giveaway/find_book_by_asin", data: { asin: t }, context: this, timeout: n
}).done(this.updateBookView).fail(this.displayErrorMessage).always(this.enableFindButton));}, this.checkEnterPressedAndFindBook = function (e) { e.keyCode === t && this.findBookByAsin();}, this.clearFindInput = function () { this.$asinFindInput.val('') }, this.updateBookView = function (t) { this.updateResultContainer(t), this.$bookFindResultContainer.show(), this.$bookFindContainer.hide() }, this.updateResultContainer = function (t) { this.$bookImage.attr({ src: t.image_url, title: t.title }), this.$bookTitle.attr('href', t.book_url), this.$bookTitle.text(t.title), this.$bookAuthor.attr('href', t.author_url), this.$bookAuthor.text(t.author), this.$bookAsin.text('ASIN: '+t.asin), this.$bookAsinHiddenInput.val(t.asin);}, this.resetBookSelection = function () { this.$bookFindResultContainer.hide(), this.$bookAsinHiddenInput.val(''), this.$bookFindContainer.show(), this.$asinFindInput.focus() }, this.displayErrorMessage = function (t) { t.status === o || t.status === e ? (json = JSON.parse(t.responseText), alert(json.error_message)):t.status === i ? this.defer(function () { this.authRedirect(t, $j.proxy(function () { var t = "Unknown XHR failure when trying to find book by asin."; status && (t += " (status code " + status + ")"), this.broadcastError(t);}, this)) }, 500):alert('An error occurred when finding the book with this ASIN.');}, this.enableFindButton = function () { this.$asinFindButton.removeProp('disabled');};}, MixinEventUtils, MixinAuthRedirect), $gr.shared.inAppNotification = flight.component(function () { this.defaultAttrs({ notificationType: "", clickableSelector: "a, img" }), this.after('initialize', function () { if (this.$node.data('notification-type')) { this.attr.notificationType = $gr.shared.inAppNotification.parseNotificationType(this.$node), this.on('click', { clickableSelector: this.recordClick }); var t = this.$node.parentsUntil('notificationContainer').first(); var e = $j(t).find('.inAppNotification').first(); if (this.$node[0] == e[0]) { var i = $j(this.$node.parent()).children().map(function () { return $gr.shared.inAppNotification.parseNotificationType($j(this));}).get(); this.recordImpressions(i) } } }), this.recordClick = function () { this.recordEvent({ notification_types: [this.attr.notificationType], type: "click" }) }, this.recordImpressions = function (t) { this.recordEvent({ notification_types: t, type: "impression" });}, this.recordEvent = function (t) { $j.post('/notifications/track', { data: JSON.stringify(t) }) };}), $gr.shared.inAppNotification.parseNotificationType = function (t) { return t.data('notification-type');}, $gr.shared.lazilyLoadedGlidePopup = flight.component(function () { this.after('initialize', function () { $j(document).on('click', ".glideButton", this.openGlidePopup) }), this.openGlidePopup = function (t) { var e = $j(t.target); var i=e.data("amazonUrl"); var o=e.data("refTag"); var n=e.data("asin"); var s = e.data('url'); i || (i = "https://www.amazon.com/gp/product/" + n + "/ref=" + o + "?caller=Goodreads&callerLink=" + s + "&tag=" + o + "-20"), window.open(i, "1402010176686").focus(), t.preventDefault();} }), $gr.shared.libraryExport = flight.component(function () { var t = 2e3; var e = 900; this.after('initialize', function () { var t = this.$node.data('userid').toString(); this.submissionUrl = "/review_porter/export/" + t, this.$fileList = $j('#'+this.$node.data('filelistid')), this.$messageBox = $j('#'+this.$node.data('statusid')), this.fileUrl = "/review_porter/export/" + t + "/goodreads_export.csv", this.checkExport(), this.on('click', this.generateExport) }), this.generateExport = function () { this.generatingExportState(); var t = $j.ajax({ url: this.submissionUrl, method: "post", data: { format: "json" }, context: this
}); t.done(this.onSubmissionSuccess), t.fail(this.onSubmissionFailure) }, this.checkExport = function (t) { var e = $j.ajax({ url: this.fileUrl, method: "head", context: this }); e.done(this.onExportSuccess), t && e.fail(t);}, this.pollForExport = function (t, e) { 0 >= t ? this.errorState('We were unable to export your library. Please try again.'):this.checkExport(function () { var i = this; setTimeout(() => {i.pollForExport(t-1,e)}, e);}) }, this.onSubmissionSuccess = function () { this.pollForExport(e, t);}, this.onSubmissionFailure = function () { this.errorState('We were unable to export your library. Please try again.') }, this.onExportSuccess = function (t, e, i) { var o = i.getResponseHeader('x-export-creation-time'); this.exportAvailableState(o);}, this.generatingExportState = function () { this.$fileList.empty(), this.$node.text('Exporting library...'), this.$node.attr('disabled', !0), this.$messageBox.text('We are currently generating your export. This may take some time if you have a large library.') }, this.exportAvailableState = function (t) { this.$fileList.empty(), this.$messageBox.text(''); var e = $j(document.createElement('a')); e.attr('href', this.fileUrl); var i = "Your export"; null != t && (i += " from " + t), e.text(i), this.$fileList.append($j(document.createElement('br'))), this.$fileList.append(e), this.$node.text('Export Library'), this.$node.removeAttr('disabled');}, this.errorState = function (t) { this.$node.text('Export Library'), this.$node.removeAttr('disabled'), this.$messageBox.text(t.toString()) };}); var LikeResource = flight.component(function () {
var t = "likeResource"; this.defaultAttrs({ channel: t, componentName: t, catalystSelector: ".jsLike", likesCountContainerSelector: ".ratingsCount", likesCountSelector: ".likesCount", likesIconSelector: ".likesIndicator", likesHideClass: "hide", likesIconActiveClass: "userHasRating"
}), this.after('initialize', function () { this.on('ajax:success', { catalystSelector: this.onLikeSuccess }), this.on('ajax:error', { catalystSelector: this.onLikeError });}), this.swapLikeUnlikeLink = function (t, e) {
var i = t.parent(); var o = t.attr('href').match(/.*&ref=(.*_u?lk)/); if (t.replaceWith(e.html), o) {
var n = i.find('a');
  e.is_liked_by_current_user ? n.attr('href', n.attr('href') + "&ref=" + e.ref.replace(/_lk/, "_ulk")):n.attr('href', n.attr('href') + "&ref=" + e.ref.replace(/_ulk/, "_lk"));}
}, this.onLikeError = function (t, e) { this.defer(function () { this.authRedirect(e, $j.proxy(function () { var t = "Unknown XHR failure when trying to like resource."; e.status && (t += " , status code " + e.status), this.broadcastError(t) }, this)) }, 500);}, this.onLikeSuccess = function (t, e) { if ($j.isPlainObject(e)) { var i = $j(t.target); var o = i.data('like-count-id'); if (o) { var n = $j('#'+o); if ($j.isNumeric(e.count)) { var s = e.count > 0 ? e.count:0; n.parent() && n.parent().hasClass('showLikeWord') && (e.count > 1 ? s += " likes":e.count > 0 ? s += " like":e.count==0&&(s += " likes")), n.find(this.attr.likesCountSelector).text(s).toggleClass(this.attr.likesIconActiveClass, e.is_liked_by_current_user); var a = n.closest(this.attr.likesCountContainerSelector); e.count > 0 && a.hasClass(this.attr.likesHideClass) ? a.removeClass(this.attr.likesHideClass):e.count <= 0 && !a.hasClass(this.attr.likesHideClass) && a.addClass(this.attr.likesHideClass);}n.find(this.attr.likesIconSelector).toggleClass(this.attr.likesIconActiveClass, e.is_liked_by_current_user);} this.swapLikeUnlikeLink(i, e);} else this.broadcastError('Malformed JSON response when trying to like resource.') }
}, MixinEventUtils, MixinAuthRedirect); $gr.shared.linkAmazonPopUpButton = flight.component(function () { this.defaultAttrs({ linkAmazonAccount: ".linkAmazonAccount" }), this.after('initialize', function () { this.amazonSignInUrl = this.$node.data('amazon-sign-in-url'), this.on('click', { linkAmazonAccount: this.linkAmazonAccount });}), this.linkAmazonAccount = function () { window.open(this.amazonSignInUrl) } }, MixinEventUtils); var LoadMore = flight.component(function () { var t = "loadMore"; var e=/page=([0-9]+)/; var i = /next_page_token=([^&]+)/; this.defaultAttrs({
channel: t, componentName: t, loadMoreContainerSelector: "#loadMoreContainer", loadMoreActionSelector: ".loadMoreAction", loadMoreSelector: ".jsLoadMore", loadingClass: "loading"
}), this.after('initialize', function () { this.nextPage = this.getPageNumberFromURL(), this.on('click', this.uiShowLoading), this.on('ajax:success', this.onLoadMoreSuccess), this.on('ajax:error', this.onLoadMoreError);}), this.onLoadMoreSuccess = function (t, e) { var i = this.$node.data('content-container'); e.content_html && !/^\s*$/.test(e.content_html) ? $j(i).append(e.content_html):this.teardownLoadMore(), e.page && e.total_pages && e.total_pages <= e.page && this.teardownLoadMore(), "next_page_token" in e && (e.next_page_token ? this.nextPageToken = e.next_page_token:this.teardownLoadMore()), this.nextPage += 1, e.load_more_html ? ($j(this.attr.loadMoreContainerSelector).replaceWith(e.load_more_html), LoadMore.attachTo(this.attr.loadMoreSelector, { loadMoreContainerSelector: this.attr.loadMoreContainerSelector, loadMoreActionSelector: this.attr.loadMoreActionSelector, loadMoreSelector: this.attr.loadMoreSelector })):this.updateLoadMoreAction(), this.broadcastSuccessfulLoadMore(e), this.uiHideLoading() }, this.broadcastSuccessfulLoadMore = function (t) { this.broadcast('success', t); var e = this.$node.data('success-event'); "undefined"!==typeof e && this.broadcast(e) }, this.onLoadMoreError = function (t, e, i) { if ('timeout'===i) { var o = $j('#flashMessages'); var n = "The request timed out. Please try again."; o.trigger('addFlashMessage', [n]);} this.uiHideLoading(), this.defer(function () { this.authRedirect(e, $j.proxy(function () { var t = "Unknown XHR failure while trying to load more content"; e.status && (t += ", status code: " + e.status), this.broadcastError(t);}, this)) }, 500);}, this.uiShowLoading = function () { $j(this.attr.loadMoreActionSelector).addClass(this.attr.loadingClass);}, this.uiHideLoading = function () { $j(this.attr.loadMoreActionSelector).removeClass(this.attr.loadingClass);}, this.getPageNumberFromURL = function () { var t = this.$node.attr('href'); var i = e.exec(t); return i!==null?parseInt(i[1], 10):1;}, this.updateLoadMoreAction = function () { var t = this.$node.attr('href'); e.test(t) ? t = t.replace(e, "page=" + this.nextPage):i.test(t) ? t = t.replace(i, "next_page_token=" + this.nextPageToken):this.broadcastError('There is no page query to replace in the load more button', !0), this.$node.attr('href', t) }, this.teardownLoadMore = function () { $j(this.attr.loadMoreContainerSelector).remove(), this.teardown() };}, MixinEventUtils, MixinAuthRedirect); var LoadingFeedback = flight.component(function () { this.defaultAttrs({ loadingClass: "btnLoading", submitElementClass: "btnSubmit" }), this.after('initialize', function () { this.on(document, "ajax:beforeSend submit", this.enableLoadingState), this.on(document, "ajax:complete unload", this.disableLoadingState) }), this.enableLoadingState = function (t) { var e = $j(t.target); var i = this.getSubmitElement(e); i.length && (i.prop('disabled', !0), i.addClass(this.attr.loadingClass));}, this.disableLoadingState = function (t) { var e = $j(t.target); var i = this.getSubmitElement(e); i.length && (i.prop('disabled', !1), i.removeClass(this.attr.loadingClass));}, this.getSubmitElement = function (t) { var e = null; return e = t.hasClass(this.attr.submitElementClass) ? t:t.find('.'+this.attr.submitElementClass) };}); $gr.shared.loadingScreen = flight.component(function () { var t = null; var e=null; var i=null; var o=null; var n=null; var s=null; var a=0; var r = 3; this.defaultAttrs({ loadingEndpoint: null, pollTimeout: 5e3 }), this.after('initialize', function () { t = this.attr.loadingEndpoint, e = this.attr.pollTimeout, o = this.$node, n = $j('.rateBooksContainer'), s = $j('.siteFooter'), n.hide(), s.hide(), i = $j('.js-genrePickerButton').data('genre'), l();}); var l = function () { a += 1, r >= a ? $j.ajax({
url: t, type: "get", data: { format: "json", tag: i }, context: this, success: h }):window.location.href = "/?error=from_recs" }; var h = function (t) { "" !== t.html ? window.location.reload(!0):setTimeout(l, e) } }); var MobileConfirmationMenu = flight.component(function () { var t = "mobileConfirmationMenu"; this.defaultAttrs({ channel: t, menuSelector: ".js-mobileConfirmationMenu", dataAttrActionType: "action" }), this.after('initialize', function () { this.$node.data('channel') && (this.attr.channel = this.$node.data('channel')), this.listen('requestShow', this.onRequestShow), this.onSlideUpEvent('listItemSelected', this.onMenuItemSelected) }), this.onRequestShow = function () { this.showSlideUpMenu(), this.$node.find('button.slideUpMenuItem:first').focus() }, this.onMenuItemSelected = function (t, e) { var i = $j(e).first(); i.length && i.data(this.attr.dataAttrActionType) && (this.broadcast('listItemSelected', { action: i.data(this.attr.dataAttrActionType) }), this.hideSlideUpMenu()) } }, MixinEventUtils, withSlideUpMenu); $gr.shared.modal = flight.component(function () { this.defaultAttrs({ closeIconSelector: ".js-closeModalIcon", lightBoxContainerSelector: "#box" }), this.after('initialize', function () { this.modalId = this.$node.attr('id'), this.hideCloseIcon = this.$node.data('hide-close-icon'), this.listen('modalTriggered', this.onModalTrigger), this.listen('hideModal', this.uiHideModal), this.$node.data('auto-show') && this.uiShowModal();}), this.onModalTrigger = function (t, e) { e['modal-id'] === this.modalId && this.uiShowModal();}, this.uiShowModal = function () { Lightbox.showBoxByID(this.$node.attr('id')), this.hideCloseIcon && $j(this.attr.lightBoxContainerSelector).find(this.attr.closeIconSelector).remove() }, this.uiHideModal = function () { Lightbox.hideBox();};}, MixinEventUtils), $gr.shared.modalTrigger = flight.component(function () { this.defaultAttrs({}), this.after('initialize', function () { this.on('click', this.broadcastTriggerEvent);}), this.broadcastTriggerEvent = function () { return this.broadcast('modalTriggered', { "modal-id": this.$node.data('modal-id') }), !1;};}, MixinEventUtils), $gr.shared.newsfeedMenu = flight.component(function () { this.defaultAttrs({ notInterestedButtonSelector: ".js-newsfeedNotInterestedButton", notInterestedFormSelector: ".js-newsfeedNotInterested", notInterestedMessageSelector: ".js-wtrNotInterestedMessage", undoNotInterestedButtonSelector: ".js-undoNotInterestedButton", dismissNotInterestedMessageButtonSelector: ".js-dismissNotInterestedMessage" }), this.after('initialize', function () { var t; var e; var i; var o = this; this.on('click', { notInterestedButtonSelector: this.markNotInterested }), t = this.getNotInterestedMessageContainer(), e = t.find(this.attr.undoNotInterestedButtonSelector), e.click((t) => {o.undoNotInterested(t)}), i = t.find(this.attr.dismissNotInterestedMessageButtonSelector), i.click((t) => {o.dismissNotInterested(t)}) }), this.markNotInterested = function (t) { t.preventDefault(), t.stopPropagation(), this.select('notInterestedButtonSelector').parent().submit(), $j(this.getNotInterestedNewsfeedStorySelector()).hide(), this.getNotInterestedMessageContainer().show(), $j('.js-newsfeedOverlay').last().hide();}, this.undoNotInterested = function (t) { var e; var i; t.preventDefault(), e = this.buildNotInterestedData(), i = t.target.href, $j.ajax({
url: i, type: e.method, data: e.requestData, context: this, success: this.showIgnoredNewsfeedStory, error: this.uiShowError });}, this.showIgnoredNewsfeedStory = function () { $j(this.getNotInterestedNewsfeedStorySelector()).show(), this.getNotInterestedMessageContainer().hide();}, this.dismissNotInterested = function (t) { t.preventDefault(), $j(this.attr.notInterestedMessageSelector).hide() }, this.getNotInterestedMessageContainer = function () { return $j(this.getNotInterestedMessageSelector());}, this.getNotInterestedNewsfeedStorySelector = function () { var t; var e; var i; return t = this.getNotInterestedObjectType(), "work" === t ? (e = this.getNotInterestedWorkID(), i = ".newsfeedWorkUpdate" + e):'suggested_list'===t ? (e = this.getNotInterestedSuggestedListID(), i = ".newsfeedListUpdate" + e):'author_following_suggestion'===t ? (e = this.getNotInterestedAuthorFollowingSuggestionID(), i = ".newsfeedAuthorUpdate" + e):'User'===t && (e = this.getNotInterestedUserEngagementID(), i = ".newsfeedEngagementUpdate" + e), i }, this.getNotInterestedMessageSelector = function () { return `${this.getNotInterestedNewsfeedStorySelector()}ShowOnNotInterested`}, this.getNotInterestedData = function (t) { var e = this.select('notInterestedButtonSelector').closest(this.attr.notInterestedFormSelector); return e.data(t) }, this.getNotInterestedObjectType = function () { return this.getNotInterestedData('object-type') }, this.getNotInterestedWorkID = function () { return this.getNotInterestedData('work-id');}, this.getNotInterestedBookID = function () { return this.getNotInterestedData('book-id');}, this.getNotInterestedSuggestedListID = function () { return this.getNotInterestedData('suggested-list-id');}, this.getNotInterestedAuthorFollowingSuggestionID = function () { return this.getNotInterestedData('author-following-suggestion-id') }, this.getNotInterestedUserEngagementID = function () { return this.getNotInterestedData('user-id');}, this.buildNotInterestedData = function () { var t; var e; var i; var o; return o = "put", e = this.getNotInterestedObjectType(), "work" === e ? (i = this.getNotInterestedBookID(), o = "delete", t = { format: "json", user_not_interested_work: { book_id: i } }):'suggested_list'===e ? (i = this.getNotInterestedSuggestedListID(), t = { format: "json", suggested_list: { id: i } }):'author_following_suggestion'==e ? (i = this.getNotInterestedAuthorFollowingSuggestionID(), t = { format: "json", author_following_suggestion: { id: i } }):'User'===e && (o = "post", t = { format: "json" }), { method: o, requestData: t } };}, dropdownMenu), $gr.shared.newsfeedNav = flight.component(function () { this.defaultAttrs({ updateFilterToggleSelector: ".js-updateToggle", updateFiltersSelector: ".js-updateTypeFilters", loadingSelector: ".js-loading" }), this.after('initialize', function () { var t = this; this.on('click', { updateFilterToggleSelector: this.toggleUpdateFilterForm }), this.listen('dataUpdatesLoading', this.showLoading), this.listen('dataUpdatesLoadingFinished', this.hideLoading), this.listen('dataFiltersUpdated', this.hideUpdateFilterForm), this.listen('hideConfirmModal', this.hideUpdateFilterForm), $j(document).keyup((e) => {27===e.which&&t.hideUpdateFilterForm()}), $j(document).click((e) => {$j(t.attr.newsfeedNavSelector).first();$j.contains(t.node,e.target)||t.hideUpdateFilterForm()}) }), this.toggleUpdateFilterForm = function () { this.select('updateFiltersSelector').toggle() }, this.hideUpdateFilterForm = function () { this.select('updateFiltersSelector').hide();}, this.showLoading = function () { this.select('loadingSelector').show() }, this.hideLoading = function () { this.select('loadingSelector').hide() };}, MixinEventUtils), $gr.shared.newsfeedTracking = flight.component(function () { this.defaultAttrs({ trackingContainerSelector: ".newsfeed" }), this.after('initialize', function () { $j(document).on('click', this.attr.trackingContainerSelector + " .csct", this.setCookie) }), this.setCookie = function () { var t = new Date(); t.setTime(t.getTime() + 3e4), document.cookie = "csct=true; expires=" + t.toGMTString() + "; path=/";} }), $gr.shared.newsfeedUpdateUI = flight.component(function () { this.defaultAttrs({
errorMessageSelector: ".newsfeedErrorMessage", existingUpdatesSelector: "tr.update[data-timestamp]", loadingSpinnerSelector: ".js-loading", loadMoreContainerSelector: "#loadMoreContainerUpdates", updatesContainerSelector: "#updates", updatesFiltersSelector: ".js-updateTypeFilters" }), this.after('initialize', function () { this.listen('data-form-success', this.updateNewsfeed), this.listen('newsfeedUpdates.loadMore', this.reattachComponents), this.lazyloadNewsfeed();}), this.reattachComponents = function () { $gr.shared.attachNewsfeedComponents();}, this.lazyloadNewsfeed = function () { var t = $j('.newsfeed #loadMoreContainerUpdates .loadMoreAction a'); t.click() }, this.updateNewsfeed = function (t, e) { "undefined"!==typeof e.newsfeed_html ? this.reloadNewsfeed(e.newsfeed_html):'undefined'!=typeof e.reload_newsfeed && $j.ajax({ url: "/home/index_ajax", type: "get", data: { format: "json" }, context: this, beforeSend: this.showLoadingIcon, success: function (t, e, i) { this.reloadNewsfeed(t.newsfeed_html);}, error: this.showNewsfeedError }) }, this.reloadNewsfeed = function (t) { this.$node.html(t), this.reattachComponents(), this.broadcast('dataUpdatesLoadingFinished'), this.lazyloadNewsfeed();}, this.showLoadingIcon = function () { $j('html, body').animate({ scrollTop: 0 }, "slow"), this.select('updatesFiltersSelector').hide(), this.select('updatesContainerSelector').hide(), this.select('loadMoreContainerSelector').hide(), this.select('loadingSpinnerSelector').show() }, this.showNewsfeedError = function () { this.select('errorMessageSelector').show();} }, MixinEventUtils), $gr.shared.notification = flight.component(() => {}, withNotification), $gr.shared.openGlidePopup = flight.component(function () { this.after('initialize', function () { this.on('click', this.buttonClicked);}), this.buttonClicked = function (t) { var e = this.$node; var i=e.data("refTag"); var o=e.data("asin"); var n=e.data("url"); var s = e.data('amazonUrl'); s || (s = "https://www.amazon.com/gp/product/" + o + "/ref=" + i + "?caller=Goodreads&callerLink=" + n + "&tag=" + i + "-20"), window.open(s, "1402010176686").focus(), t.preventDefault();};}), $gr.shared.paginatedReadingNotesLinksWidget = flight.component(function () { var t = 5; this.defaultAttrs({
PrevLink: ".pagination__prevLink", NextLink: ".pagination__nextLink", ReadingNotes: ".paginatedReadingNotes", PageNumberLink: ".pagination__pageNumberLink"
}), this.after('initialize', function () { this.pageNumber = 1, this.itemsPerPage = this.$node.data('itemsPerPage') || t, this.totalItems = this.$node.data('totalItems'), this.totalPages = Math.ceil(this.totalItems / this.itemsPerPage), this.hasPageNumberLinks = !!this.select('PageNumberLink').length, this.on('click', { NextLink: this.showNextKNHPage, PrevLink: this.showPrevKNHPage, PageNumberLink: this.showSpecificPage }), this.totalItems > this.itemsPerPage && (this.select('PrevLink').show(), this.select('NextLink').show(), this.hasPageNumberLinks && this.select('PageNumberLink').show()), this.updateContentAndLinks();}), this.showNextKNHPage = function () { this.pageNumber += 1, this.updateContentAndLinks() }, this.showPrevKNHPage = function () { this.pageNumber -= 1, this.updateContentAndLinks();}, this.showSpecificPage = function (t) { this.pageNumber = parseInt(t.target.innerText), this.updateContentAndLinks() }, this.updateContentAndLinks = function () { this.select('ReadingNotes').css('display', "none"), this.startAt = (this.pageNumber - 1) * this.itemsPerPage, this.select('ReadingNotes').slice(this.startAt, this.startAt + this.itemsPerPage).css('display', "block"), this.hasPageNumberLinks && (this.select('PageNumberLink').prop('disabled', !1), this.select('PageNumberLink')[this.pageNumber - 1].disabled = !0), this.select('NextLink').prop('disabled', this.pageNumber >= this.totalPages), this.select('PrevLink').prop('disabled', 1 == this.pageNumber);};}), $gr.shared.pollClearVoteButton = flight.component(function () { this.defaultAttrs({ paneSelector: ".votedOnPane", voteButtonSelector: ".pollVoteButton", writeInSelector: ".writeIn", bookCoverSelector: ".bookcover", wtrSelector: ".gcaNominee__wtr" }), this.after('initialize', function () { this.on('click', this.clearVote) }), this.clearVote = function (t) { var e = $j(t.target); var i=e.data("pollVoteId"); var o=e.data("answer"); var n = e.data('pollId'); return $j.ajax({ url: "/poll/clear_vote", type: "POST", dataType: "JSON", context: this, data: { id: n, poll_vote_id: i, gca: !0 }, success: function () { this.hideVotedOnPane(), this.showVoteButtons(o) } }), !1;}, this.hideVotedOnPane = function () { $j(this.attr.paneSelector).hide();}, this.removeOverlayAndCheckMark = function () { $j(this.attr.bookCoverSelector).removeClass('votedCoverOverlay'), $j('div').remove('.votedForCoverCheckSlim') }, this.showVoteButtons = function (t) { $j(this.attr.voteButtonSelector).removeClass('hidden'), $j(this.attr.wtrSelector).addClass('hidden'), this.removeOverlayAndCheckMark(), $j(this.attr.voteButtonSelector).show(), $j('#pollVoteButton_'+t).html('Vote'), $j(this.attr.writeInSelector).show() } }), $gr.shared.pollVoteButton = flight.component(function () { this.defaultAttrs({
bookCoverSelector: ".bookcover", voteButtonSelector: ".pollVoteButton", autoCompleteSelector: ".searchFieldInput", votedOnPaneSelector: ".votedOnPane", writeInVoteBtnSelector: ".writeInButton", writeInSelector: ".writeIn", writeInErrorSelector: ".writeInError", wtrSelector: ".gcaNominee__wtr"
}), this.bookID = -1, this.after('initialize', function () { this.on('click', this.voteForPoll) }), this.voteForPoll = function (t) { var e = $j(t.target); var i=e.data("answer"); var o = e.data('pollId'); return this.bookID = e.data('bookId'), e.innerHTML = "voting", "undefined"===typeof i && (i = $j(this.attr.autoCompleteSelector)[0].value, this.bookID = $j(this.attr.autoCompleteSelector).data('bookId'), "undefined"===typeof this.bookID) ? (this.displayError(), !1):('undefined'!=typeof i && "" != i ? $j.ajax({
url: "/poll/vote", type: "POST", dataType: "JSON", context: this, data: { id: o, answer: i, book_id: this.bookID, gca: !0 }, statusCode: {
200: this.displayVotedOnPanel, 400: this.displayError, 401: this.displayError, 403: this.displayError
}
}):e.innerHTML = "Vote", !1);}, this.displayVotedOnPanel = function (t) { var e = t.body; this.addOverlayAndCheckMark(), $j(this.attr.votedOnPaneSelector).html(e), $j(this.attr.votedOnPaneSelector).hide().fadeIn(), $j(this.attr.voteButtonSelector).hide(), $j(this.attr.wtrSelector).removeClass('hidden'), $j(this.attr.writeInErrorSelector).hide(), $j(this.attr.writeInSelector).hide(), $gr.shared.pollClearVoteButton.attachTo('.clearVoteButton'), window.scrollTo(0, 0);}, this.addOverlayAndCheckMark = function () { $j(this.attr.bookCoverSelector).addClass('votedCoverOverlay'), $j('#bookcover_'+this.bookID).removeClass('votedCoverOverlay'), $j('#bookcover_'+this.bookID).before("<div class='votedForCoverCheckSlim'></div>");}, this.displayError = function (t) { var e = "<span>That book is ineligible. Please try again!</span>"; t && (e += "<br /><br />" + t.responseJSON.body), $j(this.attr.writeInErrorSelector).html(e), $j(this.attr.writeInErrorSelector).hide().fadeIn(), $j(this.attr.writeInVoteBtnSelector).html('Vote') } }), $gr.shared.previewableNewsfeedStoryForm = flight.component(function () { this.defaultAttrs({ inputSelector: ":input", imageFieldSelector: ".js-imageField", previewContainerSelector: ".js-previewContainer", previewErrorSelector: ".js-previewError", previewImageSelector: ".js-previewImage" }), this.after('initialize', function () { this.on('change', { inputSelector: this.getPreviewHtml });}), this.getPreviewHtml = function (t) { $j.ajax(this.$node.data('preview-url'), {
data: this.$node.serialize(), context: this, success: this.showPreview, error: this.showPreviewError });}, this.showPreview = function (t) { this.select('previewErrorSelector').hide(), this.select('previewContainerSelector').html(t.preview_html), this.showPreviewImage() }, this.showPreviewError = function () { this.select('previewContainerSelector').hide(), this.select('previewErrorSelector').show() }, this.showPreviewImage = function () { var t = this.select('imageFieldSelector'); if (t.length!==0&&t[0].files.length!==0) { var e = t[0].files[0]; var i=this.select("previewImageSelector"); var o = new FileReader(); o.onload = function (t) { var e = t.target.result; var o = $j('<img>').attr('src', e); i.html(o);}, o.readAsDataURL(e);} } }), $gr.shared.pulldownNavigator = flight.component(function () { var t = "pulldownNavigator"; this.defaultAttrs({ channel: t, componentName: t, pullDownSelector: ".pulldownNavigator" }), this.after('initialize', function () { this.on('change', e);}); var e = function (t) { var e = t.target.value; window.location = e;} }); var RateBooksProgressBar = flight.component(function () { var t = "rateBooksProgressBar"; this.defaultAttrs({ channel: t, componentName: t }), this.after('initialize', function () { this.listen('saveRatingSuccess.ratingStars', this.updateProgressBar), this.rateBooksTotal = this.$node.data('rateBooksTotal');}), this.updateProgressBar = function (t, e) { var i = e.user_ratings_count; var o = Math.min(100, parseInt(100 * (i / this.rateBooksTotal))); $j('.progressBarInner').css('width', o + "%"), $j('.progressRatingsCount').text(i), i == this.rateBooksTotal && this.trigger('rateBooksDoneRating');};}, MixinEventUtils, MixinAuthRedirect); $gr.shared.rateBooksSkipDialog = flight.component(function () { var t = "rateBooksSkipDialog"; var e=null; var i=null; var o=null; var n = null; this.defaultAttrs({ channel: t, componentName: t }), this.after('initialize', function () { n = this, e = $j('.js-saveAction'), i = $j('.js-closeDialog'), o = this.$node, this.addOnClickHandler(), i.on('click', this.hideDialog), this.on(document, "rateBooksDoneRating", this.removeOnClickHandler), this.on(document, "genrePickerOpened", this.removeOnClickHandler), this.on(document, "genrePickerClosed", this.addOnClickHandler);}), this.addOnClickHandler = function () { "Skip" === e.text() && e.on('click', this.showDialog);}, this.removeOnClickHandler = function () { this.hideDialog(this.$node), e.off('click', this.showDialog) }, this.showDialog = function () { return n.$node.show(), !1 }, this.hideDialog = function () { o.hide() } }, MixinEventUtils); var RatingComponent = flight.component(function () { var t = $j(document); var e=$j("html"); var i=e.hasClass("touchevents"); var o="ratingComponent"; var n = !1; this.defaultAttrs({
channel: o, componentName: o, tapEvent: i ? "touchstart":'click', tapStartEvent: i ? "touchstart":'mousedown', tapEndEvent: i ? "touchend":'mouseup', animPrepClass: "readyToShow", showClass: "show", itemActiveClass: "active", itemInactiveClass: "inactive", cancelSelector: ".cancel", itemSelector: ".ratingItem:not(.cancel)", listSelector: ".ratingList", isDevicePhone: e.hasClass('mobile'), isDeviceTablet: e.hasClass('tablet'), currentRating: -1, minRating: 0, maxRating: 5 }), this.after('initialize', function () { this.elCache = {}, this.$bookContainer = this.$node.parent().parent(); var t = this.$node.data('submit-url'); if (!t) return this.broadcastError("could not retrieve 'saveUrl'"); if (this.$node.removeAttr('data-submit-url'), this.attr.saveUrl = t, this.attr.currentRating < this.attr.minRating) { var e = this.$node.data('user-rating'); this.$node.removeAttr('data-user-rating'), "undefined" != typeof e && this.validateRating(e) ? this.attr.currentRating = parseInt(e, 10):this.attr.currentRating = this.attr.minRating;} if (this.$node.on([this.attr.tapStartEvent, this.attr.tapEndEvent].join(' '), this.attr.itemSelector, $j.proxy(function (t) { var e = $(t.target); var i = this.attr.itemActiveClass; t.type === this.attr.tapStartEvent ? e.prevAll().addClass(i):(e.prevAll().removeClass(i), this.save(e.data('rating'))) }, this)), this.attr.isDevicePhone) this.initializeForPhone(); else { if (!this.attr.isDeviceTablet) return this.broadcastError('initialization failed, user agent is not mobile/tablet.'); this.initializeForTablet();} this.$bookContainer.find(this.attr.resetSelector).on(this.attr.tapEvent, $j.proxy(this.resetRating, this)), this.listen('saveSuccess', this.updateRatingUI);}), this.initializeForPhone = function () { return this.elCache.$catalyst && this.elCache.$catalyst.length || (this.elCache.$catalyst = this.$node.find('.catalyst'), this.elCache.$catalyst.length) ? (this.elCache.$catalyst.on(this.attr.tapEvent, $j.proxy(this.toggleVisibility, this)), this.select('cancelSelector').on(this.attr.tapEvent, $j.proxy(this.hide, this)), this.overlayId = [this.attr.componentName, Math.floor(1000000001 * Math.random())].join('_'), n || (t.trigger('create.viewportOverlay', { overlayId: this.overlayId }), n = !0), this.listen('removedFromShelves.wtrButton', function (t, e) { if (e.buttonId) { var i = e.buttonId.match(new RegExp(/wtr_button_book_(\d+)/)); if (i[1]) { var o = new RegExp(i[1]); var n = this.$node.attr('id'); o.test(n) && (this.attr.currentRating = this.attr.minRating, this.updateRatingUI(t, { rating: this.attr.minRating, domId: n })) } } }), this.listen('beforeShow', function () { var e = this.select('listSelector'); if (e.length) { var i = e.outerHeight(); if (!(i > 0)) return this.broadcastError('cannot display options list because it has no dimensions'); e.css('bottom', 0 - i + "px");} this.$node.addClass(this.attr.animPrepClass), t.trigger('show.viewportOverlay', { overlayId: this.overlayId });}), this.listen('afterHide', function () { this.defer(function () { t.trigger('hide.viewportOverlay', { overlayId: this.overlayId }) }), this.defer(function () { this.$node.removeClass(this.attr.animPrepClass).select('listSelector').css('bottom', "") }, 350);}), t.on('beforeHide.viewportOverlay', $j.proxy(function (t, e) { e && e.overlayId === this.overlayId && this.defer(function () { this.isVisible() && this.hide() });}, this)), void this.listen('saveComplete', $j.proxy(this.hide, this))):this.broadcastError('could not find catalyst element');}, this.initializeForTablet = function () { this.listen('saveSuccess', function (t, e) { if ($j.isPlainObject(e) && this.validateRating(e.rating)) { var i = e.rating; this.defer(function () { this.$node.find(this.attr.itemSelector).each($j.proxy(function (t, e) { var o = $j(e); o.toggleClass(this.attr.itemInactiveClass, i < parseInt(o.data('rating'), 10)) }, this)) }) } });}, this.hide = function () { this.broadcast('beforeHide'), this.$node.removeClass(this.attr.showClass), this.broadcast('afterHide') }, this.isVisible = function () { return this.$node.hasClass(this.attr.showClass) }, this.show = function () { this.broadcast('beforeShow'), this.$node.addClass(this.attr.showClass), this.broadcast('afterShow') }, this.toggleVisibility = function (t) { t.preventDefault(), this.isVisible() ? this.hide():this.show();}, this.updateRatingUI = function (t, e) { if ($j.isPlainObject(e) && this.validateRating(e.rating)) { if (this.$node.attr('id') !== e.domId) return; e.rating === this.attr.minRating && this.broadcast('reset'), this.$node.data('disable-star-update') || this.defer(function () { this.updateStaticStars(e.rating);}), this.attr.hideCatalystClass && this.elCache.$catalyst.toggleClass(this.attr.hideCatalystClass, this.attr.currentRating > this.attr.minRating);} }, this.updateStaticStars = function (t) { var e = this.$bookContainer.find('.bookUserRatingCurrent'); if (e.length) { var i = t > this.attr.minRating && t <= this.attr.maxRating; var o = /(\w+Star)\sp\d+/; e.find('.stars span').removeAttr('title').html('').each((e,i) => {t>0&&t>e?i.className=i.className.replace(o,"$1 p10"):i.className=i.className.replace(o,"$1 p0")})
.end()
.toggleClass('show', i) } }, this.resetRating = function (t) { t.preventDefault(), this.save(this.attr.minRating);}, this.save = function (t) { this.validateRating(t) && $j.ajax({
url: this.attr.saveUrl, type: "post", data: { format: "json", rating: t }, context: this, success: function (e) { this.attr.currentRating = t, this.broadcast('saveSuccess', { rating: t, domId: this.$node.attr('id'), response: e });}, error: function (t) { this.broadcast('saveError', t), this.defer(function () { this.authRedirect(t, $j.proxy(function () { var e = "Unknown XHR failure when trying to save rating"; t.status && (e += " , status code " + t.status), this.broadcastError(e);}, this)) }, 500);}, complete: function (t) { this.broadcast('saveComplete', t);}
});}, this.validateRating = function (t) { var e = new RegExp('^['+this.attr.minRating + "-" + this.attr.maxRating + "]$"); return e.test(t) } }, MixinEventUtils, MixinAuthRedirect); $gr.shared.ratingDistTooltip = flight.component(function () { var t = "RatingDistTooltip"; this.defaultAttrs({ channel: t, componentName: t }), this.after('initialize', function () { this.userId = this.$node.data('user-id'), this.graph = $j('#ratingDistribution'+this.userId), this.graphHtml, this.on('click', this.getRatingDistribution) }), this.getRatingDistribution = function () { return void 0 === this.graphHtml ? $j.ajax({ url: "/user/rating_distribution/" + this.userId, type: this.methodType, data: { format: "json" }, context: this, success: this.showRatingDistGraph }):this.graph.toggle(), !1 }, this.showRatingDistGraph = function (t) { this.graphHtml = t.body, this.graph.append(this.graphHtml), this.graph.toggle();} }, MixinEventUtils); var RatingStars = flight.component(function () { var t = "ratingStars"; this.defaultAttrs({ channel: t, componentName: t }), this.after('initialize', function () { var t = this; this.attachStarClickHandler(t), this.on(document, "rateBooksCarouselUpdated", function () { this.attachStarClickHandler(t);});}), this.attachStarClickHandler = function (t) { $j('.js-starRating').off(), $j('.js-starRating').on('click', function () { t.toggleStarUI($j(this), t);});}, this.toggleStarUI = function (t, e) { var i = $.merge(t.siblings(), t); var o=t.parent().data("user-rating"); var n=t.data("star"); var s = t.hasClass('on') && n == o; $.each(i, function (t, e) { var i = $j(e); s || i.data('star') > n ? (i.removeClass('on'), i.addClass('off')):(i.removeClass('off'), i.addClass('on'));}), e.saveRating(t, n, o) }, this.saveRating = function (t, e, i) { e === i && (e = 0); var o = t.parent().parent().attr('rel'); var n=t.parent().parent().attr("origin"); var s = $j(`.bookItem[rel='${o}']`); e >= 3 && 3 > i && (s.find('.bookCover').hide(), s.find('.bookCoverLoadingOverlay').show()), $.ajax({
url: t.parent().data('submit-url'), type: "post", data: { format: "json", rating: e, delete_review: 0 === e, book_id: o, reg_path: $j('#reg_path').val(), book_origin: n }, context: this, success: function (o) { t.parent().data('user-rating', e), e >= 3 && 3 > i && (s.find('.bookCover').show(), s.find('.bookCoverLoadingOverlay').hide()), (e==0||i==0) && this.broadcast('saveRatingSuccess', o) }
}) };}, MixinEventUtils, MixinAuthRedirect); $gr.communityQA.readerQAForm = flight.component(function () { var t = "readerQAForm"; this.defaultAttrs({ channel: t, formSuccessEventName: "qaFormSuccess", containerSelector: ".js-communityAnswersList", emptyMessageSelector: ".communityAnswerEmptyMessage", formContainerSelector: ".readerQAFormContainer", formUserImageSelector: ".js-ReaderQAForm-formUserImage", notificationSelector: ".js-notification", rateLimitMessageSelector: ".js-ReaderQAForm-rateLimitMessage", unansweredQuestionsContainer: ".js-unansweredQuestionsContainer", unansweredQuestionsList: "#communityQuestionsWithoutAnswers", unansweredQuestionSelector: ".unansweredQuestion"
}), this.after('initialize', function () { this.on('ajax:success', this.uiAddResponseToPage), this.$formNode = this.$node.find('form');}), this.displayRateLimitMessage = function () { $j(this.attr.rateLimitMessageSelector).show();}, this.hideFormUserImage = function () { $j(this.attr.formUserImageSelector).hide();}, this.uiAddQuestionToPage = function (t) { $j(this.attr.unansweredQuestionsList).prepend(t.html); var e = $j(this.attr.unansweredQuestionsContainer); e.is(':visible') || e.show() }, this.uiAddAnswerToPage = function (t) { var e = $j(t.html).prependTo(this.attr.containerSelector); this.attachComponentsToNewAnswers(e), $j(this.attr.emptyMessageSelector).hide();}, this.uiAddResponseToPage = function (t, e, i, o) { this.uiResetForm(); var n = !1; var s = this.$formNode.data('formType'); e.html && ('question'===s ? this.uiAddQuestionToPage(e):'answer'===s && this.uiAddAnswerToPage(e)), e.message && this.uiShowNotification(e), e.limit_reached && (n = !0), ('answer'===this.$formNode.data('formType') || n) && (this.uiHideForm(), this.trigger('answerFormSubmitted.authorDashboardQA')), n && (this.hideFormUserImage(), this.displayRateLimitMessage()); var a = this.$formNode.parents(this.attr.unansweredQuestionSelector); a.length && a.find('.questionHeaderAndActions').fadeOut();}, this.attachComponentsToNewAnswers = function (t) { $gr.shared.editInPlaceController.attachTo(t, { editableElementSelector: ".communityAnswerText", highlightElementSelector: ".communityAnswerText", elementsToHideSelectors: ".communityAnswererName, .communityAnswerText, .communityAnswerFooter" }), $gr.shared.confirmModal.attachTo('.js-confirmModal');}, this.uiHideForm = function () { this.$node.children().not(this.attr.notificationSelector).fadeOut(), this.teardown();} }, MixinEventUtils, withExpandableTextField, withNotification, withFormAjax), $gr.shared.readingNote = flight.component(function () {
var t = "ReadingNote"; var e=2e4; var i=1e3; var o="delete"; var n="post"; var s = "put"; this.defaultAttrs({
channel: t,
componentName: t, highlightContainer: ".noteHighlightTextContainer__highlightContainer",
noteContainer: ".noteHighlightTextContainer__noteContainer",
noteText: ".js-noteText",
persistanceUI: ".noteContainer__noteText__persist",
saveButton: ".js-readingNote-save",
cancelButton: ".js-readingNote-cancel", savedNotification: ".noteContainer__noteText__savedNotification",
deleteNoteLink: ".noteContainer__noteText__deleteNote", visibleToggle: ".toggleSwitch__checkbox", visibleSlider: ".toggleSwitch__label", deleteReadingNoteLink: ".js-readingNote-deleteReadingNote", deleteReadingNoteSpinner: ".js-readingNote-deleteReadingNoteSpinner", markAsSpoilerCheckbox: ".js-readingNote-spoilerCheckbox", markAsSpoilerLabel: ".markAsSpoilerContainer__label",
  commentsContainer: ".noteHighlightTextContainer__commentsContainer",
likesContainer: ".noteHighlightTextContainer__likeInformationContainer", likesButtonContainer: ".noteHighlightTextContainer__likeButtonContainer",
showSpoiler: ".spoilerContainer__showLink", locationLink: ".noteHighlightContainer__location" }), this.after('initialize', function () { this.annotationPairId = this.$node.data('annotation-pair-id'), this.bookId = this.$node.data('book-id'), this.isSpoiler = this.$node.data('is-spoiler'), this.readingNoteId = this.$node.data('reading-note-id'), this.ref = this.$node.data('ref'), this.saveButtonActive = !0, this.hasNote = this.$node.data('has-note'); var t = this.select('noteText').text().trim(); this.select('noteText').text(t), this.lastSavedText = t, this.select('highlightContainer').text() && (this.hasHighlight = !0), commentBox = document.getElementById('commentBox'), null != commentBox && "true" == commentBox.getAttribute('should_auto_focus') && setTimeout(() => {$j(".jsCommentComposerTextArea").focus()}, 1e3), this.isVisible = this.$node.data('visible'), this.refreshToggle(), this.on('click', { noteText: this.showPersistanceUI, cancelButton: this.hidePersistanceUIandRestoreText, saveButton: this.saveNote, deleteNoteLink: this.deleteNote, deleteReadingNoteLink: this.deleteReadingNote, showSpoiler: this.showSpoiler
}), this.on('keydown', { noteText: this.contentEditableKeypress }), this.on('change', { visibleToggle: this.toggleVisible, markAsSpoilerCheckbox: this.onSpoilerCheckboxChanged }), this.on(document, "ajaxComplete", this.refreshToggle), this.on(document, "bulkMakeVisibleEvent", this.handleBulkMakeVisible), this.on(document, "bulkMakeInvisibleEvent", this.handleBulkMakeInvisible), this.on('readingNote.MoreActions.MarkAsSpoilerEvent', this.onMoreActionsMarkAsSpoiler), this.on('readingNote.MoreActions.DeleteEvent', this.onMoreActionsDelete), window.attachEvent && !window.addEventListener && (this.select('visibleSlider').hide(), this.select('visibleToggle').show());}), this.contentEditableKeypress = function (t) { return t.keyCode===27?void this.hidePersistanceUIandRestoreText():void this.showPersistanceUI();}, this.showPersistanceUI = function () { this.hidePrompts(), this.select('persistanceUI').show(), this.hasNote && (this.resetSaveButtonState(), this.showDeleteNoteLink()), this.select('persistanceUI').length && this.select('noteText').addClass('editNoteActive');}, this.hidePersistanceUI = function () { this.showPrompts(), this.select('persistanceUI').hide(), this.select('noteText').removeClass('editNoteActive') }, this.hideVisibleOnlyAttributes = function () { this.select('commentsContainer').hide(), this.select('likesButtonContainer').hide(), this.select('likesContainer').find('.likeInformation').hide(), this.select('locationLink').find('a').contents().unwrap() }, this.showPrompts = function () { var t = this.select('noteText'); t.removeClass('noEdit'), t.removeClass('greyWatermark') }, this.hidePrompts = function () { var t = this.select('noteText'); t.addClass('noEdit'), t.addClass('greyWatermark') }, this.showDeleteNoteLink = function () { this.select('deleteNoteLink').show() }, this.hideDeleteNoteLink = function () { this.select('deleteNoteLink').hide();}, this.showDeleteReadingNoteLink = function () { this.select('deleteReadingNoteLink').show(), this.select('deleteReadingNoteSpinner').hide();}, this.hideDeleteReadingNoteLink = function () { this.select('deleteReadingNoteLink').hide(), this.select('deleteReadingNoteSpinner').show();}, this.showSavedNotification = function () { this.select('savedNotification').show() }, this.hideSavedNotification = function () { this.select('savedNotification').hide();}, this.hidePersistanceUIandRestoreText = function () { this.hidePersistanceUI(), this.restoreText() }, this.resetSaveButtonState = function () { this.select('saveButton').text('Save'), this.saveButtonActive = !0;}, this.removeText = function () { this.select('noteText').text('');}, this.restoreText = function () { this.select('noteText').text(this.lastSavedText) }, this.trimLines = function (t) { return t.split('\n').map((t) => {return t.trim()}).join('\n').trim();}, this.sanitizeContenteditableString = function (t) { var e = t.trim().replace(/&nbsp;/gi, "").replace(/<div\s*\/*>\s*<br\s*>\s*<\/div\s*>/, "<br>").replace(/<br(\s*)\/*>/gi, "\n")
.replace(/(<(p|div))/gi, "\n$1")
.replace(/(<([^>]+)>)/gi, "")
.replace(/&lt;/g, "<")
.replace(/&gt;/g, ">")
.replace(/&amp;/g, "&"); return this.trimLines(e) }, this.saveNote = function () { if (this.saveButtonActive) { this.saveButtonActive = !1, this.select('saveButton').text('Saving...'); var t = this.sanitizeContenteditableString(this.select('noteText').html()); if (t === this.lastSavedText) return this.textBeingSaved = t, void this.onSaveNoteSuccess(); var e; var i; var a = { text: t }; "" === t ? (e = o, i = this.onImplicitDeleteSuccess):(this.textBeingSaved = t, this.hasNote ? e = s:(e = n, a.annotation_pair_id = this.annotationPairId), i = this.onSaveNoteSuccess); var r = this.onSaveNoteError; this.makeRequest(e, this.getNoteEndpoint(), a, i, r) } }, this.deleteNote = function () { var t = o; var e=this.onDeleteNoteSuccess; var i=this.onDeleteNoteError; var n = this.readingNoteId; this.makeRequest(t, this.getNoteEndpoint(n), null, e, i);}, this.makeRequest = function (t, i, o, n, s) { this.ref && (o===null&&(o = {}), o.ref = this.ref); var a = { url: i, type: t, dataType: "json", success: n, error: s, data: o, timeout: e, context: this
}; $j.ajax(a);}, this.onSaveNoteSuccess = function (t) { this.lastSavedText = this.textBeingSaved, this.resetSaveButtonState(), this.showSavedNotification(), "" !== this.lastSavedText && (this.hasNote = !0), t && t.annotation_pair_id && (this.annotationPairId = t.annotation_pair_id); var e = $j.proxy(this.hidePersistanceUI, this); var o=$j.proxy(this.hideSavedNotification,this); var n=$j.proxy(this.showDeleteNoteLink,this); var s = $j.proxy(this.restoreText, this); window.setTimeout(() => {e(),o(),n(),s()}, i) }, this.onImplicitDeleteSuccess = function (t) { this.resetSaveButtonState(), this.showSavedNotification(); var e = $j.proxy(this.hidePersistanceUI, this); var o=$j.proxy(this.hideSavedNotification,this); var n = $j.proxy(this.onDeleteNoteSuccess, this, t); window.setTimeout(() => {e(),o(),n()}, i);}, this.onDeleteNoteSuccess = function (t) { this.lastSavedText = "", this.hasNote = !1, this.annotationPairId = t.annotation_pair_id, (this.annotationPairId==null||this.annotationPairId.length <= 0) && this.$node.remove(), this.removeText(), this.hidePersistanceUI(), this.hideDeleteNoteLink();}, this.onSaveNoteError = function () { this.resetSaveButtonState(); var t = "An error occurred while saving your note."; this.showError(t) }, this.onDeleteNoteError = function () { this.restoreText(); var t = "An error occurred while deleting your note."; this.showError(t);}, this.hasComments = function () { var t = this.select('commentsContainer'); return t.find('.gr-comment.gr-mediaBox').length > 0;}, this.hasLikes = function () { var t = this.select('likesContainer'); return t.find('.likeInformation').length > 0;}, this.toggleVisible = function (t) { var e = t.target.checked; if (!e) { if ((this.hasComments() || this.hasLikes()) && !this.popUpMakeInvisibleDialog()) return void this.select('visibleToggle').prop('checked', !0); this.hideVisibleOnlyAttributes();} this.isVisible = e, this.toggleVisibleRequest(e);}, this.toggleVisibleRequest = function (t) { this.updateVisibleCount(t); var e = { visible: t }; var i=this.onToggleVisibleSuccess; var o=this.onToggleVisibleError; var n = this.readingNoteId; this.makeRequest(s, this.getReadingNoteEndpoint(n), e, i, o);}, this.onToggleVisibleSuccess = function () {}, this.onToggleVisibleError = function () { var t = "Your reading note could not be made visible/hidden. Please try again later."; this.showError(t), this.isVisible = !this.isVisible, this.refreshToggle(), this.updateVisibleCount(this.isVisible) }, this.refreshToggle = function () { this.select('visibleToggle').prop('checked', this.isVisible);}, this.handleBulkMakeVisible = function () { this.isVisible = !0, this.refreshToggle() }, this.handleBulkMakeInvisible = function () { this.isVisible = !1, this.refreshToggle(), this.hideVisibleOnlyAttributes();}, this.updateVisibleCount = function (t) { t ? this.trigger(document, "readingNoteMadeVisibleEvent"):this.trigger(document, "readingNoteMadeInvisibleEvent") }, this.popUpMakeInvisibleDialog = function () { var t = "Are you sure?\n\nIf you make this " + this.knhObjectName() + " invisible, you\u2019ll lose all likes and comments associated with it."; return window.confirm(t) }, this.onSpoilerCheckboxChanged = function () { var t = { is_spoiler: this.isSpoilerCheckboxChecked() }; var e=function(){this.onChangeSpoilerSuccess(t)}; var i = this.onChangeSpoilerError; this.makeRequest(s, this.getReadingNoteEndpoint(), t, e, i) }, this.onMoreActionsMarkAsSpoiler = function (t, e) { var i = { is_spoiler: e.is_spoiler }; this.updateSpoilerUI(); var o = function () { this.onChangeSpoilerSuccess(i);}; var n = this.onChangeSpoilerError; this.makeRequest(s, this.getReadingNoteEndpoint(), i, o, n) }, this.updateSpoilerUI = function () { var t; t = this.isSpoiler ? "Marked as Spoiler":'Mark as Spoiler', this.select('markAsSpoilerLabel').text(t), this.$node.find('.js-readingNote-spoilerCheckbox').prop('checked', this.isSpoiler); var e = this.$node.find('.js-readingNote-moreActions'); this.trigger(e, "readingNote.SpoilerChangeEvent", { is_spoiler: this.isSpoiler }) }, this.onChangeSpoilerSuccess = function (t) { this.isSpoiler = t.is_spoiler, this.updateSpoilerUI() }, this.onChangeSpoilerError = function () { var t = "Your reading note could not be marked/unmarked as a spoiler. Please try again later."; this.showError(t), this.updateSpoilerUI() }, this.isSpoilerCheckboxChecked = function () { return !!this.$node.find('.js-readingNote-spoilerCheckbox').prop('checked') }, this.showSpoiler = function () { this.$node.find('.spoilerContainer').hide(), this.$node.find('.readingNoteContentContainer').show() }, this.onMoreActionsDelete = function (t) { this.deleteReadingNote() }, this.deleteReadingNote = function () { var t = "Are you sure?\n\nIf you delete this " + this.knhObjectName() + ", you\u2019ll lose all likes and comments associated with it, and remove it from Kindle."; if (window.confirm(t)) { var e = { book_id: this.$node.data('bookId') }; var i=this.onDeleteReadingNoteSuccess; var n=this.onDeleteReadingNoteError; var s = this.readingNoteId; this.hideDeleteReadingNoteLink(), this.makeRequest(o, this.getReadingNoteEndpoint(s), e, i, n);} }, this.onDeleteReadingNoteSuccess = function () { this.select('visibleToggle').prop('checked') && this.trigger(document, "readingNoteMadeInvisibleEvent"), this.trigger(document, "readingNoteDeletedEvent"), this.$node.remove() }, this.onDeleteReadingNoteError = function () { this.showDeleteReadingNoteLink(); var t = "An error occurred while deleting your reading note."; this.showError(t) }, this.showError = function (t) { var e = $j('#notificationBanner'); e.length ? e.trigger('showNotification', { type: "error", message: t }):$j('#flashMessages').trigger('addFlashMessage', [t, "error"]);}, this.knhObjectName = function () { var t; return t = this.hasNote && this.hasHighlight ? "note and highlight":this.hasNote ? "note":'highlight'}, this.getReadingNoteEndpoint = function (t) { return path = "/notes/" + this.bookId + "/" + this.annotationPairId, t && (path += "?reading_note_id=" + t), path;}, this.getNoteEndpoint = function () { return "/notes/" + this.bookId + "/" + this.annotationPairId + "/note";} }, MixinEventUtils, MixinAuthRedirect), $gr.shared.readingNoteBanner = flight.component(function () { var t = "ReadingNoteBanner"; var e=2e4; var i = "put"; this.defaultAttrs({ channel: t, componentName: t, makeVisibleButton: ".js-makeAllVisible", makeInvisibleLink: ".js-makeAllInvisible", shareStatus: ".js-bulkShareStatus", helpTipForMakeVisible: ".readingNotes__HelpTip", helpTextForMakeVisible: ".readingNotesBanner__HelpPopover", mainReadingNotesContainer: ".readingNotesMainContainer__highlightsNotesColumn", visibleCountText: "#visibleCount", totalCountText: "#totalCount", totalCountButtonText: "#makeVisibleButton #totalCount"
}), this.after('initialize', function () { this.totalCount = this.$node.data('totalCount'), this.visibleCount = this.$node.data('visibleCount'), this.ref = this.$node.data('ref'), this.readingNotesEndpoint = "/notes/" + this.$node.data('bookId') + "/share", this.on('click', { makeVisibleButton: this.makeAllVisible, makeInvisibleLink: this.makeAllInvisible, helpTipForMakeVisible: this.toggleVisibleHelp, helpTextForMakeVisible: this.toggleVisibleHelp }), this.on(document, "ajaxComplete", this.refreshBulkUpdateControl), this.on(document, "readingNoteMadeVisibleEvent", this.handleReadingNoteMadeVisible), this.on(document, "readingNoteMadeInvisibleEvent", this.handleReadingNoteMadeInvisible), this.on(document, "readingNoteDeletedEvent", this.handleReadingNoteDeleted), this.refreshBulkUpdateControl(), this.initializeFreshdeskWidget("&widgetType=popup&formTitle=Feedback+on+Kindle+Notes+%26+Highlights&submitThanks=Thanks+so+much+for+your+feedback!+Feel+free+to+continue+providing+feedback+on+know+what+you+like+or+what+could+be+improved.+If+you+need+additional+help+or+have+feedback+about+other+parts+of+the+site,+please+email+us+at+support@goodreads.com.&searchArea=no&helpdesk_ticket[subject]=Kindle+Notes+%26+Highlights+Feedback&helpdesk_ticket[description]=Please+leave+your+feedback+above+this+line!+If+you'd+like+more+help,+please+contact+us+at+support@goodreads.com&screenshot=no");}), this.handleReadingNoteMadeVisible = function () { this.visibleCount += 1, this.refreshVisibleCount();}, this.handleReadingNoteMadeInvisible = function () { this.visibleCount -= 1, this.refreshVisibleCount() }, this.refreshVisibleCount = function () { this.select('visibleCountText').text(this.visibleCount), this.refreshBulkUpdateControl();}, this.handleReadingNoteDeleted = function () { this.totalCount -= 1, this.refreshTotalCount() }, this.refreshTotalCount = function () { this.select('totalCountText').text(this.totalCount), this.select('totalCountButtonText').text(this.totalCount), this.refreshBulkUpdateControl() }, this.popUpMakeInvisibleDialog = function () { var t = "Are you sure?\n\nIf you make these notes and highlights invisible, you'll lose any likes and comments."; return window.confirm(t);}, this.makeRequest = function (t, i, o, n, s) { this.ref && (o===null&&(o = {}), o.ref = this.ref); var a = {
url: i, type: t, dataType: "json", success: n, error: s, data: o, timeout: e, context: this }; $j.ajax(a) }, this.makeAllVisible = function () { this.fallbackCount = this.visibleCount, this.visibleCount = this.totalCount, this.refreshVisibleCount(), this.trigger(document, "bulkMakeVisibleEvent"), this.refreshBulkUpdateControl(), this.bulkUpdateShareState(!0);}, this.makeAllInvisible = function () { this.popUpMakeInvisibleDialog() && (this.fallbackCount = this.visibleCount, this.visibleCount = 0, this.refreshVisibleCount(), this.trigger(document, "bulkMakeInvisibleEvent"), this.refreshBulkUpdateControl(), this.bulkUpdateShareState(!1)) }, this.toggleVisibleHelp = function () { this.select('helpTextForMakeVisible').is(':visible') ? this.select('helpTextForMakeVisible').hide():this.select('helpTextForMakeVisible').show() }, this.bulkUpdateShareState = function (t) { var e = { visible: t }; var o=this.readingNotesEndpoint; var n=null; var s = this.onBulkUpdateShareStateError; this.makeRequest(i, o, e, n, s);}, this.onBulkUpdateShareStateError = function () { var t = "Your reading notes could not be made visible/hidden. Please try again later."; $j('#notificationBanner').trigger('showNotification', { type: "error", message: t }), this.visibleCount = this.fallbackCount, this.refreshVisibleCount(), this.select('mainReadingNotesContainer').load(`${document.URL} #allHighlightsAndNotes > *`);}, this.refreshBulkUpdateControl = function () { 0 === this.totalCount ? (this.select('makeVisibleButton').hide(), this.select('makeInvisibleLink').hide()):this.visibleCount === this.totalCount ? (this.select('makeVisibleButton').hide(), this.select('makeInvisibleLink').show(), this.select('shareStatus').text('Visible')):(this.select('makeInvisibleLink').hide(), this.select('makeVisibleButton').show(), this.select('shareStatus').text('Make visible'));}, this.initializeFreshdeskWidget = function (t) { "undefined" != typeof window.FreshWidget && window.FreshWidget.init('', { queryString: t, utf8: "\u2713", widgetType: "popup", submitThanks: "Thanks so much for your feedback! Feel free to continue using this form to let us know what you like or what could be improved.", buttonType: "text", buttonText: "Feedback", buttonColor: "white", buttonBg: "#00635D", alignment: "2", formHeight: "420px", url: "https://goodreads.freshdesk.com", offset: "550px", loadOnEvent: "immediate"
}) } }, MixinEventUtils, MixinAuthRedirect), $gr.shared.readingNoteMoreMenu = flight.component(function () { this.defaultAttrs({ deleteSelector: ".js-readingNote-moreActions-delete", markAsSpoilerSelector: ".js-readingNote-moreActions-markAsSpoiler", unmarkAsSpoilerSelector: ".js-readingNote-moreActions-unmarkAsSpoiler" }), this.after('initialize', function () { this.on('click', { deleteSelector: this.onDeleteButtonClicked, markAsSpoilerSelector: this.onSpoilerButtonClicked, unmarkAsSpoilerSelector: this.onSpoilerButtonClicked }), this.on('readingNote.SpoilerChangeEvent', this.onSpoilerChange), this.isSpoiler = this.$node.data('is-spoiler'), this.updateSpoilerUI() }), this.onDeleteButtonClicked = function (t) { t.preventDefault(), t.stopPropagation(), this.closeMenu(), this.trigger('readingNote.MoreActions.DeleteEvent');}, this.onSpoilerButtonClicked = function (t) { t.preventDefault(), t.stopPropagation(), this.closeMenu(), this.trigger('readingNote.MoreActions.MarkAsSpoilerEvent', { is_spoiler: !this.isSpoiler });}, this.onSpoilerChange = function (t, e) { t.preventDefault(), t.stopPropagation(), this.isSpoiler = e.is_spoiler, this.updateSpoilerUI();}, this.updateSpoilerUI = function () { this.isSpoiler ? (this.select('markAsSpoilerSelector').hide(), this.select('unmarkAsSpoilerSelector').show()):(this.select('markAsSpoilerSelector').show(), this.select('unmarkAsSpoilerSelector').hide()) }, this.closeMenu = function () { this.$node.blur();};}, dropdownMenu), $gr.shared.readingYear = flight.component(MixinEventUtils, function () { var t = ""; var e=null; var i=""; var o=""; var n=""; var s=1.5; var a = ""; this.readingYearId = null, this.$shareToNewsfeedFeedbackId = null, this.after('initialize', function () { t = this.$node.data('alignby'), i = this.$node.data('coverclass'), o = this.$node.data('doubleclass'), a = this.$node.data('mobile'), this.readingYearId = this.$node.data('readingyearid'), this.$shareToNewsfeedFeedbackId = $j('#'+this.$node.data('sharetonewsfeedfeedbackid')), "px" == t ? e = this.$node.data('maxheight'):'relative'==t && (n = this.$node.data('separatorimageclass')), $j(window).load(this.resizeBookCovers), window.addEventListener('resize', this.resizeBookCovers), $j('.loadMoreButton').on('click', { env: this }, this.loadMoreCovers), $j('#'+this.$node.data('sharetonewsfeedbuttonid')).on('click', { env: this }, this.shareToNewsfeedAction), $j(this.$node.data('fbselector')).on('click', { tag: "fb" }, this.trackClick), $j(this.$node.data('twitterselector')).on('click', { tag: "twitter" }, this.trackClick), $j(this.$node.data('pinterestselector')).on('click', { tag: "pinterest" }, this.trackClick);}), this.resizeBookCovers = function () { r(i, 1), r(o, 2), "relative" == t && r(n, 1);}; var r = function (i, o) { $j(i).each(function () { var i = $j(this).find('img'); if ('px'==t) { var n = e * o - 40 * (o - 1); i.length && i.height() >= n && (i.css('height', n.toString() + "px"), i.css('width', "auto")), i.length && 2 == o && $j(this).find('.staticStars').css('transform', "translateY(-" + ((n - i.height()) / 2).toString() + "px)");} else if ('relative'==t) { var a = 25 * o; $j(this).css('width', a.toString() + "%"); var r = $j(this).width() * s / o; if ($j(this).height(r), i.length) { i.css('height', ""), i.css('width', ""); var l = r * o; var h = i.height(); if (h > l)i.css('height', l.toString() + "px"), i.css('width', "auto"); else { var c = (l - h) / 2; i.css('transform', "translateY(" + c.toString() + "px)"), 2 == o && $j(this).find('.staticStars').css('transform', "translateY(" + c.toString() + "px)");} } } }) }; this.shareToNewsfeedAction = function (t) { var e = t.data.env; 1 != t.currentTarget.disabled && $j.ajax({ url: "/reading_year/add_newsfeed_update", data: { id: e.readingYearId }, method: "post" }).success(() => {t.currentTarget.textContent="Shared",t.currentTarget.disabled=!0,e.$shareToNewsfeedFeedbackId.show(),setTimeout(function(){e.$shareToNewsfeedFeedbackId.hide()},8e3),$j.post("/track/track_click",{feature:"yyib_newsfeed_shares"})}) }, this.loadMoreCovers = function (t) { var e = t.data.env; button_data = $j('.loadMoreButton').data(), $j.get('/year_in_books/covers/show/'+button_data.year + "/" + button_data.userId + "/" + button_data.page, function (t) { t.last_page && $j('.loadMoreButton').hide(), a ? $j('.coverRightCenterMobile').append(t.html):$j('.coverRightCenter').append(t.html), setTimeout(() => {$j(".bookCovers").on("load",e.resizeBookCovers())}, 2e3);}), $j('.loadMoreButton').data('page', button_data.page + 1) }, this.trackClick = function (t) { $j.post('/track/track', { tid: "yyib_" + t.data.tag + "_share" }, null), $j.post('/track/track_click', { feature: "yyib_share_" + t.data.tag }) } }), $gr.shared.relatedWorks = flight.component(function () { this.defaultAttrs({ relatedWorksContainerSelector: ".js-relatedWorksContainer", wtrButtonSelector: ".wtrButtonContainer" }), this.after('initialize', function () { this.on('wtrShelvingCompleted', { wtrButtonSelector: this.uiInsertRelatedWorks }) }), this.uiInsertRelatedWorks = function (t, e) { this.$node.next(this.attr.relatedWorksContainerSelector).removeClass('initiallyHidden').find('td').html(e.html_content), $gr.shared.dismissModuleUI.attachTo('.js-dismissModuleContainer', { dismissButtonSelector: ".js-dismissTrigger" });} }), $gr.shared.reviewAutoSave = flight.component(function () { this.defaultAttrs({ reviewTextArea: ".js-reviewUserText", autoSavePeriod: 1e3 }), this.previousPayload = {}, this.lock = !1; var t; this.after('initialize', function () { t = this, window.onunload = e, $j(t.attr.reviewTextArea).on('keyup.reviewDraft', flight.utils.debounce(e, t.attr.autoSavePeriod)), $j(t.attr.reviewTextArea).on('keyup.reviewDraftHideText', i), $j(t.attr.reviewTextArea).on('blur.reviewDraft', e);}); var e = function () { var e = s(); !t.lock && n(e) && o(e) && (t.lock = !0, $j('#autoSaveError').hide(), $j('#autoSaveReloadedMessage').hide(), $j('#autoSaveConfirmation').hide(), $j('#autoSaveLoading').show(), $j.post('/review/draft', e).always(() => {t.lock=!1,$j("#autoSaveLoading").hide()}).done((i) => {t.previousPayload=e,$j("#autoSaveReloadedMessage").html("Draft from "+i.timestamp),$j("#autoSaveConfirmation").show()}).fail(() => {$j("#autoSaveError").html("The review draft could not be saved."),$j("#autoSaveError").show()}));}; var i=function(){$j("#autoSaveError").hide(),$j("#autoSaveReloadedMessage").hide(),$j("#autoSaveConfirmation").hide(),$j("#autoSaveLoading").hide()}; var o=function(e){return e.review!==t.previousPayload.review}; var n=function(t){for(var e in t)if(t.hasOwnProperty(e)&&(null===t[e]||void 0===t[e]||""===t[e]))return!1;return!0}; var s = function () { var e = null; return $j(t.attr.reviewTextArea).length > 0 && (e = $j(t.attr.reviewTextArea).val()), { book_id: t.attr.bookID, review: e };};}), $gr.shared.reviewDraftDataCollection = flight.component(function () { this.after('initialize', function () { var t = this; this.on('change.reviewDraftDataCollection', function () { $j.post('/track/track', { tid: "track_text_written_in_review_text_box" }).done(() => {t.off("change.reviewDraftDataCollection")});}) });}); var SearchInline = flight.component(function () { var t = "searchInline"; this.defaultAttrs({
channel: t, componentName: t, searchResultsSelector: null, searchFieldSelector: ".field", searchFieldClearSelector: ".clearIcon", distractionSelector: "", searchFieldActiveClass: "active", searchResultsLoadingClass: "loading", searchResultsShowClass: "show", $queryAjaxSettings: null, queryParamName: "q", queryLengthMin: 2, enableCollapseDistractions: !1 }), this.after('initialize', function () { return this.isActive = !1, this.$node.is('input') ? this.$searchField = this.$node:this.$searchField = this.select('searchFieldSelector').first(), this.$searchField.length < 1 || !this.$searchField.is('input') ? this.broadcastError('search field element is required'):(this.on(this.$searchField, "focus", this.activate), this.select('searchFieldClearSelector').on('click', $j.proxy(this.deactivate, this)), this.$searchResultsContainer || (this.$searchResultsContainer = $j(this.attr.searchResultsSelector)), void this.initializeSearchFieldAutocomplete()) }), this.initializeSearchFieldAutocomplete = function () { this.on(this.$searchField, "showMenu.autocomplete", this.showSearchResults), this.on(this.$searchField, "submitQueryStart.autocomplete", function () { this.trigger(this.$searchField, "clearMenu.autocomplete"), this.$searchResultsContainer.addClass(this.attr.searchResultsLoadingClass) }), this.on(this.$searchField, "submitQueryEnd.autocomplete", function () { this.$searchResultsContainer.removeClass(this.attr.searchResultsLoadingClass);}), Autocomplete.attachTo(this.$searchField, {
menuListParentSelector: this.attr.searchResultsSelector, queryLengthMin: this.attr.queryLengthMin, queryParamName: this.attr.queryParamName, $queryAjaxSettings: this.attr.$queryAjaxSettings
});}, this.activate = function () { this.isActive || (this.isActive = !0, this.$node.addClass(this.attr.searchFieldActiveClass), this.toggleDistractionlessMode(!0), this.showSearchResults(), this.trigger(document, "hideBrowserAddressBar"));}, this.deactivate = function () { this.isActive && (this.isActive = !1, this.$node.removeClass(this.attr.searchFieldActiveClass), this.hideSearchResults(), this.toggleDistractionlessMode(!1), this.resetSearchResults()) }, this.hideSearchResults = function () { this.$searchResultsContainer.removeClass(this.attr.searchResultsShowClass);}, this.resetSearchResults = function () { this.trigger(this.$searchField, "reset.autocomplete");}, this.showSearchResults = function () { this.isActive && this.$searchResultsContainer.addClass(this.attr.searchResultsShowClass);}, this.toggleDistractionlessMode = function (t) { var e = $j(this.attr.distractionSelector); this.attr.enableCollapseDistractions === !0 ? e[t ? "hide":'show']():e.css('visibility', t ? "hidden":'') } }, MixinEventUtils); var ShareBookButton = flight.component(function () { this.after('initialize', function () { this.on($gr.touch, function () { alert('Sharing is caring.');}) });}); $gr.communityQA.shareToggle = flight.component(function () { var t = "shareToggleComponent"; this.defaultAttrs({ channel: t, componentName: t, selectedClass: "selected" }), this.after('initialize', function () { this.$parent = this.$node.parent(), this.on('click', this.toggleShareOption);}), this.toggleShareOption = function () { var t = this; var e = function () { t.uiToggle(), t.dataToggle();}; "twitter" === this.$node.data('share-service') ? "connected" === this.$node.data('service-connected') ? e():GR_Twitter.askToConnect(() => {t.$node.data("service-connected","connected"),e()}):e();}, this.uiToggle = function () { this.$parent.toggleClass(this.attr.selectedClass);}, this.dataToggle = function () { var t = this.$node.closest('form'); var e=this.$node.data("share-service"); var i = "share-service-" + e; this.$parent.hasClass(this.attr.selectedClass) ? $j('<input>').attr({ type: "hidden", name: i, value: !0 }).appendTo(t):$j(`input[name="${i}"]`).remove() };}, withTooltips); var SiteBanner = flight.component(function () { var t = "siteBanner"; this.defaultAttrs({ rootSelector: "#siteBanner", closeSelector: ".closeIcon", showClass: "show", channel: t
}), this.after('initialize', function () { this.listen('requestHide', this.onRequestHide), this.listen('requestShow', this.onRequestShow), this.$rootNode = $j(this.attr.rootSelector).first(), this.on(this.$rootNode.find(this.attr.closeSelector), "click", this.hide), this.listen('addClass', function (t, e) { this.$rootNode.addClass(e) });}), this.hide = function () { this.isVisible() && (this.broadcast('beforeHide'), this.$rootNode.removeClass(this.attr.showClass), this.broadcast('afterHide')) }, this.isVisible = function () { return this.$rootNode.hasClass(this.attr.showClass) }, this.show = function () { this.isVisible() || (this.broadcast('beforeShow'), this.$rootNode.addClass(this.attr.showClass), this.broadcast('afterShow')) }, this.onRequestHide = function (t) { this.isVisible() ? this.hide():this.broadcast('afterHide');}, this.onRequestShow = function (t) { this.isVisible() ? this.broadcast('afterShow'):this.show();};}, MixinEventUtils); var SiteSearch=flight.component(function(){var t="siteSearch";this.defaultAttrs({channel:t,componentName:t,searchButtonSelector:"#siteSearchButton",searchFieldClearSelector:".clearIcon",searchFieldSelector:".field",searchFormSelector:".searchForm",searchResultsSelector:".searchResults",buttonSelectedClass:"selected",searchFormActiveClass:"active",clearIconShowClass:"show",searchPanelShowClass:"show",searchResultsShowClass:"show",autocomplete:!0,sticky:!1,queryDebounceDuration:500}),this.after("initialize",function(){this.isActive=!1,this.$searchButton||(this.$searchButton=$j(this.attr.searchButtonSelector)),this.$searchField||(this.$searchField=this.select("searchFieldSelector")),this.$searchForm||(this.$searchForm=this.select("searchFormSelector")),this.$searchResultsContainer||(this.$searchResultsContainer=this.select("searchResultsSelector")),this.$searchFieldClear||(this.$searchFieldClear=this.select("searchFieldClearSelector")),this.on(this.$searchButton,"click",this.toggleSearchPanel),this.attr.autocomplete===!0&&this.initializeSearchFieldAutocomplete(),this.on(this.$searchField,"focus",this.activate),this.on(this.$searchFieldClear,"click",this.deactivate),this.attr.sticky===!1&&(this.on(document,"click",function(){this.isSearchPanelVisible()&&this.hideSearchPanel()}),this.on("click",function(t){t.stopPropagation()})),this.on(this.$searchField,"keyup input",this.onKeystroke),this.listen("showSearch",this.showSearchPanel)}),this.initializeSearchFieldAutocomplete=function(){this.on(this.$searchField,"showMenu.autocomplete",this.showSearchResults),this.after("hideSearchPanel",function(t){this.trigger(this.$searchField,"reset.autocomplete")}),Autocomplete.attachTo(this.$searchField,{menuListParentSelector:this.attr.searchResultsSelector,queryParamName:"q",$queryAjaxSettings:{type:"POST",url:"/book/auto_complete",data:{book_origin:"header_search"}}})},this.activate=function(){this.isActive||(this.isActive=!0,this.$searchForm.addClass(this.attr.searchFormActiveClass),this.setSearchFieldClearState(),this.trigger(document,"hideBrowserAddressBar"))},this.deactivate=function(){this.isActive&&(this.isActive=!1,this.$searchField.val(""),this.setSearchFieldClearState(),this.resetSearchResults(),this.$searchField.focus())},this.hideSearchPanel=function(){this.hideSearchResults(),this.$node.removeClass(this.attr.searchPanelShowClass),this.$searchButton.removeClass(this.attr.buttonSelectedClass),this.broadcast("hide")},this.hideSearchResults=function(){this.$searchResultsContainer.removeClass(this.attr.searchResultsShowClass)},this.isSearchPanelVisible=function(){return this.$node.hasClass(this.attr.searchPanelShowClass)},this.onKeystroke=function(t){this.setSearchFieldClearState()},this.setSearchFieldClearState=function(){""===this.$searchField.val()?this.$searchFieldClear.removeClass(this.attr.clearIconShowClass):this.$searchFieldClear.addClass(this.attr.clearIconShowClass)},this.resetSearchResults=function(){this.trigger(this.$searchField,"reset.autocomplete")},this.showSearchPanel=function(){this.$searchButton.addClass(this.attr.buttonSelectedClass),this.trigger(document,"hideBrowserAddressBar",!0),this.defer(function(){this.$node.addClass(this.attr.searchPanelShowClass),this.broadcast("show")})},this.showSearchResults=function(){this.isSearchPanelVisible()&&this.$searchResultsContainer.addClass(this.attr.searchResultsShowClass)},this.toggleSearchPanel=function(t,e){t&&t.preventDefault();var i="boolean"==typeof e?e:!this.isSearchPanelVisible();i?this.showSearchPanel():this.hideSearchPanel()}},MixinEventUtils); var SortMenu=flight.component(function(){var t="sortMenu";this.defaultAttrs({activeClass:"selected",buttonSelector:".js-sortMenu__button",menuSelector:".js-sortMenu__menu",slideUpListItemAllowDefaultAction:!0,channel:t,componentName:t}),this.after("initialize",function(){this.on(this.attr.buttonSelector,"click",function(t){this.$node.hasClass(this.attr.activeClass)?this.$node.removeClass(this.attr.activeClass):this.$node.addClass(this.attr.activeClass),this.toggleSlideUpMenuVisibility(t)})})},withSlideUpMenu); var Spoilers=flight.component(function(){var t="spoilers";this.defaultAttrs({channel:t,componentName:t,showSpoilerSelector:".jsShowSpoiler",hideSpoilerSelector:".jsHideSpoiler",spoilerContainerSelector:".spoilerContainer"}),this.after("initialize",function(){this.on($gr.touch,{showSpoilerSelector:this.onShowSpoiler,hideSpoilerSelector:this.onHideSpoiler})}),this.onHideSpoiler=function(t){var e=$j(t.target);t.preventDefault(),e.parent().siblings(this.attr.showSpoilerSelector).show(),e.parent(this.attr.spoilerContainerSelector).hide()},this.onShowSpoiler=function(t){var e=$j(t.target);t.preventDefault(),e.siblings(this.attr.spoilerContainerSelector).show(),e.hide()}}); var TabCluster = flight.component(function () {
var t; var e="tab-id"; var i = "tabCluster"; this.defaultAttrs({
channel: i, componentName: i, sectionRoot: null, sectionSelector: ".tabSection", tabSelector: ".tab", hideSectionClass: "hide", tabSelectedClass: "selected", tabLinkAttrName: e, sectionLinkAttrName: e }), this.after('initialize', function () { t = $j(this.attr.sectionRoot), t.length < 1 || (this.attr.defaultTabSelected = $j(this.attr.defaultTabSelected).first(), this.attr.defaultTabSelected.length < 1 && (this.attr.defaultTabSelected = this.select('tabSelector').filter('.'+this.attr.tabSelectedClass).first()), this.on('click', { tabSelector: this.onTabSelect }), this.listen('requestReset', this.reset));}), this.isTabSelected = function (t) { return t.hasClass(this.attr.tabSelectedClass) }, this.reset = function () { var t = this.attr.defaultTabSelected; var e = t.data(this.attr.tabLinkAttrName); this.switchTab(e), this.broadcast('reset');}, this.switchTab = function (e) {
t.find(this.attr.sectionSelector).each($.proxy(function (t, i) {
var o = $(i); o.toggleClass(this.attr.hideSectionClass, o.data(this.attr.sectionLinkAttrName) !== e);
}, this)), this.select('tabSelector').each($.proxy(function (t, i) { var o = $(i); o.toggleClass(this.attr.tabSelectedClass, o.data(this.attr.tabLinkAttrName) === e) }, this)), this.broadcast('switch') }, this.onTabSelect = function (t) { t.preventDefault(); var e = $j(t.target).closest(this.attr.tabSelector); var i = e.data(this.attr.tabLinkAttrName); "string"!==typeof i || this.isTabSelected(e) || this.switchTab(i) };}, MixinEventUtils); $gr.shared.toggleQaForm = flight.component(function () { this.defaultAttrs({ answerFormSelector: ".answerForm", answerActionSelector: ".answerQuestionAction", unansweredQuestionSelector: ".unansweredQuestion" }), this.after('initialize', function () { this.on('click', { answerActionSelector: this.uiShowForm }) }), this.uiShowForm = function (t) { var e = $j(t.target); t.preventDefault(), $j.ajax({
url: e.data('get-form-url'), type: "get", data: { format: "json" }, context: this, success: function (t) { e.parents(this.attr.unansweredQuestionSelector).find(this.attr.answerFormSelector).html(t.content_html), $gr.communityQA.readerQAForm.attachTo('.js-readerQAForm'), $gr.shared.notification.attachTo('.js-notification'), $gr.communityQA.shareToggle.attachTo('.js-shareToggle');}
}) } }, MixinEventUtils), $gr.shared.tooltip = flight.component(function () { this.defaultAttrs({ tooltipCaretSelector: ".tooltipCaret", tooltipSelector: ".js-tooltip", defaultTooltipClass: "tooltipDefault", htmlRetrievedEvent: "tooltipHtmlRetrieved.dataTooltip"
}), this.after('initialize', function () { this.tooltipHtml = null, this.$node.data('synchronous') ? this.$node.data('click') ? (this.$node.click($j.proxy(this.showTooltip, this)), $j(document).click($j.proxy(function (t) { this.$node.is(t.target) || 0 !== this.$node.has(t.target).length || this.hideTooltip() }, this)), this.$node.find('.hideTooltip').click($j.proxy(this.hideTooltip, this))):this.$node.hover($j.proxy(this.showTooltipOnHover, this), $j.proxy(this.hideTooltipOnHover, this)):this.listen(this.attr.htmlRetrievedEvent, this.attachTooltipHoverEvents);}), this.attachTooltipHoverEvents = function (t, e) { var i = this.$node.data('resource-type') + "." + this.$node.data('resource-id'); null === this.tooltipHtml && "undefined" != typeof e.tooltips[i] && (this.$node.find('a, img').removeAttr('title'), this.$node.removeAttr('title'), this.tooltipHtml = e.tooltips[i], this.$node.hover($j.proxy(this.showTooltipOnHover, this), $j.proxy(this.hideTooltipOnHover, this))) }, this.showTooltipOnHover = function () { HoverIntent.onEnterIntent(this, this.showTooltip, this, 750);}, this.showTooltip = function () { var t = this.select('tooltipSelector'); t.length ? t.show():this.constructTooltip() }, this.hideTooltipOnHover = function () { HoverIntent.onLeaveIntent(this, this.hideTooltip);}, this.hideTooltip = function (t) { this.select('tooltipSelector').hide(), void 0 !== t && t.stopPropagation() }, this.constructTooltip = function () { this.$node.append(this.tooltipHtml); var t = 10; var e = this.select('tooltipSelector'); if ('bottom'===this.$node.data('placement')) { e.find(this.attr.tooltipCaretSelector).addClass('tooltipCaret--top'); var i = (this.$node.height() + t).toString(); e.css('left', "0px"), e.css('top', i + "px") } else if ('bottom-left'===this.$node.data('placement')) { e.find(this.attr.tooltipCaretSelector).addClass('tooltipCaret--top-right'); var o = (this.$node.height() + t).toString(); var n = (this.$node.width() - 3 * t).toString(); e.css('right', n + "px"), e.css('top', o + "px");} else if ('left'===this.$node.data('placement')) { e.find(this.attr.tooltipCaretSelector).addClass('tooltipCaret--right'); var s = (this.$node.width() + t).toString(); e.css('right', s + "px"), e.css('top', "0px");} else { e.find(this.attr.tooltipCaretSelector).addClass('tooltipCaret--left'); var a = (this.$node.width() + t).toString(); e.css('left', a + "px"), e.css('top', "0px");} this.broadcast('tooltipHtmlConstructed') } }, MixinEventUtils), /*
Component Name:
  trackClick

Description:
  Flight component for tracking clicks on mobile web components. Posts to
  'track/track_click' with feature. Attached to '.js-trackClick'

Requires:
  - jQuery
  - flight

Expects:
  - a $node with data: { feature }

Example Usage (haml):
 button.js-trackClick{ data: { feature: "CustomNewsfeedMobile_headline" } }
    Click me to post!
*/
$gr.shared.trackClick = flight.component(function () { this.onClick = function () { var t = this.$node.data('feature'); t && $j.post('/track/track_click', { feature: t });}, this.after('initialize', function () { this.on('click', this.onClick) });}), $gr.shared.twitterCallbacks = flight.component(function () { var t = "twitterCallbacksComponent"; this.defaultAttrs({ channel: t, componentName: t }), this.after('initialize', function () { twttr.ready((t) => {t.events.bind("tweet",e)});}); var e = function (t) { var e = "twitter_update_pushed"; var i = $j('#tracker').data('track-tweet'); "undefined"===typeof i && (i = $j(t.target.parentElement).data('gr-tracker-id')), i && "undefined"!==typeof i && (e = [e, i]), $j.ajax({ url: "/track/track", type: "GET", data: { tid: e } });};}), $gr.shared.twitterDialog = flight.component(function () { this.defaultAttrs({ counterSelector: ".characterCounter", textareaSelector: ".characterCountArea", tweetViaGrSelector: ".tweetViaGr", shareButtonSelector: ".button", warningClass: "warning", keystrokeDebounceDuration: 100, maxUrlLengthAfterShortening: 23, tweetMaxLength: 140 }), this.after('initialize', function () { var t = this.select('textareaSelector'); this.tweetUrlLength = t.data('append-url') ? this.attr.maxUrlLengthAfterShortening:0, this.tweetViaLength = "true" === this.select('tweetViaGrSelector').val() ? " via @goodreads".length:0, this.on('keyup', flight.utils.debounce(this.uiUpdateCounter, this.attr.keystrokeDebounceDuration)), this.uiUpdateCounter();}), this.uiUpdateCounter = function () { var t = this.getNumCharsRemaining(); var e = this.select('counterSelector'); 0 > t ? (e.addClass(this.attr.warningClass), this.uiEnableButton(!1)):(e.removeClass(this.attr.warningClass), this.uiEnableButton(!0)), 0 === this.select('textareaSelector').val().length && this.uiEnableButton(!1), e.html(`${t} characters left`);}, this.uiEnableButton = function (t) { this.select('shareButtonSelector').prop('disabled', !t);}, this.getNumCharsRemaining = function () { var t = this.select('textareaSelector').val(); var e = t.replace(/[\s]?(https?:\/\/[^\s]+)/g, "").replace(' via @goodreads', "").length; return this.attr.tweetMaxLength - e - this.tweetUrlLength - 1 - this.tweetViaLength;} }), $gr.shared.updateFiltersForm = flight.component(function () { this.defaultAttrs({
updateFiltersFormSelector: ".js-updateFiltersForm", updateTypeFiltersSelector: ".js-updateTypeFilters", updateItemSelector: "input[name=update_item]:checked", updateScopeSelector: "input[name=update_scope]:checked", authorBlogPostsSelector: "input[name=author_blog_posts][type=checkbox]", authorBlogPostsHiddenSelector: "input[name=author_blog_posts][type=hidden]", hpUpdateFilterSelector: "#hp_update_filter" }), this.after('initialize', function () { this.on('submit', this.handleSubmit);}), this.handleSubmit = function (t) { this.setUpdateFilterType(), this.setAuthorBlogPostsFlag(), this.broadcast('dataFiltersUpdated'), this.broadcast('dataUpdatesLoading');}, this.setUpdateFilterType = function () { var t = this.select('updateScopeSelector').val(); t.blank() && (t = "friends"); var e = this.select('updateItemSelector').val(); var i = t; e.blank() || (i = i + "-" + e), this.select('hpUpdateFilterSelector').val(i) }, this.setAuthorBlogPostsFlag = function () { this.select('authorBlogPostsSelector').prop('checked') ? this.select('authorBlogPostsHiddenSelector').val('1'):this.select('authorBlogPostsHiddenSelector').val('0') };}, MixinEventUtils, withFormSubmission), $gr.shared.videoInline = flight.component(function () { this.defaultAttrs({ height: 315, width: 560 }), this.after('initialize', function () { this.on('.js-videoInline > a', "click", this.playVideo);}), this.playVideo = function (t) { var e = this.$node.data(); var i=e.height||this.attr.height; var o = e.width || this.attr.width; if ('youtube'==e.source) { var n = $j('<iframe>'); n.attr({ width: o, height: i, src: "//www.youtube.com/embed/" + e.sourceId + "?autoplay=1", frameborder: 0, allowfullscreen: "" }), this.$node.html(n), $j.post('/videos/update_views/'+e.goodreadsId), e.userChallengeId && $j.post('/user_challenges/watched_video', { id: e.userChallengeId }), t.preventDefault();} } }); var ViewportOverlay = flight.component(function () { var t; var e=$gr&&$gr.touch?$gr.touch:"click"; var i="viewportOverlay"; var o="overlayId"; var n="overlay-scroll-lock"; var s = {}; this.defaultAttrs({
channel: i, componentName: i, showClass: "show", disableDirectHide: !1
}), this.after('initialize', function () { t || (t = $j('<div/>').addClass(i)), this.listen('show', this.onShow), this.listen('hide', this.onHide), this.listen('create', this.onCreate), this.listen('afterShow', function (t, e) { this.toggleOverlayScrollSuppression(e.overlayId, !0);}), this.listen('beforeHide', function (t, e) { this.toggleOverlayScrollSuppression(e.overlayId, !1);}) }), this.hide = function (t) { var e = this.getOverlayById(t); e && (this.broadcast('beforeHide', { overlayId: t }), e.removeClass(this.attr.showClass), this.broadcast('afterHide', { overlayId: t }));}, this.show = function (t) { var e = this.getOverlayById(t); e && (this.broadcast('beforeShow', { overlayId: t }), e.addClass(this.attr.showClass), this.broadcast('afterShow', { overlayId: t }));}, this.onCreate = function (t, e) { if (e && e[o]) { var i = e[o]; i ? this.getOverlayById(i) ? this.broadcastError('overlay already exists for id: '+i):this.createOverlay(i, e.attr || null):this.broadcastError('could not create overlay, no id specified');} }, this.onHide = function (t, e) { e && e[o] && this.hide(e[o]) }, this.onShow = function (t, e) { e && e[o] && this.show(e[o]);}, this.createOverlay = function (i, o) { var a = o || {}; var r = t.clone(); r.attr('id', i), "string"===typeof a.className && r.addClass(a.className), a.disableDirectHide || r.on(e, $j.proxy(function (t) { t.preventDefault(), this.hide() }, this)), a.disableScrollLock || r.data(n, !0), r.appendTo(document.body), s[i] = r }, this.getOverlayById = function (t) { return s[t] || null;}, this.toggleOverlayScrollSuppression = function (t, e) { var i = this.getOverlayById(t); i && i.data(n) && this.trigger(document, e ? "enableScrollLock":'disableScrollLock') };}, MixinEventUtils); var ViewportServices=flight.component(function(){var t="viewportServices";this.defaultAttrs({channel:t}),this.after("initialize",function(){return Modernizr.touchevents?(this.initializeScrollLockMode(),this.on("hideBrowserAddressBar",function(t,e){var i=e===!0;if(i&&/\bAndroid\s+2\.(2|3)/.test(navigator.userAgent))window.scrollTo(0,0);else{var o=i?0:window.scrollY;window.scrollTo(0,o+1),setTimeout(function(){window.scrollTo(0,o-1)},0)}}),void this.on("hideSmartAppBanner",function(){var t=$j(window).innerHeight()-window.innerHeight;t>0&&window.scrollTo(0,t)})):this.teardown()}),/**
   *  Initialize "scroll lock mode" service.
   *  This mode, when enabled, temporarily prevents user scrolling within the
   *  browser viewport. This can be useful for overlays that cover a portion or
   *  all of the browser viewport, in which case viewport scrolling can be
   *  detrimental to the UX.
   *  Note: USE WITH EXTREME CAUTION!
   *  @method initializeScrollLockMode
   */
this.initializeScrollLockMode=function(){this.on(document,"enableScrollLock",this.onEnableScrollLock),this.on(document,"disableScrollLock",this.onDisableScrollLock)},this.onDisableScrollLock=function(){this.toggleScrollLockMode(!1)},this.onEnableScrollLock=function(t,e){this.toggleScrollLockMode(!0,e)},this.toggleScrollLockMode=function(t,e){var i,o={};"string"==typeof e?(e=e.toLowerCase(),"x"===e?o={drag_block_horizontal:!0}:"y"===e&&(o={drag_block_vertical:!0}),i=$j.noop):i=function(t){t.preventDefault()};var n=$j(document.body).hammer(o),s=this.getSafeEventName("touchmove");t===!0?n.on(s,i):n.off(s)}},MixinEventUtils); var WantToReadButton=flight.component(function(){var t="wtrButton",e=/^\s*$/,i=/review\/destroy/;this.defaultAttrs({buttonSelector:".jsWTR",buttonActiveSelector:".jsWTR.wtrSelected",buttonInactiveSelector:".jsWTR:not(.wtrSelected)",menuCatalystSelector:".areaSecondary",buttonLoadingClass:"wtrLoading",buttonSelectedClass:"wtrSelected",dataAttrParamShelf:"async-param-shelf",dataAttrUrlAdd:"async-url-add",dataAttrUrlDelete:"async-url-delete",dataAttrUrlMore:"url-more",dataAttrCurrentShelf:"current-shelf",dataAttrReftag:"ref",eventAttrAction:"actionType",eventAttrButtonId:"buttonId",eventAttrIsBookShelved:"isBookShelved",eventAttrShelfName:"shelfName",eventAttrSeeMoreUrl:"moreUrl",eventAttrReftag:"ref",channel:t,componentName:t}),this.after("initialize",function(){var t=[this.attr.buttonInactiveSelector+" "+this.attr.menuCatalystSelector,this.attr.buttonActiveSelector].join(",");this.$node.on("click",t,$j.proxy(function(t){var e=$j(t.target).closest(this.attr.buttonSelector);this.requestMenuShow(e)},this)),this.on(document,"listItemSelected.wtrButtonMenu",this.onMenuItemSelected),this.listen("saveRatingSuccess.ratingStars",this.onRateSuccess),this.listen("saveSuccess.ratingComponent",function(t,e){e.response&&this.onRateSuccess(t,e.response)}),
// dynamic! It's a Rails async form/link. We need to listen at the
this.$node.on("ajax:success",this.attr.buttonSelector,$j.proxy(function(t,e){this.onSaveSuccess(e)},this)),this.$node.on("ajax:error",this.attr.buttonSelector,$j.proxy(function(t,e){var i=$j(t.target).closest(this.attr.buttonSelector);this.toggleButtonLoadingState(i,!1),this.onSaveError(e)},this)),this.$node.on("ajax:beforeSend",this.attr.buttonSelector,$j.proxy(function(t){var e=$j(t.target).closest(this.attr.buttonSelector);this.trigger(document,"shelving.wtrButtonMenu",this.createEventPayload(e)),this.toggleButtonLoadingState(e,!0)},this))}),this.requestMenuShow=function(t){t.length&&this.trigger(document,"requestShow.wtrButtonMenu",this.createEventPayload(t))},this.toggleButtonLoadingState=function(t,e){t&&t.length&&t.toggleClass(this.attr.buttonLoadingClass,e)},this.addToShelf=function(t,i){if(t&&t.length){var o=t.data(this.attr.dataAttrUrlAdd);if(o&&!e.test(o)){this.trigger(document,"shelving.wtrButtonMenu",this.createEventPayload(t));var n={},s=t.data(this.attr.dataAttrParamShelf);n[s]=i[this.attr.eventAttrShelfName];var a={ref:i[this.attr.eventAttrReftag]};this.save(this.addUrlParams(o,n),t,a)}}},this.removeFromShelves=function(t,i){var o=t.data(this.attr.dataAttrUrlDelete);if(o&&!e.test(o)){var n=i[this.attr.eventAttrReftag],s={ref:n.replace(/_wtres/,"_wtruns")};this.save(o,t,s)}},this.save=function(t,o,n){t&&!e.test(t)&&(this.toggleButtonLoadingState(o,!0),$j.ajax({url:t,type:"post",dataType:"json",context:this,timeout:15e3,error:this.onSaveError,data:n,success:function(e){i.test(t)&&this.broadcast("removedFromShelves",{buttonId:this.getButtonId(o)}),this.onSaveSuccess(e)},complete:function(){this.toggleButtonLoadingState(o,!1)}}))},this.onMenuItemSelected=function(t,e){var i=this.attr.eventAttrButtonId;if($j.isPlainObject(e)&&e[i]){var o=$j("#"+e[i]);if(o.length){var n=e[this.attr.eventAttrAction];switch(n){case"add":this.addToShelf(o,e);break;case"delete":this.removeFromShelves(o,e);break;default:this.broadcastError("unknown action '"+n+"'")}}}},this.onSaveError=function(t){this.defer(function(){this.authRedirect(t,$j.proxy(function(){var e="Unknown XHR failure when trying to save book to shelf.";t.status&&(e+=" , status code "+t.status),this.broadcastError(e)},this))},500)},this.onRateSuccess=function(t,e){this.updateWtrButtonUI(e)},this.updateWtrButtonUI=function(t){var e=$j(t.html);"true"==$j("#reg_path").val()&&e.find(".areaSecondary").hide();var i=this.getButtonId(e),o=$j("#"+i);e.length&&o.length&&o.replaceWith(e)},this.onSaveSuccess=function(t){var i=!1;if($j.isPlainObject(t))if(t.ok&&"string"==typeof t.html&&!e.test(t.html))this.updateWtrButtonUI(t);else{i=!0;var o=t.error||"unknown error when attempting to save";this.broadcastError(o)}else this.broadcastError("malformed JSON response when trying to save book to shelf");i&&$j("#flashMessages").trigger("addFlashMessage",["Your change has not been saved. Please refresh the page any try again.","error"])},this.addUrlParams=function(t,i){if(!t||e.test(t))this.broadcastError("baseUrl is null or empty",!0);else if($j.isPlainObject(i)){var o=$j.param(i);if(!e.test(o)){var n=t.indexOf("?")<0?"?":"&";return t+n+o}}else this.broadcastError("paramPairs is not an object",!0)},this.createEventPayload=function(t){if(t.length){var e={};return e[this.attr.eventAttrButtonId]=this.getButtonId(t),e[this.attr.eventAttrSeeMoreUrl]=t.data(this.attr.dataAttrUrlMore),e[this.attr.eventAttrIsBookShelved]=t.hasClass(this.attr.buttonSelectedClass),e[this.attr.eventAttrShelfName]=t.data(this.attr.dataAttrCurrentShelf),e[this.attr.eventAttrReftag]=t.data(this.attr.dataAttrReftag),e}},this.getButtonId=function(t){return t&&t.length?t.first().attr("id"):void 0}},MixinEventUtils,MixinAuthRedirect); var WantToReadButtonMenu = flight.component(function () { var t = "wtrButtonMenu"; var e = /^\s*$/; this.defaultAttrs({
menuSelector: "#wtrButtonMenu", moreSelector: ".more", showDeleteOptionClass: "showDeleteOption", dataAttrActionType: "action", dataAttrShelfName: "shelf", dataAttrReftag: "ref", dataAttrDeleteAction: "delete", channel: t, componentName: t
}), this.after('initialize', function () { this.listen('requestShow', this.onRequestMenuShow), this.onSlideUpEvent('afterHide', this.onHideMenu), this.onSlideUpEvent('listItemSelected', this.onMenuItemSelected), this.on('click', { moreSelector: function (t) { t.preventDefault(); var e = $j(t.target).attr('href'); this.hideSlideUpMenu(), this.defer(() => {location.href=e});} }) }), this.onHideMenu = function (t) { this.manageShelfVisualSelection(), this.updateMoreLink();}, this.onMenuItemSelected = function (t, e) { var i = $j(e).first(); i.length && i.data(this.attr.dataAttrActionType) && (i.data(this.attr.dataAttrActionType) === this.attr.dataAttrDeleteAction ? this.onDeleteRequest(i):this.broadcastSelection(i)), this.hideSlideUpMenu() }, this.broadcastSelection = function (t) { this.broadcast('listItemSelected', {
buttonId: this.getButtonId(), actionType: t.data(this.attr.dataAttrActionType), shelfName: t.data(this.attr.dataAttrShelfName), ref: t.data(this.attr.dataAttrReftag) });}, this.onDeleteRequest = function (t) { this.trigger(document, "requestShow.mobileConfirmationMenu"), this.on(document, "listItemSelected.mobileConfirmationMenu", $j.proxy(function (e, i) { if ($j.isPlainObject(i)) { switch (i.action) { case this.attr.dataAttrDeleteAction: this.broadcastSelection(t); break; default: this.onRequestMenuShow({}, this.getShowMenuData());} this.off(document, "listItemSelected.mobileConfirmationMenu");} }, this)) }, this.onRequestMenuShow = function (t, i) { var o; $j.isPlainObject(i) && i.buttonId ? o = i.buttonId:'string'==typeof i && (o = i), o && !e.test(o) ? (this.setShowMenuData(i), this.manageShelfVisualSelection(i.shelfName), this.updateMoreLink(i.moreUrl), $j(this.attr.menuSelector).toggleClass(this.attr.showDeleteOptionClass, i.isBookShelved), this.updateReftags(i.ref), this.showSlideUpMenu()):this.broadcastError('cannot show, no button id specified');}, this.getShowMenuData = function () { return this.showMenuData || {} }, this.setShowMenuData = function (t) { this.showMenuData = t || {} }, this.clearButtonId = function () { this.setButtonId(null) }, this.getButtonId = function () { return this.getShowMenuData().buttonId;}, this.manageShelfVisualSelection = function (t) { var e = this.getListItems(); if (e && e.length) { var i = '[data-shelf="' + t + '"]'; e.each($j.proxy(function (t, e) { var o = $j(e); o.toggleClass(this.attr.slideUpItemSelectedClass, o.is(i)) }, this));} }, this.setButtonId = function (t) { this.getShowMenuData().buttonId = t }, this.updateMoreLink = function (t) { var i = "#"; ('string'!=typeof t || e.test(t)) && (t = i), this.select('moreSelector').attr('href', t).css('visibility', t === i ? "":'visible');}, this.updateReftags = function (t) { this.getListItems().each((e,i) => {var o=$j(i);o.attr("data-ref",t+"_wtres")}) } }, MixinEventUtils, withSlideUpMenu); $gr.shared.yearInBooksUserBlurb = flight.component(MixinEventUtils, function () { const t = 500; this.after('initialize', function () { function e(t) { return function () { $j.get('/year_in_books/blurb/show/'+s + "/" + a, function (e) { var i = e.inputText; var o = e.filteredText; "" != i && ($j('#yearInBooksUserBlurbId').text(i), $j(document).trigger('yearInBooksUserBlurb:change', { filteredText: o, isFullTextShown: t }), document.getElementById('toggleUserBlurb').style.cursor = "pointer");});} } function i(t, e) { var i = e; return function () { i = !i, $j('#yearInBooksUserBlurbTextId').html(o(t, i)), $j('#toggleUserBlurb').html(i ? "<a>(less)</a>":'<a>...more</a>');};} function o(t, e) { return e ? $j.parseHTML(t):$j.parseHTML(n(t)) } function n(e) { return e.length > t ? e.slice(0, t) + " ":e } var s = this.$node.data('year'); var a=this.$node.data("user-id"); var r = !1; e(r)(), $j(document).on('yearInBooksUserBlurb:change', function (e, n) { var s = n.inputText; var a = n.filteredText; r = n.isFullTextShown, $j('#toggleUserBlurb').remove(), a.length > t && ($j('.yearInBooksUserBlurbInputWidget').append(r ? "<span id='toggleUserBlurb'> <a>(less)</a> </span>":"<span id='toggleUserBlurb'> <a>...more</a> </span>"), $j('#toggleUserBlurb').on('click', i(a, r))), $j('#yearInBooksUserBlurbId').text(s), $j('#yearInBooksUserBlurbTextId').html(o(a, r));}), $j('#year_in_books_user_blurb_submit').on('click', function () { var t = $j('#yearInBooksUserBlurbId').val(); r = !0, $j.post('/year_in_books/blurb/update/'+s + "/" + a, { input_text: t, year: s }, e(r)) });});});
