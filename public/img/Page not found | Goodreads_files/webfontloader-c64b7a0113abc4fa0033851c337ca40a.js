!(function () {
  function e(e, t, n) { return e.call.apply(e.bind, arguments); } function t(e, t, n) { if (!e) throw Error(); if (arguments.length > 2) { const i = Array.prototype.slice.call(arguments, 2); return function () { const n = Array.prototype.slice.call(arguments); return Array.prototype.unshift.apply(n, i), e.apply(t, n); }; } return function () { return e.apply(t, arguments); }; } function n(i, o, r) { return n = Function.prototype.bind && Function.prototype.bind.toString().indexOf('native code') != -1 ? e : t, n.apply(null, arguments); } function i(e, t) { this.a = e, this.m = t || e, this.c = this.m.document; } function o(e, t, n, i) { if (t = e.c.createElement(t), n) for (const o in n)n.hasOwnProperty(o) && (o == 'style' ? t.style.cssText = n[o] : t.setAttribute(o, n[o])); return i && t.appendChild(e.c.createTextNode(i)), t; } function r(e, t, n) { e = e.c.getElementsByTagName(t)[0], e || (e = document.documentElement), e.insertBefore(n, e.lastChild); } function s(e) { e.parentNode && e.parentNode.removeChild(e); } function a(e, t, n) { t = t || [], n = n || []; for (var i = e.className.split(/\s+/), o = 0; o < t.length; o += 1) { for (var r = !1, s = 0; s < i.length; s += 1) if (t[o] === i[s]) { r = !0; break; }r || i.push(t[o]); } for (t = [], o = 0; o < i.length; o += 1) { for (r = !1, s = 0; s < n.length; s += 1) if (i[o] === n[s]) { r = !0; break; }r || t.push(i[o]); }e.className = t.join(' ').replace(/\s+/g, ' ').replace(/^\s+|\s+$/, ''); } function l(e, t) { for (let n = e.className.split(/\s+/), i = 0, o = n.length; o > i; i++) if (n[i] == t) return !0; return !1; } function c(e) { if (typeof e.f === 'string') return e.f; let t = e.m.location.protocol; return t == 'about:' && (t = e.a.location.protocol), t == 'https:' ? 'https:' : 'http:'; } function u(e) { return e.m.location.hostname || e.a.location.hostname; } function d(e, t, n) { function i() { c && s && a && (c(l), c = null); }t = o(e, 'link', { rel: 'stylesheet', href: t, media: 'all' }); var s = !1; var a = !0; var l = null; var c = n || null; ie ? (t.onload = function () { s = !0, i(); }, t.onerror = function () { s = !0, l = Error('Stylesheet failed to load'), i(); }) : setTimeout(() => { s = !0, i(); }, 0), r(e, 'head', t); } function h(e, t, n, i) { const r = e.c.getElementsByTagName('head')[0]; if (r) { const s = o(e, 'script', { src: t }); let a = !1; return s.onload = s.onreadystatechange = function () { a || this.readyState && this.readyState != 'loaded' && this.readyState != 'complete' || (a = !0, n && n(null), s.onload = s.onreadystatechange = null, s.parentNode.tagName == 'HEAD' && r.removeChild(s)); }, r.appendChild(s), setTimeout(() => { a || (a = !0, n && n(Error('Script load timeout'))); }, i || 5e3), s; } return null; } function f() { this.a = 0, this.c = null; } function p(e) { return e.a++, function () { e.a--, g(e); }; } function m(e, t) { e.c = t, g(e); } function g(e) { e.a == 0 && e.c && (e.c(), e.c = null); } function v(e) { this.a = e || '-'; } function b(e, t) { this.c = e, this.f = 4, this.a = 'n'; const n = (t || 'n4').match(/^([nio])([1-9])$/i); n && (this.a = n[1], this.f = parseInt(n[2], 10)); } function y(e) { return `${x(e)} ${e.f}00 300px ${w(e.c)}`; } function w(e) { const t = []; e = e.split(/,\s*/); for (let n = 0; n < e.length; n++) { const i = e[n].replace(/['"]/g, ''); i.indexOf(' ') != -1 || /^\d/.test(i) ? t.push(`'${i}'`) : t.push(i); } return t.join(','); } function S(e) { return e.a + e.f; } function x(e) { let t = 'normal'; return e.a === 'o' ? t = 'oblique' : e.a === 'i' && (t = 'italic'), t; } function C(e) { let t = 4; let n = 'n'; let i = null; return e && ((i = e.match(/(normal|oblique|italic)/i)) && i[1] && (n = i[1].substr(0, 1).toLowerCase()), (i = e.match(/([1-9]00|normal|bold)/i)) && i[1] && (/bold/i.test(i[1]) ? t = 7 : /[1-9]00/.test(i[1]) && (t = parseInt(i[1].substr(0, 1), 10)))), n + t; } function k(e, t) { this.c = e, this.f = e.m.document.documentElement, this.h = t, this.a = new v('-'), this.j = !1 !== t.events, this.g = !1 !== t.classes; } function _(e) { e.g && a(e.f, [e.a.c('wf', 'loading')]), j(e, 'loading'); } function T(e) { if (e.g) { const t = l(e.f, e.a.c('wf', 'active')); const n = []; const i = [e.a.c('wf', 'loading')]; t || n.push(e.a.c('wf', 'inactive')), a(e.f, n, i); }j(e, 'inactive'); } function j(e, t, n) { e.j && e.h[t] && (n ? e.h[t](n.c, S(n)) : e.h[t]()); } function E() { this.c = {}; } function $(e, t, n) { let i; const o = []; for (i in t) if (t.hasOwnProperty(i)) { const r = e.c[i]; r && o.push(r(t[i], n)); } return o; } function A(e, t) { this.c = e, this.f = t, this.a = o(this.c, 'span', { 'aria-hidden': 'true' }, this.f); } function D(e) { r(e.c, 'body', e.a); } function M(e) { return `display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:${w(e.c)};` + `font-style:${x(e)};font-weight:${e.f}00;`; } function N(e, t, n, i, o, r) { this.g = e, this.f = t, this.a = i, this.c = n, this.j = o || 3e3, this.h = r || void 0; } function I(e, t, n, i, o, r, s) { this.v = e, this.B = t, this.c = n, this.a = i, this.s = s || 'BESbswy', this.f = {}, this.w = o || 3e3, this.u = r || null, this.o = this.j = this.h = this.g = null, this.g = new A(this.c, this.s), this.h = new A(this.c, this.s), this.j = new A(this.c, this.s), this.o = new A(this.c, this.s), e = new b(`${this.a.c},serif`, S(this.a)), e = M(e), this.g.a.style.cssText = e, e = new b(`${this.a.c},sans-serif`, S(this.a)), e = M(e), this.h.a.style.cssText = e, e = new b('serif', S(this.a)), e = M(e), this.j.a.style.cssText = e, e = new b('sans-serif', S(this.a)), e = M(e), this.o.a.style.cssText = e, D(this.g), D(this.h), D(this.j), D(this.o); } function R() { if (re === null) { const e = /AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent); re = !!e && (parseInt(e[1], 10) < 536 || parseInt(e[1], 10) === 536 && parseInt(e[2], 10) <= 11); } return re; } function P(e, t, n) { for (const i in oe) if (oe.hasOwnProperty(i) && t === e.f[oe[i]] && n === e.f[oe[i]]) return !0; return !1; } function F(e) { let t; const n = e.g.a.offsetWidth; const i = e.h.a.offsetWidth; (t = n === e.f.serif && i === e.f['sans-serif']) || (t = R() && P(e, n, i)), t ? ne() - e.A >= e.w ? R() && P(e, n, i) && (e.u === null || e.u.hasOwnProperty(e.a.c)) ? L(e, e.v) : L(e, e.B) : O(e) : L(e, e.v); } function O(e) { setTimeout(n(function () { F(this); }, e), 50); } function L(e, t) { setTimeout(n(function () { s(this.g.a), s(this.h.a), s(this.j.a), s(this.o.a), t(this.a); }, e), 0); } function B(e, t, n) { this.c = e, this.a = t, this.f = 0, this.o = this.j = !1, this.s = n; } function H(e) { --e.f == 0 && e.j && (e.o ? (e = e.a, e.g && a(e.f, [e.a.c('wf', 'active')], [e.a.c('wf', 'loading'), e.a.c('wf', 'inactive')]), j(e, 'active')) : T(e.a)); } function U(e) { this.j = e, this.a = new E(), this.h = 0, this.f = this.g = !0; } function z(e, t, i, o, r) { const s = --e.h == 0; (e.f || e.g) && setTimeout(() => { const e = r || null; const l = o || null || {}; if (i.length === 0 && s)T(t.a); else { t.f += i.length, s && (t.j = s); let c; const u = []; for (c = 0; c < i.length; c++) { const d = i[c]; const h = l[d.c]; let f = t.a; let p = d; f.g && a(f.f, [f.a.c('wf', p.c, S(p).toString(), 'loading')]), j(f, 'fontloading', p), f = null, se === null && (se = window.FontFace ? (p = /Gecko.*Firefox\/(\d+)/.exec(window.navigator.userAgent)) ? parseInt(p[1], 10) > 42 : !0 : !1), f = se ? new N(n(t.g, t), n(t.h, t), t.c, d, t.s, h) : new I(n(t.g, t), n(t.h, t), t.c, d, t.s, e, h), u.push(f); } for (c = 0; c < u.length; c++)u[c].start(); } }, 0); } function W(e, t, n) { var i = []; const o = n.timeout; _(t); var i = $(e.a, n, e.c); const r = new B(e.c, t, o); for (e.h = i.length, t = 0, n = i.length; n > t; t++)i[t].load((t, n, i) => { z(e, r, t, n, i); }); } function q(e, t) { this.c = e, this.a = t; } function V(e, t, n) { const i = c(e.c); return e = (e.a.api || 'fast.fonts.net/jsapi').replace(/^.*http(s?):(\/\/)?/, ''), `${i}//${e}/${t}.js${n ? `?v=${n}` : ''}`; } function J(e, t) { this.c = e, this.a = t; } function G(e, t, n) { e ? this.c = e : this.c = t + ae, this.a = [], this.f = [], this.g = n || ''; } function Q(e, t) { for (let n = t.length, i = 0; n > i; i++) { const o = t[i].split(':'); o.length == 3 && e.f.push(o.pop()); let r = ''; o.length == 2 && o[1] != '' && (r = ':'), e.a.push(o.join(r)); } } function Y(e) { if (e.a.length == 0) throw Error('No fonts to load!'); if (e.c.indexOf('kit=') != -1) return e.c; for (var t = e.a.length, n = [], i = 0; t > i; i++)n.push(e.a[i].replace(/ /g, '+')); return t = `${e.c}?family=${n.join('%7C')}`, e.f.length > 0 && (t += `&subset=${e.f.join(',')}`), e.g.length > 0 && (t += `&text=${encodeURIComponent(e.g)}`), t; } function X(e) { this.f = e, this.a = [], this.c = {}; } function K(e) { for (let t = e.f.length, n = 0; t > n; n++) { let i = e.f[n].split(':'); const o = i[0].replace(/\+/g, ' '); let r = ['n4']; if (i.length >= 2) { var s; var a = i[1]; if (s = [], a) for (var a = a.split(','), l = a.length, c = 0; l > c; c++) { var u; if (u = a[c], u.match(/^[\w-]+$/)) { var d = de.exec(u.toLowerCase()); if (d == null)u = ''; else { if (u = d[2], u = u == null || u == '' ? 'n' : ue[u], d = d[1], d == null || d == '')d = '4'; else var h = ce[d]; var d = h || (isNaN(d) ? '4' : d.substr(0, 1)); u = [u, d].join(''); } } else u = ''; u && s.push(u); }s.length > 0 && (r = s), i.length == 3 && (i = i[2], s = [], i = i ? i.split(',') : s, i.length > 0 && (i = le[i[0]]) && (e.c[o] = i)); } for (e.c[o] || (i = le[o]) && (e.c[o] = i), i = 0; i < r.length; i += 1)e.a.push(new b(o, r[i])); } } function Z(e, t) { this.c = e, this.a = t; } function ee(e, t) { this.c = e, this.a = t; } function te(e, t) { this.c = e, this.f = t, this.a = []; } var ne = Date.now || function () { return +new Date(); }; var ie = !!window.FontFace; v.prototype.c = function (e) { for (var t = [], n = 0; n < arguments.length; n++)t.push(arguments[n].replace(/[\W_]+/g, '').toLowerCase()); return t.join(this.a); }, N.prototype.start = function () { function e() { ne() - i >= n.j ? n.f(n.a) : t.fonts.load(y(n.a), n.h).then((t) => { t.length >= 1 ? n.g(n.a) : setTimeout(e, 25); }, () => { n.f(n.a); }); } var t = this.c.m.document; var n = this; var i = ne(); e(); }; var oe = { D: 'serif', C: 'sans-serif' }; var re = null; I.prototype.start = function () { this.f.serif = this.j.a.offsetWidth, this.f['sans-serif'] = this.o.a.offsetWidth, this.A = ne(), F(this); }; var se = null; B.prototype.g = function (e) { const t = this.a; t.g && a(t.f, [t.a.c('wf', e.c, S(e).toString(), 'active')], [t.a.c('wf', e.c, S(e).toString(), 'loading'), t.a.c('wf', e.c, S(e).toString(), 'inactive')]), j(t, 'fontactive', e), this.o = !0, H(this); }, B.prototype.h = function (e) { const t = this.a; if (t.g) { const n = l(t.f, t.a.c('wf', e.c, S(e).toString(), 'active')); const i = []; const o = [t.a.c('wf', e.c, S(e).toString(), 'loading')]; n || i.push(t.a.c('wf', e.c, S(e).toString(), 'inactive')), a(t.f, i, o); }j(t, 'fontinactive', e), H(this); }, U.prototype.load = function (e) { this.c = new i(this.j, e.context || this.j), this.g = !1 !== e.events, this.f = !1 !== e.classes, W(this, new k(this.c, e), e); }, q.prototype.load = function (e) { function t() { if (o[`__mti_fntLst${n}`]) { let i; const r = o[`__mti_fntLst${n}`](); const s = []; if (r) for (let a = 0; a < r.length; a++) { const l = r[a].fontfamily; void 0 != r[a].fontStyle && void 0 != r[a].fontWeight ? (i = r[a].fontStyle + r[a].fontWeight, s.push(new b(l, i))) : s.push(new b(l)); }e(s); } else setTimeout(() => { t(); }, 50); } var n = this.a.projectId; const i = this.a.version; if (n) { var o = this.c.m; h(this.c, V(this, n, i), (n) => { n ? e([]) : t(); }).id = `__MonotypeAPIScript__${n}`; } else e([]); }, J.prototype.load = function (e) { let t; let n; let i = this.a.urls || []; const o = this.a.families || []; const r = this.a.testStrings || {}; const s = new f(); for (t = 0, n = i.length; n > t; t++)d(this.c, i[t], p(s)); const a = []; for (t = 0, n = o.length; n > t; t++) if (i = o[t].split(':'), i[1]) for (let l = i[1].split(','), c = 0; c < l.length; c += 1)a.push(new b(i[0], l[c])); else a.push(new b(i[0])); m(s, () => { e(a, r); }); }; var ae = '//fonts.googleapis.com/css'; var le = {
    latin: 'BESbswy', cyrillic: '&#1081;&#1103;&#1046;', greek: '&#945;&#946;&#931;', khmer: '&#x1780;&#x1781;&#x1782;', Hanuman: '&#x1780;&#x1781;&#x1782;',
  }; var ce = {
    thin: '1', extralight: '2', 'extra-light': '2', ultralight: '2', 'ultra-light': '2', light: '3', regular: '4', book: '4', medium: '5', 'semi-bold': '6', semibold: '6', 'demi-bold': '6', demibold: '6', bold: '7', 'extra-bold': '8', extrabold: '8', 'ultra-bold': '8', ultrabold: '8', black: '9', heavy: '9', l: '3', r: '4', b: '7',
  }; var ue = {
    i: 'i', italic: 'i', n: 'n', normal: 'n',
  }; var de = /^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/; const he = { Arimo: !0, Cousine: !0, Tinos: !0 }; Z.prototype.load = function (e) {
    const t = new f();
    const n = this.c; const i = new G(this.a.api, c(n), this.a.text); const
      o = this.a.families; Q(i, o); const r = new X(o); K(r), d(n, Y(i), p(t)), m(t, () => { e(r.a, r.c, he); });
  }, ee.prototype.load = function (e) { const t = this.a.id; const n = this.c.m; t ? h(this.c, `${this.a.api || 'https://use.typekit.net'}/${t}.js`, (t) => { if (t)e([]); else if (n.Typekit && n.Typekit.config && n.Typekit.config.fn) { t = n.Typekit.config.fn; for (var i = [], o = 0; o < t.length; o += 2) for (let r = t[o], s = t[o + 1], a = 0; a < s.length; a++)i.push(new b(r, s[a])); try { n.Typekit.load({ events: !1, classes: !1, async: !0 }); } catch (l) {}e(i); } }, 2e3) : e([]); }, te.prototype.load = function (e) { const t = this.f.id; const n = this.c.m; const i = this; t ? (n.__webfontfontdeckmodule__ || (n.__webfontfontdeckmodule__ = {}), n.__webfontfontdeckmodule__[t] = function (t, n) { for (let o = 0, r = n.fonts.length; r > o; ++o) { const s = n.fonts[o]; i.a.push(new b(s.name, C(`font-weight:${s.weight};font-style:${s.style}`))); }e(i.a); }, h(this.c, `${c(this.c) + (this.f.api || '//f.fontdeck.com/s/css/js/') + u(this.c)}/${t}.js`, (t) => { t && e([]); })) : e([]); }; const fe = new U(window); fe.a.c.custom = function (e, t) { return new J(t, e); }, fe.a.c.fontdeck = function (e, t) { return new te(t, e); }, fe.a.c.monotype = function (e, t) { return new q(t, e); }, fe.a.c.typekit = function (e, t) { return new ee(t, e); }, fe.a.c.google = function (e, t) { return new Z(t, e); }; const pe = { load: n(fe.load, fe) }; typeof define === 'function' && define.amd ? define(() => pe) : typeof module !== 'undefined' && module.exports ? module.exports = pe : (window.WebFont = pe, window.WebFontConfig && fe.load(window.WebFontConfig));
}());
